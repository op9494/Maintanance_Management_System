{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/op-pro/Desktop/Finalyear project/Admin/src/screens/ServiceConfermation.js\";\nimport * as firebase from 'firebase';\nimport React, { Component, useState } from 'react';\nimport Button from \"../components/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TextBase } from \"react-native-web/dist/index\";\nimport { Userloname } from \"./AuthLoadingScreen\";\nimport { Userlo } from \"./AuthLoadingScreen\";\nimport { ListItem, Overlay, Card } from 'react-native-elements';\nimport Background from \"../components/Background\";\nimport Toast from 'react-native-tiny-toast';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDslHhZc8QSFrsonWJlsvBXBm3vesReV84\",\n  authDomain: \"complaint-a4db2.firebaseapp.com\",\n  databaseURL: \"https://complaint-a4db2.firebaseio.com\",\n  projectId: \"complaint-a4db2\",\n  storageBucket: \"complaint-a4db2.appspot.com\",\n  messagingSenderId: \"966569668349\",\n  appId: \"1:966569668349:web:24e2908bf9f3b5ffd6d894\",\n  measurementId: \"G-VQXSNP4LCQ\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nfunction onconfirm(user_id, Form_Id) {\n  var date = new Date().getDate();\n  var month = new Date().getMonth() + 1;\n  var year = new Date().getFullYear();\n  var hours = new Date().getHours();\n  var min = new Date().getMinutes();\n  var sec = new Date().getSeconds();\n  cdate = date + '/' + month + '/' + year + ' ' + hours + ':' + min + ':' + sec;\n  console.log(cdate);\n  console.log(\"reolve issue is addeding in list\");\n  firebase.database().ref('Resolved_issues/' + user_id + '/' + Form_Id + '/').set({\n    DateTime: cdate\n  });\n  console.log(\"reolve issue is addeded in list\");\n  console.log(\" issue is updated in list\");\n  firebase.database().ref('Memberjobs/' + user_id).update({\n    Job: \"NULL\"\n  });\n  firebase.database().ref('Form/' + Form_Id).update({\n    ZResolved_By: user_id,\n    ZResolved_By: Userloname(),\n    Status: \"True\"\n  });\n  Toast.showSuccess('Status Updated updated');\n  console.log(\"Sucessful\");\n}\n\nfunction onresolvedPressed(id) {\n  var uid = Userlo();\n  Alert.alert('Acknowledge', 'Conform that you have resolved the Issue rised by the user', [{\n    text: 'Cancel',\n    onPress: function onPress() {\n      return console.log('Cancel Pressed');\n    },\n    style: 'cancel'\n  }, {\n    text: 'Confirm',\n    onPress: function onPress() {\n      return onconfirm(uid, id);\n    },\n    style: 'cancel'\n  }], {\n    cancelable: false\n  });\n}\n\nvar ServiceConfermation = function (_Component) {\n  _inherits(ServiceConfermation, _Component);\n\n  function ServiceConfermation() {\n    var _this;\n\n    _classCallCheck(this, ServiceConfermation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ServiceConfermation).call(this));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(ServiceConfermation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var uid = Userlo();\n      firebase.database().ref('Memberjobs/' + uid).once('value', function (snapshot) {\n        var data = snapshot.val();\n        console.log(\"\");\n        console.log(\"Job:\", data.Job);\n        var id = data.Job;\n\n        if (id == \"NULL\") {\n          Alert.alert(\"Message\", \"No Undertaken any Issues\\n please select the job from issues list menu\");\n        } else {\n          firebase.database().ref('Form/' + id).on('value', function (snapshot) {\n            var data1 = snapshot.val();\n            var items1 = Object.values(data1);\n            console.log(\"df\" + items1);\n\n            for (var i = 0; i < items1.length; i++) {\n              _this2.setState({\n                data: [].concat(_toConsumableArray(_this2.state.data), [items1[i]])\n              });\n            }\n\n            console.log(data1);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Background, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        }\n      }, this.state.data.length > 0 ? React.createElement(Card, {\n        title: 'Form id ' + this.state.data[3],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        }\n      }, \"Mail_Id     :\", this.state.data[4]), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        }\n      }, \"Catagory    :\", this.state.data[0]), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        }\n      }, \"System_Id   :\", this.state.data[6]), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        }\n      }, \"Description :\"), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        }\n      }, \"                 \", this.state.data[2]), React.createElement(Button, {\n        mode: \"contained\",\n        onPress: function onPress() {\n          return onresolvedPressed(_this3.state.data[3]);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        }\n      }, \"Resolved\")) : React.createElement(Text, {\n        style: styles.nodata,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        }\n      }, \"No data found !!\"));\n    }\n  }]);\n\n  return ServiceConfermation;\n}(Component);\n\nexport { ServiceConfermation as default };\n;\nvar styles = StyleSheet.create({\n  container: {},\n  nodata: {\n    fontSize: 20,\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n    color: \"black\",\n    padding: 130\n  }\n});","map":{"version":3,"sources":["/home/op-pro/Desktop/Finalyear project/Admin/src/screens/ServiceConfermation.js"],"names":["firebase","React","Component","useState","Button","TextBase","Userloname","Userlo","ListItem","Overlay","Card","Background","Toast","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","onconfirm","user_id","Form_Id","date","Date","getDate","month","getMonth","year","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","cdate","console","log","database","ref","set","DateTime","update","Job","ZResolved_By","Status","showSuccess","onresolvedPressed","id","uid","Alert","alert","text","onPress","style","cancelable","ServiceConfermation","state","data","once","snapshot","val","on","data1","items1","Object","values","i","setState","styles","container","nodata","StyleSheet","create","fontSize","textAlign","fontWeight","color","padding"],"mappings":"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","sourcesContent":["import * as firebase from 'firebase';\nimport React, { Component,useState } from 'react';\nimport Button from \"../components/Button\";\nimport { TouchableOpacity,Alert, StyleSheet, Text, View,FlatList,Platform,ScrollView, TextBase} from \"react-native\";\n// Optionally import the services that you want to use\n//import \"firebase/auth\";\n//import \"firebase/database\";\n//import \"firebase/firestore\";\n//import \"firebase/functions\";\n//import \"firebase/storage\";\nimport {Userloname} from \"./AuthLoadingScreen\"\nimport {Userlo} from \"./AuthLoadingScreen\";\nimport { ListItem,Overlay, Card } from 'react-native-elements'\nimport Background from '../components/Background';\nimport Toast from 'react-native-tiny-toast';\n\n\n// Initialize Firebase\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDslHhZc8QSFrsonWJlsvBXBm3vesReV84\",\n    authDomain: \"complaint-a4db2.firebaseapp.com\",\n    databaseURL: \"https://complaint-a4db2.firebaseio.com\",\n    projectId: \"complaint-a4db2\",\n    storageBucket: \"complaint-a4db2.appspot.com\",\n    messagingSenderId: \"966569668349\",\n    appId: \"1:966569668349:web:24e2908bf9f3b5ffd6d894\",\n    measurementId: \"G-VQXSNP4LCQ\"\n};\n\nif (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n}\n \nfunction onconfirm(user_id,Form_Id){\n  var date = new Date().getDate(); //Current Date\n    var month = new Date().getMonth() + 1; //Current Month\n    var year = new Date().getFullYear(); //Current Year\n    var hours = new Date().getHours(); //Current Hours\n    var min = new Date().getMinutes(); //Current Minutes\n    var sec = new Date().getSeconds(); //Current Seconds\n    cdate=date +'/' + month + '/' + year + ' ' + hours + ':' + min + ':' + sec\n    console.log(cdate)\n  console.log(\"reolve issue is addeding in list\")\n  firebase.database().ref('Resolved_issues/'+user_id+'/'+Form_Id+'/').set({\n    DateTime:cdate\n  });\n  console.log(\"reolve issue is addeded in list\")\n  console.log(\" issue is updated in list\")\n  firebase.database().ref('Memberjobs/'+user_id).update({\n    Job:\"NULL\",\n  });\n  firebase.database().ref('Form/'+Form_Id).update({\n    ZResolved_By:user_id,\n    ZResolved_By:Userloname(),\n    Status: \"True\"\n  });\n  Toast.showSuccess('Status Updated updated')  \n  console.log(\"Sucessful\")\n\n}\n\nfunction onresolvedPressed(id){\n  \n  const uid=Userlo()\n    Alert.alert(\n      'Acknowledge',\n      'Conform that you have resolved the Issue rised by the user',\n      [\n        {\n          text: 'Cancel',\n          onPress: () => console.log('Cancel Pressed'),\n          style: 'cancel',\n        },\n        { text: 'Confirm', onPress: () => onconfirm(uid,id),style: 'cancel'},        \n      ],\n      { cancelable: false }\n    );\n}\nexport default class ServiceConfermation extends Component {  \n  constructor(){\n    super();\n    this.state={\n\n      data:[]\n    }\n    \n  }\n  \n  componentDidMount(){\n    const uid=Userlo()\n    firebase.database().ref('Memberjobs/'+uid).once('value', (snapshot)=> {\n      let data = snapshot.val();\n      console.log(\"\")\n  //   var items = JSON.parse(data);\n      console.log(\"Job:\",data.Job);\n      const id=data.Job\n      if (id==\"NULL\"){\n        Alert.alert(\n          \"Message\",\n          \"No Undertaken any Issues\\n please select the job from issues list menu\")\n      }\n      else{\n        firebase.database().ref('Form/'+id).on('value', (snapshot)=> {\n          let data1 = snapshot.val();\n          var items1 = Object.values(data1);\n          console.log(\"df\"+items1)\n         for(let i=0;i<items1.length;i++){\n            this.setState({\n              data:[...this.state.data,items1[i]],\n            })\n          }\n          console.log(data1);\n        }); \n      }\n     \n    });\n  }\n  \n  render(){\n    \n    return (\n\n    <Background  style={styles.container}>\n    {this.state.data.length > 0 ?\n    <Card title={'Form id '+this.state.data[3]}>\n\n    <Text>Mail_Id     :{this.state.data[4]}</Text>\n<Text>Catagory    :{this.state.data[0]}</Text>\n<Text>System_Id   :{this.state.data[6]}</Text>\n<Text>Description :</Text>\n<Text>                 {this.state.data[2]}</Text>\n<Button mode=\"contained\" onPress={()=>onresolvedPressed(this.state.data[3])}>\n        Resolved\n      </Button>\n    \n    </Card> :\n    <Text style={styles.nodata}>No data found !!</Text>\n\n    } \n  </Background>\n  );\n  } \n};\nconst styles = StyleSheet.create({\n  container: {\n  },\n  nodata:{\n    fontSize:20,\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n    color: \"black\",\n    padding: 130\n\n  }\n});"]},"metadata":{},"sourceType":"module"}
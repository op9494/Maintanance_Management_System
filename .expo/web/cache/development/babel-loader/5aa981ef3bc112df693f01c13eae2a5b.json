{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/op-pro/Desktop/Finalyear project/Admin/src/screens/AdminProcessview.js\";\nimport * as firebase from 'firebase';\nimport React, { Component, useState } from 'react';\nimport Button from \"../components/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TextBase } from \"react-native-web/dist/index\";\nimport { Userlo } from \"./AuthLoadingScreen\";\nimport { ListItem, Overlay } from 'react-native-elements';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDslHhZc8QSFrsonWJlsvBXBm3vesReV84\",\n  authDomain: \"complaint-a4db2.firebaseapp.com\",\n  databaseURL: \"https://complaint-a4db2.firebaseio.com\",\n  projectId: \"complaint-a4db2\",\n  storageBucket: \"complaint-a4db2.appspot.com\",\n  messagingSenderId: \"966569668349\",\n  appId: \"1:966569668349:web:24e2908bf9f3b5ffd6d894\",\n  measurementId: \"G-VQXSNP4LCQ\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nfunction infoFloat(id) {\n  var uid = Userlo();\n  firebase.database().ref('Form/' + id).on('value', function (snapshot) {\n    var data = snapshot.val();\n    var items = Object.values(data);\n    console.log(\"entering into alert\", items);\n    Alert.alert('Details of an Form Id:' + items[3], 'System ID  :' + items[6] + \"\\n\" + 'status:   ' + items[5] + \"\\n\" + 'Catagory    :' + items[0] + \"\\n\" + 'DOS            :' + items[1] + \"\\n\" + 'Description:' + '\\n' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t' + items[2] + \"\\n\\n\" + '\\b**On proceed the You are taking the responsiblity to resolve issue**' + '\\n' + '**To know the system Location check the system finder in an dashboard**', [{\n      text: 'Cancel',\n      onPress: function onPress() {\n        return console.log('Cancel Pressed');\n      },\n      style: 'cancel'\n    }], {\n      cancelable: false\n    });\n  });\n}\n\nvar AdminProcessview = function (_Component) {\n  _inherits(AdminProcessview, _Component);\n\n  function AdminProcessview() {\n    var _this;\n\n    _classCallCheck(this, AdminProcessview);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminProcessview).call(this));\n    _this.state = {\n      data: []\n    };\n    firebase.database().ref('Form/').once('value', function (snapshot) {\n      var data = snapshot.val();\n      var items = Object.values(data);\n      console.log(data);\n      console.log(\"status:\", items);\n      console.log(\"status:\", items[2].Status);\n\n      for (var i = 0; i < items.length; i++) {\n        if (items[i].Status == \"Processing\") {\n          _this.setState({\n            data: [].concat(_toConsumableArray(_this.state.data), [{\n              Id: items[i]\n            }])\n          });\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(AdminProcessview, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        }\n      }, this.state.data.length > 0 ? this.state.data.map(function (item, i) {\n        return React.createElement(ListItem, {\n          topDivider: true,\n          key: i,\n          title: item.Id.Id,\n          subtitle: item.Id.Catagory,\n          leftIcon: {\n            name: 'av-timer'\n          },\n          bottomDivider: true,\n          onPress: function onPress() {\n            return infoFloat(item.Id.Id);\n          },\n          chevron: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          }\n        });\n      }) : React.createElement(Text, {\n        style: styles.nodata,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }, \"No data found\"));\n    }\n  }]);\n\n  return AdminProcessview;\n}(Component);\n\nexport { AdminProcessview as default };\n;\nvar styles = StyleSheet.create({\n  container: {},\n  nodata: {\n    fontSize: 20,\n    textAlign: \"justify\",\n    fontWeight: \"bold\",\n    color: \"black\",\n    padding: 130\n  }\n});","map":{"version":3,"sources":["/home/op-pro/Desktop/Finalyear project/Admin/src/screens/AdminProcessview.js"],"names":["firebase","React","Component","useState","Button","TextBase","Userlo","ListItem","Overlay","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","infoFloat","id","uid","database","ref","on","snapshot","data","val","items","Object","values","console","log","Alert","alert","text","onPress","style","cancelable","AdminProcessview","state","once","Status","i","setState","Id","styles","container","map","item","Catagory","name","nodata","StyleSheet","create","fontSize","textAlign","fontWeight","color","padding"],"mappings":"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","sourcesContent":["import * as firebase from 'firebase';\nimport React, { Component,useState } from 'react';\nimport Button from \"../components/Button\";\nimport { TouchableOpacity,Alert, StyleSheet, Text, View,FlatList,Platform,ScrollView, TextBase} from \"react-native\";\n// Optionally import the services that you want to use\n//import \"firebase/auth\";\n//import \"firebase/database\";\n//import \"firebase/firestore\";\n//import \"firebase/functions\";\n//import \"firebase/storage\";\nimport {Userlo} from \"./AuthLoadingScreen\";\nimport { ListItem,Overlay } from 'react-native-elements'\n\n// Initialize Firebase\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDslHhZc8QSFrsonWJlsvBXBm3vesReV84\",\n    authDomain: \"complaint-a4db2.firebaseapp.com\",\n    databaseURL: \"https://complaint-a4db2.firebaseio.com\",\n    projectId: \"complaint-a4db2\",\n    storageBucket: \"complaint-a4db2.appspot.com\",\n    messagingSenderId: \"966569668349\",\n    appId: \"1:966569668349:web:24e2908bf9f3b5ffd6d894\",\n    measurementId: \"G-VQXSNP4LCQ\"\n};\n\nif (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n}\nfunction infoFloat(id){\n  const uid=Userlo()\n  firebase.database().ref('Form/'+id).on('value', (snapshot)=> {\n    let data = snapshot.val();\n    var items = Object.values(data);\n    console.log(\"entering into alert\",items)\n    Alert.alert(\n      'Details of an Form Id:'+items[3],\n      'System ID  :'+items[6]+\"\\n\"+'status:   '+items[5]+\"\\n\"+'Catagory    :'+items[0]+\"\\n\"+'DOS            :'+items[1]+\"\\n\"+'Description:'+'\\n'+'\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t'+items[2]+\"\\n\\n\"+'\\b**On proceed the You are taking the responsiblity to resolve issue**'+'\\n'+'**To know the system Location check the system finder in an dashboard**',      \n      [\n        {\n          text: 'Cancel',\n          onPress: () => console.log('Cancel Pressed'),\n          style: 'cancel',\n        },\n        \n      ],\n      { cancelable: false }\n    );\n  }); \n}\nexport default class AdminProcessview extends Component {  \n  constructor(){\n    super();\n    this.state={\n\n      data:[]\n    }\n    firebase.database().ref('Form/').once('value', (snapshot)=> {\n      let data = snapshot.val();\n      var items = Object.values(data);\n\n//      console.log(\"object javascript\");\n     console.log(data);\n     console.log(\"status:\",items);\n     console.log(\"status:\",items[2].Status);\n\n      \n     for(let i=0;i<items.length;i++){\n       if(items[i].Status==\"Processing\"){\n        this.setState({\n          data:[...this.state.data,{Id:items[i]}],\n        })\n      }\n      }\n\n//      console.log(\"sucess: \",this.state.data)\n    }); \n  }\n  \n  render(){\n    \n    return (\n\n    <View  style={styles.container}>\n      {this.state.data.length > 0 ?\n      this.state.data.map((item, i) => (\n      <ListItem \n        topDivider\n        key={i}\n        title={item.Id.Id}\n        subtitle={item.Id.Catagory}\n        leftIcon={{name:'av-timer'}}\n        bottomDivider\n        onPress={()=>infoFloat(item.Id.Id)}\n        chevron\n      />\n    )):<Text style={styles.nodata}>No data found</Text>\n  }\n  </View>\n  );\n  } \n};\nconst styles = StyleSheet.create({\n  container: {\n  },\n  nodata:{\n    fontSize:20,\n    textAlign: \"justify\",\n    fontWeight: \"bold\",\n    color: \"black\",\n    padding: 130\n  }\n});"]},"metadata":{},"sourceType":"module"}
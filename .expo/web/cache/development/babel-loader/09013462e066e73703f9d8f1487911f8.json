{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/op-pro/Desktop/Finalyear project/Admin/src/screens/AdminVisualrep.js\";\n\nimport React, { memo } from \"react\";\nimport Background from \"../components/Background\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { AlertScrollView } from \"react-native-web/dist/index\";\nimport { TextBase } from \"react-native-web/dist/index\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from 'react-native-chart-kit';\nimport * as firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDslHhZc8QSFrsonWJlsvBXBm3vesReV84\",\n  authDomain: \"complaint-a4db2.firebaseapp.com\",\n  databaseURL: \"https://complaint-a4db2.firebaseio.com\",\n  projectId: \"complaint-a4db2\",\n  storageBucket: \"complaint-a4db2.appspot.com\",\n  messagingSenderId: \"966569668349\",\n  appId: \"1:966569668349:web:24e2908bf9f3b5ffd6d894\",\n  measurementId: \"G-VQXSNP4LCQ\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nthis.state = {\n  data: []\n};\nfirebase.database().ref('Form/').once('value', function (snapshot) {\n  var CountHardware = 0;\n  var CountSoftwere = 0;\n  var CountServer = 0;\n  var CountPower = 0;\n  var CountOs = 0;\n  var CountOthers = 0;\n  var rdata = snapshot.val();\n  var ritems = Object.values(rdata);\n  console.log(\"counting data\");\n\n  for (var i = 0; i < ritems.length; i++) {\n    if (ritems[i].Catagory == \"SERVER\") {\n      CountServer += 1;\n    } else if (ritems[i].Catagory == \"SOFTWERE\") {\n      CountSoftwere += 1;\n    } else if (ritems[i].Catagory == \"OS\") {\n      CountOs += 1;\n    } else if (ritems[i].Catagory == \"POWER\") {\n      CountPower += 1;\n    } else if (ritems[i].Catagory == \"HARDWARE\") {\n      CountHardware += 1;\n    } else if (ritems[i].Catagory == \"OTHER\") {\n      CountOthers += 1;\n    }\n  }\n\n  _this.setState({\n    data: [].concat(_toConsumableArray(_this.state.data), [{\n      CountHardware: CountHardware,\n      CountSoftwere: CountSoftwere,\n      CountServer: CountServer,\n      CountPower: CountPower,\n      CountOs: CountOs,\n      CountOthers: CountOthers\n    }])\n  });\n\n  console.log(\"Counted=\", CountOthers, CountPower, CountServer, CountSoftwere, CountHardware);\n  var arr = [CountHardware, CountSoftwere, CountServer, CountPower, CountOs, CountOthers];\n});\nconsole.log(\"arrat\", this.state);\nvar barData = {\n  labels: ['Hardware', 'Softwere', 'Server', 'Power', 'Os', 'Others'],\n  datasets: [{\n    data: [dat1()]\n  }]\n};\nvar chartConfig1 = {\n  backgroundColor: '#e26a00',\n  backgroundGradientFrom: '#fb8c00',\n  backgroundGradientTo: '#ffa726',\n  decimalPlaces: 2,\n  color: function color() {\n    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return \"rgba(255, 255, 255, \" + opacity + \")\";\n  },\n  style: {\n    borderRadius: 16\n  }\n};\nexport var Chart1 = function Chart1() {\n  return React.createElement(BarChart, {\n    data: barData,\n    width: Dimensions.get('window').width,\n    height: 220,\n    yAxisLabel: '',\n    chartConfig: chartConfig1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    }\n  });\n};\nvar styles = StyleSheet.create({\n  image: {\n    width: 40,\n    height: 40\n  }\n});\nexport default memo(Chart1);","map":{"version":3,"sources":["/home/op-pro/Desktop/Finalyear project/Admin/src/screens/AdminVisualrep.js"],"names":["React","memo","Background","AlertScrollView","TextBase","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","state","data","database","ref","once","snapshot","CountHardware","CountSoftwere","CountServer","CountPower","CountOs","CountOthers","rdata","val","ritems","Object","values","console","log","i","Catagory","setState","arr","barData","labels","datasets","dat1","chartConfig1","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","style","borderRadius","Chart1","Dimensions","get","width","styles","StyleSheet","create","image","height"],"mappings":"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","sourcesContent":["import React, { memo } from \"react\";\nimport Background from \"../components/Background\";\nimport { TouchableOpacity,Image, Dimensions,StyleSheet, Text, View,FlatList,ScrollView, Platform, AlertScrollView, TextBase, Alert} from \"react-native\";\nimport {\n    LineChart,\n    BarChart,\n    PieChart,\n    ProgressChart,\n    ContributionGraph,\n    StackedBarChart\n  } from 'react-native-chart-kit'\nimport * as firebase from 'firebase';\n\n\n// Initialize Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDslHhZc8QSFrsonWJlsvBXBm3vesReV84\",\n  authDomain: \"complaint-a4db2.firebaseapp.com\",\n  databaseURL: \"https://complaint-a4db2.firebaseio.com\",\n  projectId: \"complaint-a4db2\",\n  storageBucket: \"complaint-a4db2.appspot.com\",\n  messagingSenderId: \"966569668349\",\n  appId: \"1:966569668349:web:24e2908bf9f3b5ffd6d894\",\n  measurementId: \"G-VQXSNP4LCQ\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\nthis.state={\n    data:[],\n  }\n\n    firebase.database().ref('Form/').once('value', (snapshot)=> {\n    \n        var CountHardware=0;\n        var CountSoftwere=0;\n        var CountServer=0;\n        var CountPower=0;\n        var CountOs=0;\n        var CountOthers=0;\n        let rdata = snapshot.val();\n        var ritems = Object.values(rdata);\n          console.log(\"counting data\");\n         \n       for(let i=0;i<ritems.length;i++){\n           if (ritems[i].Catagory==\"SERVER\"){\n               CountServer+=1\n           }\n           else if(ritems[i].Catagory==\"SOFTWERE\"){\n            CountSoftwere+=1\n           }\n           else if(ritems[i].Catagory==\"OS\"){\n            CountOs+=1\n          }else if(ritems[i].Catagory==\"POWER\"){\n            CountPower+=1\n          }else if(ritems[i].Catagory==\"HARDWARE\"){\n            CountHardware+=1\n          }\n          else if(ritems[i].Catagory==\"OTHER\"){\n            CountOthers+=1\n          }\n        }\n        this.setState({\n            data:[...this.state.data,{CountHardware,CountSoftwere,CountServer, CountPower, CountOs, CountOthers}],\n          })\n        console.log(\"Counted=\",CountOthers,CountPower,CountServer,CountSoftwere,CountHardware)\n        const arr=[CountHardware,CountSoftwere,CountServer, CountPower, CountOs, CountOthers]\n      });\n\nconsole.log(\"arrat\",this.state)\nconst barData = {\n    labels: ['Hardware', 'Softwere', 'Server', 'Power', 'Os', 'Others'],\n    datasets: [\n      {\n        data: [dat1()],\n      },\n    ],\n    }\nconst chartConfig1={\n    backgroundColor: '#e26a00',\n      backgroundGradientFrom: '#fb8c00',\n      backgroundGradientTo: '#ffa726',\n      decimalPlaces: 2, // optional, defaults to 2dp\n      color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n      style: {\n        borderRadius: 16\n      }\n\n}\nexport  const Chart1 = () => (\n\n    <BarChart\n    // style={graphStyle}\n    data={barData}\n    width={Dimensions.get('window').width}\n    height={220}\n    yAxisLabel={''}\n    chartConfig={chartConfig1}>\n    </BarChart>\n);\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 40,\n    height: 40\n  }\n});\n\nexport default memo(Chart1);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React, { memo } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport Background from \"../components/Background\";\nimport { theme } from \"../core/theme\";\nimport { FIREBASE_CONFIG } from \"../core/config\";\nimport Toast from 'react-native-tiny-toast';\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(FIREBASE_CONFIG);\n}\n\nvar DatabaseAssets = function DatabaseAssets(_ref) {\n  var navigation = _ref.navigation;\n  return \"hi\";\n};\n\nexport function IssueCount() {\n  firebase.database().ref('Form/').once('value', function (snapshot) {\n    var data = snapshot.val();\n    var items = Object.values(data);\n    var isscount = 0;\n\n    for (var _i = 0; _i < items.length; _i++) {\n      if (items[_i].Status == \"False\") {\n        isscount += 1;\n      }\n    }\n\n    console.log(\"returning issue count: \", isscount);\n    return isscount;\n  });\n}\nexport function ResolvedCount() {\n  firebase.database().ref('Form/').once('value', function (snapshot) {\n    var data = snapshot.val();\n    var items = Object.values(data);\n    var rsscount = 0;\n\n    for (var _i2 = 0; _i2 < items.length; _i2++) {\n      if (items[_i2].Status == \"True\") {\n        rsscount += 1;\n      }\n    }\n\n    console.log(\"returning issue count: \", rsscount);\n    return rsscount;\n  });\n}\nexport function ProcessingCount() {\n  var _this = this;\n\n  this.state = {\n    prrcount: \"\"\n  };\n  firebase.database().ref('Form/').once('value', function (snapshot) {\n    var data = snapshot.val();\n    var items = Object.values(data);\n\n    for (var _i3 = 0; _i3 < items.length; _i3++) {\n      if (items[_i3].Status == \"False\") {\n        prrcount += 1;\n      }\n    }\n\n    console.log(\"returning Processing count: \", prrcount);\n\n    _this.setState({\n      data: [].concat(_toConsumableArray(_this.state.data), [{\n        Id: items[i]\n      }])\n    });\n  });\n  return prrcount;\n}\nexport default memo(DatabaseAssets);","map":{"version":3,"sources":["/home/op-pro/Desktop/Finalyear project/Admin/src/screens/DatabaseAssets.js"],"names":["React","memo","firebase","Background","theme","FIREBASE_CONFIG","Toast","apps","length","initializeApp","DatabaseAssets","navigation","IssueCount","database","ref","once","snapshot","data","val","items","Object","values","isscount","i","Status","console","log","ResolvedCount","rsscount","ProcessingCount","state","prrcount","setState","Id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,UAAP;AACA,SAASC,KAAT;AACA,SAASC,eAAT;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,IAAI,CAACJ,QAAQ,CAACK,IAAT,CAAcC,MAAnB,EAA2B;AACzBN,EAAAA,QAAQ,CAACO,aAAT,CAAuBJ,eAAvB;AACD;;AAGD,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC3C,SAAO,IAAP;AACC,CAFD;;AAGA,OAAO,SAASC,UAAT,GAAqB;AAC1BV,EAAAA,QAAQ,CAACW,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,EAAiCC,IAAjC,CAAsC,OAAtC,EAA+C,UAACC,QAAD,EAAa;AAC1D,QAAIC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAX;AACA,QAAIC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcJ,IAAd,CAAZ;AACD,QAAIK,QAAQ,GAAC,CAAb;;AACC,SAAI,IAAIC,EAAC,GAAC,CAAV,EAAYA,EAAC,GAACJ,KAAK,CAACX,MAApB,EAA2Be,EAAC,EAA5B,EAA+B;AAC9B,UAAGJ,KAAK,CAACI,EAAD,CAAL,CAASC,MAAT,IAAiB,OAApB,EAA4B;AAC3BF,QAAAA,QAAQ,IAAE,CAAV;AACD;AACA;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCJ,QAAvC;AACA,WAAOA,QAAP;AAED,GAZD;AAcD;AAED,OAAO,SAASK,aAAT,GAAwB;AAC7BzB,EAAAA,QAAQ,CAACW,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,EAAiCC,IAAjC,CAAsC,OAAtC,EAA+C,UAACC,QAAD,EAAa;AAC1D,QAAIC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAX;AACA,QAAIC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcJ,IAAd,CAAZ;AACD,QAAIW,QAAQ,GAAC,CAAb;;AACC,SAAI,IAAIL,GAAC,GAAC,CAAV,EAAYA,GAAC,GAACJ,KAAK,CAACX,MAApB,EAA2Be,GAAC,EAA5B,EAA+B;AAE9B,UAAGJ,KAAK,CAACI,GAAD,CAAL,CAASC,MAAT,IAAiB,MAApB,EAA2B;AAC1BI,QAAAA,QAAQ,IAAE,CAAV;AACD;AACA;;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCE,QAAvC;AACA,WAAOA,QAAP;AACD,GAZD;AAaD;AACD,OAAO,SAASC,eAAT,GAA0B;AAAA;;AAC/B,OAAKC,KAAL,GAAW;AACTC,IAAAA,QAAQ,EAAC;AADA,GAAX;AAIA7B,EAAAA,QAAQ,CAACW,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,EAAiCC,IAAjC,CAAsC,OAAtC,EAA+C,UAACC,QAAD,EAAa;AAC1D,QAAIC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAX;AACA,QAAIC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcJ,IAAd,CAAZ;;AAEA,SAAI,IAAIM,GAAC,GAAC,CAAV,EAAYA,GAAC,GAACJ,KAAK,CAACX,MAApB,EAA2Be,GAAC,EAA5B,EAA+B;AAE9B,UAAGJ,KAAK,CAACI,GAAD,CAAL,CAASC,MAAT,IAAiB,OAApB,EAA4B;AAC3BO,QAAAA,QAAQ,IAAE,CAAV;AACD;AACA;;AACDN,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CK,QAA5C;;AACA,IAAA,KAAI,CAACC,QAAL,CAAc;AACZf,MAAAA,IAAI,+BAAK,KAAI,CAACa,KAAL,CAAWb,IAAhB,IAAqB;AAACgB,QAAAA,EAAE,EAACd,KAAK,CAACI,CAAD;AAAT,OAArB;AADQ,KAAd;AAGD,GAdD;AAeA,SAAOQ,QAAP;AACD;AAKD,eAAe9B,IAAI,CAACS,cAAD,CAAnB","sourcesContent":["import React, { memo } from \"react\";\nimport { ActivityIndicator, Alert } from \"react-native\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport Background from \"../components/Background\";\nimport { theme } from \"../core/theme\";\nimport { FIREBASE_CONFIG } from \"../core/config\";\nimport Toast from 'react-native-tiny-toast';\n// Initialize Firebase\nif (!firebase.apps.length) {\n  firebase.initializeApp(FIREBASE_CONFIG);\n}\n\n\nconst DatabaseAssets = ({ navigation }) => {\nreturn \"hi\"\n}\nexport function IssueCount(){\n  firebase.database().ref('Form/').once('value', (snapshot)=> {\n    let data = snapshot.val();\n    var items = Object.values(data);\n   var isscount=0;\n    for(let i=0;i<items.length;i++){\n     if(items[i].Status==\"False\"){\n      isscount+=1\n    }\n    }\n    console.log(\"returning issue count: \", isscount)\n    return isscount\n    \n  }); \n  \n}\n\nexport function ResolvedCount(){\n  firebase.database().ref('Form/').once('value', (snapshot)=> {\n    let data = snapshot.val();\n    var items = Object.values(data);\n   var rsscount=0;\n    for(let i=0;i<items.length;i++){\n //    console.log(\"item\",i,items[i].Catagory)\n     if(items[i].Status==\"True\"){\n      rsscount+=1\n    }\n    }\n    console.log(\"returning issue count: \", rsscount)\n    return rsscount\n  }); \n}\nexport function ProcessingCount(){\n  this.state={\n    prrcount:\"\",\n  }\n\n  firebase.database().ref('Form/').once('value', (snapshot)=> {\n    let data = snapshot.val();\n    var items = Object.values(data);\n   \n    for(let i=0;i<items.length;i++){\n//     console.log(\"item\",i,items[i].Catagory)\n     if(items[i].Status==\"False\"){\n      prrcount+=1\n    }\n    }\n    console.log(\"returning Processing count: \", prrcount)\n    this.setState({\n      data:[...this.state.data,{Id:items[i]}],\n    })\n  });\n  return prrcount \n}\n\n\n\n\nexport default memo(DatabaseAssets);\n"]},"metadata":{},"sourceType":"module"}
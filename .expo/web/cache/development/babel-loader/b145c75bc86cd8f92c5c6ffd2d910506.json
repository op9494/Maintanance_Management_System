{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/op-pro/Desktop/Finalyear project/Admin/src/screens/AdminVisualrep.js\";\n\nimport React, { memo } from \"react\";\nimport Background from \"../components/Background\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { AlertScrollView } from \"react-native-web/dist/index\";\nimport { TextBase } from \"react-native-web/dist/index\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from 'react-native-chart-kit';\nimport * as firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDslHhZc8QSFrsonWJlsvBXBm3vesReV84\",\n  authDomain: \"complaint-a4db2.firebaseapp.com\",\n  databaseURL: \"https://complaint-a4db2.firebaseio.com\",\n  projectId: \"complaint-a4db2\",\n  storageBucket: \"complaint-a4db2.appspot.com\",\n  messagingSenderId: \"966569668349\",\n  appId: \"1:966569668349:web:24e2908bf9f3b5ffd6d894\",\n  measurementId: \"G-VQXSNP4LCQ\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar CountHardware;\nvar CountServer;\nvar CountPower;\nvar CountOthers;\nvar CountOs;\nvar CountSoftwere;\nfirebase.database().ref('Form/').once('value', function (snapshot) {\n  var rdata = snapshot.val();\n  var ritems = Object.values(rdata);\n\n  for (var i = 0; i < ritems.length; i++) {\n    if (ritems[i].Catagory == \"SERVER\") {\n      CountServer += 1;\n    } else if (ritems[i].Catagory == \"SOFTWERE\") {\n      CountSoftwere += 1;\n    } else if (ritems[i].Catagory == \"OS\") {\n      CountOs += 1;\n    } else if (ritems[i].Catagory == \"POWER\") {\n      CountOs += 1;\n    } else if (ritems[i].Catagory == \"HARDWARE\") {} else if (ritems[i].Catagory == _this.state.priority[5]) {}\n  }\n});\nvar barData = {\n  labels: ['Hardware', 'Softwere', 'Server', 'Power', 'Os', 'Others'],\n  datasets: [{\n    data: [20, 45, 28, 80, 99, 43]\n  }]\n};\nvar chartConfig1 = {\n  backgroundColor: '#e26a00',\n  backgroundGradientFrom: '#fb8c00',\n  backgroundGradientTo: '#ffa726',\n  decimalPlaces: 2,\n  color: function color() {\n    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return \"rgba(255, 255, 255, \" + opacity + \")\";\n  },\n  style: {\n    borderRadius: 16\n  }\n};\nexport var Chart1 = function Chart1() {\n  return React.createElement(BarChart, {\n    data: barData,\n    width: Dimensions.get('window').width,\n    height: 220,\n    yAxisLabel: '$',\n    chartConfig: chartConfig1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    }\n  });\n};\nvar styles = StyleSheet.create({\n  image: {\n    width: 40,\n    height: 40\n  }\n});\nexport default memo(Chart1);","map":{"version":3,"sources":["/home/op-pro/Desktop/Finalyear project/Admin/src/screens/AdminVisualrep.js"],"names":["React","memo","Background","AlertScrollView","TextBase","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","CountHardware","CountServer","CountPower","CountOthers","CountOs","CountSoftwere","database","ref","once","snapshot","rdata","val","ritems","Object","values","i","Catagory","state","priority","barData","labels","datasets","data","chartConfig1","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","style","borderRadius","Chart1","Dimensions","get","width","styles","StyleSheet","create","image","height"],"mappings":"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","sourcesContent":["import React, { memo } from \"react\";\nimport Background from \"../components/Background\";\nimport { TouchableOpacity,Image, Dimensions,StyleSheet, Text, View,FlatList,ScrollView, Platform, AlertScrollView, TextBase, Alert} from \"react-native\";\nimport {\n    LineChart,\n    BarChart,\n    PieChart,\n    ProgressChart,\n    ContributionGraph,\n    StackedBarChart\n  } from 'react-native-chart-kit'\nimport * as firebase from 'firebase';\n\n\n// Initialize Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDslHhZc8QSFrsonWJlsvBXBm3vesReV84\",\n  authDomain: \"complaint-a4db2.firebaseapp.com\",\n  databaseURL: \"https://complaint-a4db2.firebaseio.com\",\n  projectId: \"complaint-a4db2\",\n  storageBucket: \"complaint-a4db2.appspot.com\",\n  messagingSenderId: \"966569668349\",\n  appId: \"1:966569668349:web:24e2908bf9f3b5ffd6d894\",\n  measurementId: \"G-VQXSNP4LCQ\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar CountHardware;\nvar CountServer;\nvar CountPower;\nvar CountOthers;\nvar CountOs;\nvar CountSoftwere;\n\nfirebase.database().ref('Form/').once('value', (snapshot)=> {\n    let rdata = snapshot.val();\n    var ritems = Object.values(rdata);\n//      console.log(\"object javascript\");\n   for(let i=0;i<ritems.length;i++){\n       if (ritems[i].Catagory==\"SERVER\"){\n           CountServer+=1\n       }\n       else if(ritems[i].Catagory==\"SOFTWERE\"){\n        CountSoftwere+=1\n       }\n       else if(ritems[i].Catagory==\"OS\"){\n        CountOs+=1\n      }else if(ritems[i].Catagory==\"POWER\"){\n        CountOs+=1\n      }else if(ritems[i].Catagory==\"HARDWARE\"){\n        \n      }\n      else if(ritems[i].Catagory==this.state.priority[5]){\n        \n\n      }\n    }\n  });\nconst barData = {\n    labels: ['Hardware', 'Softwere', 'Server', 'Power', 'Os', 'Others'],\n    datasets: [\n      {\n        data: [20, 45, 28, 80, 99, 43],\n      },\n    ],\n}\nconst chartConfig1={\n    backgroundColor: '#e26a00',\n      backgroundGradientFrom: '#fb8c00',\n      backgroundGradientTo: '#ffa726',\n      decimalPlaces: 2, // optional, defaults to 2dp\n      color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n      style: {\n        borderRadius: 16\n      }\n\n}\nexport  const Chart1 = () => (\n\n    <BarChart\n    // style={graphStyle}\n    data={barData}\n    width={Dimensions.get('window').width}\n    height={220}\n    yAxisLabel={'$'}\n    chartConfig={chartConfig1}>\n    </BarChart>\n);\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 40,\n    height: 40\n  }\n});\n\nexport default memo(Chart1);"]},"metadata":{},"sourceType":"module"}
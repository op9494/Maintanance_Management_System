{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{memo,useState}from\"react\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{emailValidator}from\"../core/utils\";import Background from\"../components/Background\";import BackButton from\"../components/BackButton\";import Logo from\"../components/Logo\";import Header from\"../components/Header\";import TextInput from\"../components/TextInput\";import{theme}from\"../core/theme\";import Button from\"../components/Button\";import{sendEmailWithPassword}from\"../api/auth-api\";import Toast from\"../components/Toast\";var ForgotPasswordScreen=function ForgotPasswordScreen(_ref){var navigation=_ref.navigation;var _useState=useState({value:\"\",error:\"\"}),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState({value:\"\",type:\"\"}),_useState6=_slicedToArray(_useState5,2),toast=_useState6[0],setToast=_useState6[1];var _onSendPressed=function _onSendPressed(){var emailError,response;return _regeneratorRuntime.async(function _onSendPressed$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!loading){_context.next=2;break;}return _context.abrupt(\"return\");case 2:emailError=emailValidator(email.value);if(!emailError){_context.next=6;break;}setEmail(_objectSpread({},email,{error:emailError}));return _context.abrupt(\"return\");case 6:setLoading(true);_context.next=9;return _regeneratorRuntime.awrap(sendEmailWithPassword(email.value));case 9:response=_context.sent;if(response.error){setToast({type:\"error\",value:response.error});}else{setToast({type:\"success\",value:\"Email with password has been sent.\"});}setLoading(false);case 12:case\"end\":return _context.stop();}}});};return React.createElement(Background,null,React.createElement(BackButton,{goBack:function goBack(){return navigation.navigate(\"LoginScreen\");}}),React.createElement(Logo,null),React.createElement(Header,null,\"Restore Password\"),React.createElement(TextInput,{label:\"E-mail address\",returnKeyType:\"done\",value:email.value,onChangeText:function onChangeText(text){return setEmail({value:text,error:\"\"});},error:!!email.error,errorText:email.error,autoCapitalize:\"none\",autoCompleteType:\"email\",textContentType:\"emailAddress\",keyboardType:\"email-address\"}),React.createElement(Button,{loading:loading,mode:\"contained\",onPress:_onSendPressed,style:styles.button},\"Send Reset Instructions\"),React.createElement(TouchableOpacity,{style:styles.back,onPress:function onPress(){return navigation.navigate(\"LoginScreen\");}},React.createElement(Text,{style:styles.label},\"\\u2190 Back to login\")),React.createElement(Toast,{type:toast.type,message:toast.value,onDismiss:function onDismiss(){return setToast({value:\"\",type:\"\"});}}));};var styles=StyleSheet.create({back:{width:\"100%\",marginTop:12},button:{marginTop:12},label:{color:theme.colors.secondary,width:\"100%\"}});export default memo(ForgotPasswordScreen);","map":{"version":3,"sources":["/home/op-pro/Desktop/Finalyear project/Admin/src/screens/ForgotPasswordScreen.js"],"names":["React","memo","useState","emailValidator","Background","BackButton","Logo","Header","TextInput","theme","Button","sendEmailWithPassword","Toast","ForgotPasswordScreen","navigation","value","error","email","setEmail","loading","setLoading","type","toast","setToast","_onSendPressed","emailError","response","navigate","text","styles","button","back","label","StyleSheet","create","width","marginTop","color","colors","secondary"],"mappings":"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","sourcesContent":["import React, { memo, useState } from \"react\";\nimport { Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { emailValidator } from \"../core/utils\";\nimport Background from \"../components/Background\";\nimport BackButton from \"../components/BackButton\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport TextInput from \"../components/TextInput\";\nimport { theme } from \"../core/theme\";\nimport Button from \"../components/Button\";\nimport { sendEmailWithPassword } from \"../api/auth-api\";\nimport Toast from \"../components/Toast\";\n\nconst ForgotPasswordScreen = ({ navigation }) => {\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\n  const [loading, setLoading] = useState(false);\n  const [toast, setToast] = useState({ value: \"\", type: \"\" });\n\n  const _onSendPressed = async () => {\n    if (loading) return;\n\n    const emailError = emailValidator(email.value);\n\n    if (emailError) {\n      setEmail({ ...email, error: emailError });\n      return;\n    }\n\n    setLoading(true);\n\n    const response = await sendEmailWithPassword(email.value);\n\n    if (response.error) {\n      setToast({ type: \"error\", value: response.error });\n    } else {\n      setToast({\n        type: \"success\",\n        value: \"Email with password has been sent.\"\n      });\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <Background>\n      <BackButton goBack={() => navigation.navigate(\"LoginScreen\")} />\n\n      <Logo />\n\n      <Header>Restore Password</Header>\n\n      <TextInput\n        label=\"E-mail address\"\n        returnKeyType=\"done\"\n        value={email.value}\n        onChangeText={text => setEmail({ value: text, error: \"\" })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n\n      <Button\n        loading={loading}\n        mode=\"contained\"\n        onPress={_onSendPressed}\n        style={styles.button}\n      >\n        Send Reset Instructions\n      </Button>\n\n      <TouchableOpacity\n        style={styles.back}\n        onPress={() => navigation.navigate(\"LoginScreen\")}\n      >\n        <Text style={styles.label}>‚Üê Back to login</Text>\n      </TouchableOpacity>\n\n      <Toast\n        type={toast.type}\n        message={toast.value}\n        onDismiss={() => setToast({ value: \"\", type: \"\" })}\n      />\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  back: {\n    width: \"100%\",\n    marginTop: 12\n  },\n  button: {\n    marginTop: 12\n  },\n  label: {\n    color: theme.colors.secondary,\n    width: \"100%\"\n  }\n});\n\nexport default memo(ForgotPasswordScreen);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.PortalContext=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf3=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _PortalManager=_interopRequireDefault(require(\"./PortalManager\"));var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Portal/PortalHost.tsx\";var PortalContext=React.createContext(null);exports.PortalContext=PortalContext;var PortalHost=function(_React$Component){(0,_inherits2.default)(PortalHost,_React$Component);function PortalHost(){var _getPrototypeOf2;var _this;(0,_classCallCheck2.default)(this,PortalHost);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=(0,_possibleConstructorReturn2.default)(this,(_getPrototypeOf2=(0,_getPrototypeOf3.default)(PortalHost)).call.apply(_getPrototypeOf2,[this].concat(args)));(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"setManager\",function(manager){_this.manager=manager;});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"mount\",function(children){var key=_this.nextKey++;if(_this.manager){_this.manager.mount(key,children);}else{_this.queue.push({type:'mount',key:key,children:children});}return key;});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"update\",function(key,children){if(_this.manager){_this.manager.update(key,children);}else{var op={type:'mount',key:key,children:children};var index=_this.queue.findIndex(function(o){return o.type==='mount'||o.type==='update'&&o.key===key;});if(index>-1){_this.queue[index]=op;}else{_this.queue.push(op);}}});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"unmount\",function(key){if(_this.manager){_this.manager.unmount(key);}else{_this.queue.push({type:'unmount',key:key});}});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"nextKey\",0);(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"queue\",[]);(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"manager\",void 0);return _this;}(0,_createClass2.default)(PortalHost,[{key:\"componentDidMount\",value:function componentDidMount(){var manager=this.manager;var queue=this.queue;while(queue.length&&manager){var action=queue.pop();if(action){switch(action.type){case'mount':manager.mount(action.key,action.children);break;case'update':manager.update(action.key,action.children);break;case'unmount':manager.unmount(action.key);break;}}}}},{key:\"render\",value:function render(){return React.createElement(PortalContext.Provider,{value:{mount:this.mount,update:this.update,unmount:this.unmount},__source:{fileName:_jsxFileName,lineNumber:120}},React.createElement(_reactNative.View,{style:styles.container,collapsable:false,pointerEvents:\"box-none\",__source:{fileName:_jsxFileName,lineNumber:128}},this.props.children),React.createElement(_PortalManager.default,{ref:this.setManager,__source:{fileName:_jsxFileName,lineNumber:135}}));}}]);return PortalHost;}(React.Component);exports.default=PortalHost;(0,_defineProperty2.default)(PortalHost,\"displayName\",'Portal.Host');var styles=_reactNative.StyleSheet.create({container:{flex:1}});","map":{"version":3,"sources":["PortalHost.tsx"],"names":["PortalContext","React","PortalHost","Component","manager","queue","action","key","type","children","op","index","o","mount","update","unmount","styles","StyleSheet","container","flex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport PortalManager from './PortalManager';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype Operation =\n  | { type: 'mount'; key: number; children: React.ReactNode }\n  | { type: 'update'; key: number; children: React.ReactNode }\n  | { type: 'unmount'; key: number };\n\nexport type PortalMethods = {\n  mount: (children: React.ReactNode) => number;\n  update: (key: number, children: React.ReactNode) => void;\n  unmount: (key: number) => void;\n};\n\nexport const PortalContext = React.createContext<PortalMethods>(null as any);\n\n/**\n * Portal host renders all of its children `Portal` elements.\n * For example, you can wrap a screen in `Portal.Host` to render items above the screen.\n * If you're using the `Provider` component, it already includes `Portal.Host`.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Text } from 'react-native';\n * import { Portal } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   render() {\n *     return (\n *       <Portal.Host>\n *         <Text>Content of the app</Text>\n *       </Portal.Host>\n *     );\n *   }\n * }\n * ```\n *\n * Here any `Portal` elements under `<App />` are rendered alongside `<App />` and will appear above `<App />` like a `Modal`.\n */\nexport default class PortalHost extends React.Component<Props> {\n  static displayName = 'Portal.Host';\n\n  componentDidMount() {\n    const manager = this.manager;\n    const queue = this.queue;\n\n    while (queue.length && manager) {\n      const action = queue.pop();\n      if (action) {\n        // eslint-disable-next-line default-case\n        switch (action.type) {\n          case 'mount':\n            manager.mount(action.key, action.children);\n            break;\n          case 'update':\n            manager.update(action.key, action.children);\n            break;\n          case 'unmount':\n            manager.unmount(action.key);\n            break;\n        }\n      }\n    }\n  }\n\n  private setManager = (manager: PortalManager | undefined | null) => {\n    this.manager = manager;\n  };\n\n  private mount = (children: React.ReactNode) => {\n    const key = this.nextKey++;\n\n    if (this.manager) {\n      this.manager.mount(key, children);\n    } else {\n      this.queue.push({ type: 'mount', key, children });\n    }\n\n    return key;\n  };\n\n  private update = (key: number, children: React.ReactNode) => {\n    if (this.manager) {\n      this.manager.update(key, children);\n    } else {\n      const op = { type: 'mount', key, children };\n      const index = this.queue.findIndex(\n        o => o.type === 'mount' || (o.type === 'update' && o.key === key)\n      );\n\n      if (index > -1) {\n        // @ts-ignore\n        this.queue[index] = op;\n      } else {\n        this.queue.push(op as Operation);\n      }\n    }\n  };\n\n  private unmount = (key: number) => {\n    if (this.manager) {\n      this.manager.unmount(key);\n    } else {\n      this.queue.push({ type: 'unmount', key });\n    }\n  };\n\n  private nextKey = 0;\n  private queue: Operation[] = [];\n  private manager: PortalManager | null | undefined;\n\n  render() {\n    return (\n      <PortalContext.Provider\n        value={{\n          mount: this.mount,\n          update: this.update,\n          unmount: this.unmount,\n        }}\n      >\n        {/* Need collapsable=false here to clip the elevations, otherwise they appear above Portal components */}\n        <View\n          style={styles.container}\n          collapsable={false}\n          pointerEvents=\"box-none\"\n        >\n          {this.props.children}\n        </View>\n        <PortalManager ref={this.setManager} />\n      </PortalContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}
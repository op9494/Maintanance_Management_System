{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Dialog/DialogActions.tsx\";var DialogActions=function(_React$Component){(0,_inherits2.default)(DialogActions,_React$Component);function DialogActions(){(0,_classCallCheck2.default)(this,DialogActions);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(DialogActions).apply(this,arguments));}(0,_createClass2.default)(DialogActions,[{key:\"render\",value:function render(){return React.createElement(_reactNative.View,(0,_extends2.default)({},this.props,{style:[styles.container,this.props.style],__source:{fileName:_jsxFileName,lineNumber:49}}),React.Children.map(this.props.children,function(child){return React.isValidElement(child)?React.cloneElement(child,{compact:true}):child;}));}}]);return DialogActions;}(React.Component);(0,_defineProperty2.default)(DialogActions,\"displayName\",'Dialog.Actions');var styles=_reactNative.StyleSheet.create({container:{flexDirection:'row',alignItems:'center',justifyContent:'flex-end',padding:8}});var _default=DialogActions;exports.default=_default;","map":{"version":3,"sources":["DialogActions.tsx"],"names":["DialogActions","React","Component","styles","compact","StyleSheet","container","flexDirection","alignItems","justifyContent","padding"],"mappings":"g4BAAA,GAAA,CAAA,KAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,yJA2CMA,GAAAA,CAAAA,a,kWAGK,CACP,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAU,KAAV,KAAA,CAAA,CAAsB,KAAK,CAAE,CAACG,MAAM,CAAP,SAAA,CAAmB,KAAA,KAAA,CAAhD,KAA6B,CAA7B,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CACGF,KAAK,CAALA,QAAAA,CAAAA,GAAAA,CAAmB,KAAA,KAAA,CAAnBA,QAAAA,CAAwC,SAAA,KAAA,CAAK,CAAA,MAC5CA,CAAAA,KAAK,CAALA,cAAAA,CAAAA,KAAAA,EACIA,KAAK,CAALA,YAAAA,CAAAA,KAAAA,CAA0B,CACxBG,OAAO,CAFbH,IAC8B,CAA1BA,CADJA,CAD4C,KAAA,CAFlD,CAEKA,CADH,CADF,C,4BAJwBA,KAAK,CAACC,S,CAA5BF,C,6BAAAA,a,eACiB,gB,EAiBvB,GAAMG,CAAAA,MAAM,CAAGE,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,aAAa,CADJ,KAAA,CAETC,UAAU,CAFD,QAAA,CAGTC,cAAc,CAHL,UAAA,CAITC,OAAO,CALX,CACa,CADoB,CAAlBL,CAAf,C,aASeL,a","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogActions`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a list of actions in a Dialog.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button, Dialog, Portal } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _hideDialog = () => this.setState({ visible: false });\n *\n *   render() {\n *     return (\n *       <Portal>\n *         <Dialog\n *           visible={this.state.visible}\n *           onDismiss={this._hideDialog}>\n *           <Dialog.Actions>\n *             <Button onPress={() => console.log(\"Cancel\")}>Cancel</Button>\n *             <Button onPress={() => console.log(\"Ok\")}>Ok</Button>\n *           </Dialog.Actions>\n *         </Dialog>\n *       </Portal>\n *     );\n *   }\n * }\n * ```\n */\nclass DialogActions extends React.Component<Props> {\n  static displayName = 'Dialog.Actions';\n\n  render() {\n    return (\n      <View {...this.props} style={[styles.container, this.props.style]}>\n        {React.Children.map(this.props.children, child =>\n          React.isValidElement(child)\n            ? React.cloneElement(child, {\n                compact: true,\n              })\n            : child\n        )}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 8,\n  },\n});\n\nexport default DialogActions;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _RadioButtonGroup=_interopRequireDefault(require(\"./RadioButtonGroup\"));var _RadioButtonAndroid=_interopRequireDefault(require(\"./RadioButtonAndroid\"));var _RadioButtonIOS=_interopRequireDefault(require(\"./RadioButtonIOS\"));var _RadioButtonItem=_interopRequireDefault(require(\"./RadioButtonItem\"));var _theming=require(\"../../core/theming\");var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/RadioButton/RadioButton.tsx\";var RadioButton=function(_React$Component){(0,_inherits2.default)(RadioButton,_React$Component);function RadioButton(){(0,_classCallCheck2.default)(this,RadioButton);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(RadioButton).apply(this,arguments));}(0,_createClass2.default)(RadioButton,[{key:\"render\",value:function render(){var Button=_reactNative.Platform.select({default:_RadioButtonAndroid.default,ios:_RadioButtonIOS.default});return React.createElement(Button,(0,_extends2.default)({},this.props,{__source:{fileName:_jsxFileName,lineNumber:114}}));}}]);return RadioButton;}(React.Component);(0,_defineProperty2.default)(RadioButton,\"Group\",_RadioButtonGroup.default);(0,_defineProperty2.default)(RadioButton,\"Android\",_RadioButtonAndroid.default);(0,_defineProperty2.default)(RadioButton,\"IOS\",_RadioButtonIOS.default);(0,_defineProperty2.default)(RadioButton,\"Item\",_RadioButtonItem.default);var _default=(0,_theming.withTheme)(RadioButton);exports.default=_default;","map":{"version":3,"sources":["RadioButton.tsx"],"names":["RadioButton","React","Component","RadioButtonGroup","RadioButtonAndroid","RadioButtonIOS","RadioButtonItem","Button","Platform","default","ios"],"mappings":"g4BAAA,GAAA,CAAA,KAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,iBAAA,CAAA,sBAAA,CAAA,OAAA,sBAAA,CAAA,CACA,GAAA,CAAA,mBAAA,CAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA,CACA,GAAA,CAAA,eAAA,CAAA,sBAAA,CAAA,OAAA,oBAAA,CAAA,CACA,GAAA,CAAA,gBAAA,CAAA,sBAAA,CAAA,OAAA,qBAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,OAAA,sBAAA,C,oGAwFMA,GAAAA,CAAAA,W,wVAaK,CACP,GAAMO,CAAAA,MAAM,CAAGC,YAAAA,CAAAA,QAAAA,CAAAA,MAAAA,CAAgB,CAC7BC,OAAO,CAAEL,mBAAAA,CADoB,OAAA,CAE7BM,GAAG,CAAEL,eAAAA,CAFP,OAA+B,CAAhBG,CAAf,CAKA,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAY,KAAZ,KAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAP,GAAO,CAAA,CAAA,CAAA,CAAP,C,0BAnBsBP,KAAK,CAACC,S,CAA1BF,C,6BAAAA,W,SAEWG,iBAAAA,CAAAA,O,+BAFXH,W,WAKaI,mBAAAA,CAAAA,O,+BALbJ,W,OAQSK,eAAAA,CAAAA,O,+BARTL,W,QAWUM,gBAAAA,CAAAA,O,eAYD,CAAA,EAAA,QAAA,CAAA,SAAA,EAAA,WAAA,C","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\nimport RadioButtonGroup from './RadioButtonGroup';\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport RadioButtonIOS from './RadioButtonIOS';\nimport RadioButtonItem from './RadioButtonItem';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\nexport type Props = {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Radio buttons allow the selection a single option from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     checked: 'first',\n *   };\n *\n *   render() {\n *     const { checked } = this.state;\n *\n *     return (\n *       <View>\n *         <RadioButton\n *           value=\"first\"\n *           status={checked === 'first' ? 'checked' : 'unchecked'}\n *           onPress={() => { this.setState({ checked: 'first' }); }}\n *         />\n *         <RadioButton\n *           value=\"second\"\n *           status={checked === 'second' ? 'checked' : 'unchecked'}\n *           onPress={() => { this.setState({ checked: 'second' }); }}\n *         />\n *       </View>\n *     );\n *   }\n * }\n * ```\n */\nclass RadioButton extends React.Component<Props> {\n  // @component ./RadioButtonGroup.tsx\n  static Group = RadioButtonGroup;\n\n  // @component ./RadioButtonAndroid.tsx\n  static Android = RadioButtonAndroid;\n\n  // @component ./RadioButtonIOS.tsx\n  static IOS = RadioButtonIOS;\n\n  // @component ./RadioButtonItem.tsx\n  static Item = RadioButtonItem;\n\n  render() {\n    const Button = Platform.select({\n      default: RadioButtonAndroid,\n      ios: RadioButtonIOS,\n    });\n\n    return <Button {...this.props} />;\n  }\n}\n\nexport default withTheme(RadioButton);\n"]},"metadata":{},"sourceType":"script"}
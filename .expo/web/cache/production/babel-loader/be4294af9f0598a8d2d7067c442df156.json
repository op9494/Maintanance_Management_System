{"ast":null,"code":"import React,{memo,useState,useEffect}from\"react\";import Button from\"react-native-web/dist/exports/Button\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Background from\"../components/Background\";import NewButton from\"../components/NewButton\";var Stdscreen=function Stdscreen(_ref){var navigation=_ref.navigation;return React.createElement(Background,null,React.createElement(\"view\",null,React.createElement(BackButton,{goBack:function goBack(){return navigation.navigate(\"AdminDashboard\");}}),React.createElement(Header,null,\"REGISTER NEW ISSUE\"),React.createElement(TextInput,{label:\"ID\",returnKeyType:\"next\",value:name.value,onChangeText:function onChangeText(text){return setName({value:text,error:\"\"});},error:!!name.error,errorText:name.error}),React.createElement(TextInput,{label:\"Email\",returnKeyType:\"next\",value:email.value,onChangeText:function onChangeText(text){return setEmail({value:text,error:\"\"});},error:!!email.error,errorText:email.error,autoCapitalize:\"none\",autoCompleteType:\"email\",textContentType:\"emailAddress\",keyboardType:\"email-address\"}),React.createElement(TextInput,{label:\"Description\",returnKeyType:\"done\",value:password.value,onChangeText:function onChangeText(text){return setPassword({value:text,error:\"\"});},error:!!password.error,errorText:password.error,secureTextEntry:true,autoCapitalize:\"none\"}),React.createElement(Button,{loading:loading,mode:\"contained\",onPress:_onSignUpPressed,style:styles.button},\"SUBMMIT\"),React.createElement(Toast,{message:error,onDismiss:function onDismiss(){return setError(\"\");}})));};var styles=StyleSheet.create({button:{marginTop:24},row:{flexDirection:\"row\",marginTop:4},link:{fontWeight:\"bold\",color:theme.colors.primary}});export default memo(Stdscreen);","map":{"version":3,"sources":["/home/op-pro/Desktop/Finalyear project/Admin/src/screens/StdScreen.js"],"names":["React","memo","useState","useEffect","Background","NewButton","Stdscreen","navigation","navigate","name","value","text","setName","error","email","setEmail","password","setPassword","loading","_onSignUpPressed","styles","button","setError","StyleSheet","create","marginTop","row","flexDirection","link","fontWeight","color","theme","colors","primary"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,CAAsBC,QAAtB,CAAgCC,SAAhC,KAAgD,OAAhD,C,oOAEA,MAAOC,CAAAA,UAAP,gCACA,MAAOC,CAAAA,SAAP,+BACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAoB,IAAjBC,CAAAA,UAAiB,MAAjBA,UAAiB,CACjC,MACA,qBAAC,UAAD,MACK,gCACA,oBAAC,UAAD,EAAY,MAAM,CAAE,wBAAMA,CAAAA,UAAU,CAACC,QAAX,CAAoB,gBAApB,CAAN,EAApB,EADA,CAIJ,oBAAC,MAAD,2BAJI,CAMJ,oBAAC,SAAD,EACE,KAAK,CAAC,IADR,CAEE,aAAa,CAAC,MAFhB,CAGE,KAAK,CAAEC,IAAI,CAACC,KAHd,CAIE,YAAY,CAAE,sBAAAC,IAAI,QAAIC,CAAAA,OAAO,CAAC,CAAEF,KAAK,CAAEC,IAAT,CAAeE,KAAK,CAAE,EAAtB,CAAD,CAAX,EAJpB,CAKE,KAAK,CAAE,CAAC,CAACJ,IAAI,CAACI,KALhB,CAME,SAAS,CAAEJ,IAAI,CAACI,KANlB,EANI,CAeJ,oBAAC,SAAD,EACE,KAAK,CAAC,OADR,CAEE,aAAa,CAAC,MAFhB,CAGE,KAAK,CAAEC,KAAK,CAACJ,KAHf,CAIE,YAAY,CAAE,sBAAAC,IAAI,QAAII,CAAAA,QAAQ,CAAC,CAAEL,KAAK,CAAEC,IAAT,CAAeE,KAAK,CAAE,EAAtB,CAAD,CAAZ,EAJpB,CAKE,KAAK,CAAE,CAAC,CAACC,KAAK,CAACD,KALjB,CAME,SAAS,CAAEC,KAAK,CAACD,KANnB,CAOE,cAAc,CAAC,MAPjB,CAQE,gBAAgB,CAAC,OARnB,CASE,eAAe,CAAC,cATlB,CAUE,YAAY,CAAC,eAVf,EAfI,CA4BJ,oBAAC,SAAD,EACE,KAAK,CAAC,aADR,CAEE,aAAa,CAAC,MAFhB,CAGE,KAAK,CAAEG,QAAQ,CAACN,KAHlB,CAIE,YAAY,CAAE,sBAAAC,IAAI,QAAIM,CAAAA,WAAW,CAAC,CAAEP,KAAK,CAAEC,IAAT,CAAeE,KAAK,CAAE,EAAtB,CAAD,CAAf,EAJpB,CAKE,KAAK,CAAE,CAAC,CAACG,QAAQ,CAACH,KALpB,CAME,SAAS,CAAEG,QAAQ,CAACH,KANtB,CAOE,eAAe,KAPjB,CAQE,cAAc,CAAC,MARjB,EA5BI,CAuCJ,oBAAC,MAAD,EACE,OAAO,CAAEK,OADX,CAEE,IAAI,CAAC,WAFP,CAGE,OAAO,CAAEC,gBAHX,CAIE,KAAK,CAAEC,MAAM,CAACC,MAJhB,YAvCI,CAgDJ,oBAAC,KAAD,EAAO,OAAO,CAAER,KAAhB,CAAuB,SAAS,CAAE,2BAAMS,CAAAA,QAAQ,CAAC,EAAD,CAAd,EAAlC,EAhDI,CADL,CADA,CAsDF,CAvDH,CAwDA,GAAMF,CAAAA,MAAM,CAAGG,UAAU,CAACC,MAAX,CAAkB,CAC/BH,MAAM,CAAE,CACNI,SAAS,CAAE,EADL,CADuB,CAI/BC,GAAG,CAAE,CACHC,aAAa,CAAE,KADZ,CAEHF,SAAS,CAAE,CAFR,CAJ0B,CAQ/BG,IAAI,CAAE,CACJC,UAAU,CAAE,MADR,CAEJC,KAAK,CAAEC,KAAK,CAACC,MAAN,CAAaC,OAFhB,CARyB,CAAlB,CAAf,CAaA,cAAehC,CAAAA,IAAI,CAACK,SAAD,CAAnB","sourcesContent":["import React, { memo, useState ,useEffect} from \"react\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport Background from \"../components/Background\";\nimport NewButton from \"../components/NewButton\";\nconst Stdscreen = ({ navigation }) => {\n     return (\n     <Background>\n          <view >\n          <BackButton goBack={() => navigation.navigate(\"AdminDashboard\")} />\n\n\n      <Header>REGISTER NEW ISSUE</Header>\n\n      <TextInput\n        label=\"ID\"\n        returnKeyType=\"next\"\n        value={name.value}\n        onChangeText={text => setName({ value: text, error: \"\" })}\n        error={!!name.error}\n        errorText={name.error}\n      />\n\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={text => setEmail({ value: text, error: \"\" })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n\n      <TextInput\n        label=\"Description\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={text => setPassword({ value: text, error: \"\" })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n        autoCapitalize=\"none\"\n      />\n\n      <Button\n        loading={loading}\n        mode=\"contained\"\n        onPress={_onSignUpPressed}\n        style={styles.button}\n      >\n        SUBMMIT\n      </Button>\n\n      <Toast message={error} onDismiss={() => setError(\"\")} />\n\n           </view>\n      </Background>);\n  };\nconst styles = StyleSheet.create({\n  button: {\n    marginTop: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary\n  }\n});\nexport default memo(Stdscreen);\n"]},"metadata":{},"sourceType":"module"}
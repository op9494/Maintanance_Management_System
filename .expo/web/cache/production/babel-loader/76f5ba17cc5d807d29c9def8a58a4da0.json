{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState,memo,useEffect}from'react';import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import{BarCodeScanner}from'expo-barcode-scanner';import*as Permissions from'expo-permissions';import{Card,Badge}from'react-native-elements';import Background from\"../components/Background\";import{Header}from'react-native-elements';import RNPickerSelect from'react-native-picker-select';import BackButton from\"../components/BackButton\";import Button from\"../components/Button\";import*as firebase from'firebase';import TextInput from\"../components/TextInput\";import Toast from\"../components/Toast\";import{emailValidator}from\"../core/utils\";import FIREBASE_CONFIG from\"../core/config\";import{object,array,func}from'prop-types';if(!firebase.apps.length){firebase.initializeApp(FIREBASE_CONFIG);}var IssurRegForm=function IssurRegForm(_ref){var navigation=_ref.navigation;function getCameraAsync(){var _await$Permissions$as,status,permissions;return _regeneratorRuntime.async(function getCameraAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));case 2:_await$Permissions$as=_context.sent;status=_await$Permissions$as.status;permissions=_await$Permissions$as.permissions;if(!(status==='granted')){_context.next=9;break;}console.log(\"permission granted\");_context.next=10;break;case 9:throw new Error('Camera permission not granted');case 10:case\"end\":return _context.stop();}}});}var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState({value:\"\"}),_useState4=_slicedToArray(_useState3,2),SystemID=_useState4[0],setSystemId=_useState4[1];var _useState5=useState({value:\"\"}),_useState6=_slicedToArray(_useState5,2),Catagory=_useState6[0],setCatagory=_useState6[1];var _useState7=useState({value:\"\"}),_useState8=_slicedToArray(_useState7,2),PrimaryId=_useState8[0],setPrimaryId=_useState8[1];var _useState9=useState({value:\"\",error:\"\"}),_useState10=_slicedToArray(_useState9,2),email=_useState10[0],setEmail=_useState10[1];var _useState11=useState({value:\"\"}),_useState12=_slicedToArray(_useState11,2),Description=_useState12[0],setDescription=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),error=_useState14[0],setError=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),scanned=_useState16[0],setScanned=_useState16[1];var handleBarCodeScanned=function handleBarCodeScanned(_ref2){var type=_ref2.type,data=_ref2.data;setScanned(true);setSystemId({value:data});};function updateid(id1){var gt;return _regeneratorRuntime.async(function updateid$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _regeneratorRuntime.awrap(firebase.database().ref('IssueInfo/').on('value',function(snapshot){var data=snapshot.val();console.log(\"items2\",data.TotalIssue+1);setPrimaryId({value:data.TotalIssue+1});}));case 2:gt=_context2.sent;case 3:case\"end\":return _context2.stop();}}});}var _onSubmmitPressed=function _onSubmmitPressed(){var id1=updateid();console.log(id1);var emailError=emailValidator(email.value);if(emailError){setEmail(_objectSpread({},email,{error:emailError}));return;}else{var date=new Date().getDate();var month=new Date().getMonth()+1;var year=new Date().getFullYear();var hours=new Date().getHours();var min=new Date().getMinutes();var sec=new Date().getSeconds();DOS=date+'/'+month+'/'+year+' '+hours+':'+min+':'+sec;console.log(\"Subbmited Values1: \",SystemID.value,Catagory.value,email.value,Description.value);alert(\"form is successfully submitted\");}Catagory:Catagory.value;DOS:DOS;Description:Description;Id:Id.value;Mail_Id:email.value;Status:\"False\";System_Id:SystemID.value;};return React.createElement(Background,null,React.createElement(ScrollView,null,React.createElement(Text,null,\"Scan the system Qr code\"),React.createElement(View,{style:styles.container},React.createElement(BarCodeScanner,{onBarCodeScanned:scanned?undefined:handleBarCodeScanned,style:StyleSheet.absoluteFillObject}),scanned&&React.createElement(Button,{title:'Scan Again',onPress:function onPress(){return setScanned(false);}})),React.createElement(View,null,React.createElement(TextInput,{label:\"Scanned Code\",value:SystemID.value}),React.createElement(TextInput,{label:\"form Code\",value:PrimaryId.value}),React.createElement(TextInput,{label:\"Email\",returnKeyType:\"next\",value:email.value,onChangeText:function onChangeText(text){return setEmail({value:text,error:\"\"});},error:!!email.error,errorText:email.error,autoCapitalize:\"none\",autoCompleteType:\"email\",textContentType:\"emailAddress\",keyboardType:\"email-address\"}),React.createElement(Text,{style:styles.textsty},\"Catagory\"),React.createElement(RNPickerSelect,{onValueChange:function onValueChange(value){return setCatagory({value:value});},items:[{label:\"SERVER\",value:\"SERVER\"},{label:\"POWER\",value:\"POWER\"},{label:\"HARDWARE\",value:\"HARDWARE\"},{label:\"SOFTWERE\",value:\"SOFTWERE\"},{label:\"OS\",value:\"OS\"},{label:\"OTHERS\",value:\"OTHERS\"}]}),React.createElement(TextInput,{label:\"Description\",returnKeyType:\"next\",value:Description.value,onChangeText:function onChangeText(text){return setDescription({value:text});},autoCapitalize:\"none\"}),React.createElement(Button,{mode:\"contained\",onPress:_onSubmmitPressed,style:styles.button},\"UPDATE PRIORITY\"),React.createElement(Toast,{message:error,onDismiss:function onDismiss(){return setError(\"\");}}))));};var styles=StyleSheet.create({container:{width:200,height:200},textsty:{fontSize:20,fontWeight:\"bold\",color:\"#F6820D\",padding:15}});export default memo(IssurRegForm);","map":{"version":3,"sources":["/home/op-pro/Desktop/Finalyear project/Admin/src/screens/IssurRegForm.js"],"names":["React","useState","memo","useEffect","BarCodeScanner","Permissions","Card","Badge","Background","Header","RNPickerSelect","BackButton","Button","firebase","TextInput","Toast","emailValidator","FIREBASE_CONFIG","object","array","func","apps","length","initializeApp","IssurRegForm","navigation","getCameraAsync","askAsync","CAMERA","status","permissions","console","log","Error","loading","setLoading","value","SystemID","setSystemId","Catagory","setCatagory","PrimaryId","setPrimaryId","error","email","setEmail","Description","setDescription","setError","scanned","setScanned","handleBarCodeScanned","type","data","updateid","id1","database","ref","on","snapshot","val","TotalIssue","gt","_onSubmmitPressed","emailError","date","Date","getDate","month","getMonth","year","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","DOS","alert","Id","Mail_Id","Status","System_Id","styles","container","undefined","StyleSheet","absoluteFillObject","text","textsty","label","button","create","width","height","fontSize","fontWeight","color","padding"],"mappings":"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","sourcesContent":["import React, { useState,memo,useEffect } from 'react';\nimport { Text, View, StyleSheet,ScrollView} from 'react-native';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport * as Permissions from 'expo-permissions';\nimport { Card ,Badge} from 'react-native-elements';\nimport Background from '../components/Background';\nimport { Header } from 'react-native-elements';\nimport RNPickerSelect from 'react-native-picker-select';\nimport BackButton from \"../components/BackButton\";\nimport Button from \"../components/Button\";\nimport * as firebase from 'firebase';\nimport TextInput from \"../components/TextInput\"\nimport Toast from \"../components/Toast\";\nimport { emailValidator} from \"../core/utils\";\nimport FIREBASE_CONFIG from \"../core/config\"\nimport { object, array, func } from 'prop-types';\nif (!firebase.apps.length) {\n    firebase.initializeApp(FIREBASE_CONFIG);\n}\nconst IssurRegForm = ({ navigation }) => {\n\nasync function getCameraAsync() {\n    // permissions returns only for location permissions on iOS and under certain conditions, see Permissions.LOCATION\n    const { status, permissions } = await Permissions.askAsync(Permissions.CAMERA);\n    if (status === 'granted') {\n      console.log(\"permission granted\")\n        } else {\n      throw new Error('Camera permission not granted');\n    }\n  }\n  \n      const [loading, setLoading] = useState(false);\n      const [SystemID,setSystemId]=useState({value:\"\"});\n      const [Catagory, setCatagory] = useState({ value:\"\"});\n      const [PrimaryId, setPrimaryId] = useState({ value:\"\"});\n      const [email, setEmail] = useState({ value: \"\", error: \"\" });\n      const [Description, setDescription] = useState({ value: \"\"});\n      const [error, setError] = useState(\"\");\n      const [scanned, setScanned] = useState(false);\n      const handleBarCodeScanned = ({ type, data }) => {\n      setScanned(true);\n      setSystemId({ value: data })\n //     alert(`Bar code with type ${type} and data ${data} has been scanned!`);\n    };\n\n    async function updateid(id1){\n        var gt=await firebase.database().ref('IssueInfo/').on('value', (snapshot)   => {\n            var data = snapshot.val();\n            console.log(\"items2\", data.TotalIssue + 1);\n            setPrimaryId({value:data.TotalIssue + 1})\n        });       \n    } \n    const _onSubmmitPressed = ()=> {\n        \n         const id1=updateid()   \n         console.log(id1)\n    const emailError = emailValidator(email.value);\n    if (emailError) {\n      setEmail({ ...email, error: emailError });\n      return;\n    }\n    else{\n        var date = new Date().getDate(); //Current Date\n    var month = new Date().getMonth() + 1; //Current Month\n    var year = new Date().getFullYear(); //Current Year\n    var hours = new Date().getHours(); //Current Hours\n    var min = new Date().getMinutes(); //Current Minutes\n    var sec = new Date().getSeconds(); //Current Seconds\n    DOS=date +'/' + month + '/' + year + ' ' + hours + ':' + min + ':' + sec\n        console.log(\"Subbmited Values1: \",SystemID.value,Catagory.value,email.value,Description.value)\n        alert(\"form is successfully submitted\")\n      }\n      Catagory:Catagory.value\n      DOS:DOS\n      Description:Description\n      Id:Id.value\n      Mail_Id:email.value\n      Status:\"False\"\n      System_Id:SystemID.value \n    };\n    \n    return (\n  <Background>\n  <ScrollView>\n        <Text>Scan the system Qr code</Text>\n        <View  style={styles.container}>\n        <BarCodeScanner\n          onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n          style={StyleSheet.absoluteFillObject}\n        />\n        {scanned && <Button title={'Scan Again'} onPress={() => setScanned(false)} />}\n      </View>\n      <View>\n      <TextInput\n       label=\"Scanned Code\"\n       value={SystemID.value}\n      />\n      <TextInput\n       label=\"form Code\"\n       value={PrimaryId.value}\n      />\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={text => setEmail({ value: text, error: \"\" })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n      <Text style={styles.textsty}>Catagory</Text>\n<RNPickerSelect\n            onValueChange={(value) => setCatagory({value})}\n            items={[\n            {label : \"SERVER\", value : \"SERVER\" },\n               {label : \"POWER\", value : \"POWER\"},\n               {label : \"HARDWARE\", value : \"HARDWARE\" },\n               {label : \"SOFTWERE\" ,value : \"SOFTWERE\" },\n               {label : \"OS\" ,value : \"OS\"},\n               {label :\"OTHERS\",value:\"OTHERS\"}\n            ]}\n        ></RNPickerSelect>\n\n      <TextInput\n        label=\"Description\"\n        returnKeyType=\"next\"\n        value={Description.value}\n        onChangeText={text => setDescription({ value: text})}\n        autoCapitalize=\"none\"\n      />\n      <Button\n        mode=\"contained\"\n        onPress={_onSubmmitPressed}\n        style={styles.button}\n      >\n        UPDATE PRIORITY\n      </Button>\n      <Toast message={error} onDismiss={() => setError(\"\")} />\n</View>\n      </ScrollView>\n      </Background>\n    );\n};\nconst styles = StyleSheet.create({\n    container: {\n        width: 200,\n      height: 200,\n      },\n      textsty:{\n        fontSize:20,\n        fontWeight: \"bold\",\n        color:\"#F6820D\",\n         padding:15\n      },\n\n});\nexport default memo(IssurRegForm);"]},"metadata":{},"sourceType":"module"}
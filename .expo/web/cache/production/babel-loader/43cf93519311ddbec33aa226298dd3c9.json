{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _color=_interopRequireDefault(require(\"color\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _Text=_interopRequireDefault(require(\"../Typography/Text\"));var _Icon=_interopRequireDefault(require(\"../Icon\"));var _TouchableRipple=_interopRequireDefault(require(\"../TouchableRipple\"));var _theming=require(\"../../core/theming\");var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Drawer/DrawerItem.tsx\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var DrawerItem=function(_React$Component){(0,_inherits2.default)(DrawerItem,_React$Component);function DrawerItem(){(0,_classCallCheck2.default)(this,DrawerItem);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(DrawerItem).apply(this,arguments));}(0,_createClass2.default)(DrawerItem,[{key:\"render\",value:function render(){var _this$props=this.props,icon=_this$props.icon,label=_this$props.label,active=_this$props.active,theme=_this$props.theme,style=_this$props.style,onPress=_this$props.onPress,accessibilityLabel=_this$props.accessibilityLabel,rest=(0,_objectWithoutProperties2.default)(_this$props,[\"icon\",\"label\",\"active\",\"theme\",\"style\",\"onPress\",\"accessibilityLabel\"]);var colors=theme.colors,roundness=theme.roundness;var backgroundColor=active?(0,_color.default)(colors.primary).alpha(0.12).rgb().string():'transparent';var contentColor=active?colors.primary:(0,_color.default)(colors.text).alpha(0.68).rgb().string();var font=theme.fonts.medium;var labelMargin=icon?32:0;return React.createElement(_reactNative.View,(0,_extends2.default)({},rest,{style:[styles.container,{backgroundColor:backgroundColor,borderRadius:roundness},style],__source:{fileName:_jsxFileName,lineNumber:84}}),React.createElement(_TouchableRipple.default,{borderless:true,delayPressIn:0,onPress:onPress,style:{borderRadius:roundness},accessibilityTraits:active?['button','selected']:'button',accessibilityComponentType:\"button\",accessibilityRole:\"button\",accessibilityStates:active?['selected']:[],accessibilityLabel:accessibilityLabel,__source:{fileName:_jsxFileName,lineNumber:92}},React.createElement(_reactNative.View,{style:styles.wrapper,__source:{fileName:_jsxFileName,lineNumber:103}},icon?React.createElement(_Icon.default,{source:icon,size:24,color:contentColor,__source:{fileName:_jsxFileName,lineNumber:105}}):null,React.createElement(_Text.default,{numberOfLines:1,style:[styles.label,_objectSpread({color:contentColor},font,{marginLeft:labelMargin})],__source:{fileName:_jsxFileName,lineNumber:107}},label))));}}]);return DrawerItem;}(React.Component);(0,_defineProperty2.default)(DrawerItem,\"displayName\",'Drawer.Item');var styles=_reactNative.StyleSheet.create({container:{marginHorizontal:10,marginVertical:4},wrapper:{flexDirection:'row',alignItems:'center',padding:8},label:{marginRight:32}});var _default=(0,_theming.withTheme)(DrawerItem);exports.default=_default;","map":{"version":3,"sources":["DrawerItem.tsx"],"names":["DrawerItem","React","Component","icon","label","active","theme","style","onPress","accessibilityLabel","rest","colors","roundness","backgroundColor","contentColor","font","labelMargin","styles","borderRadius","color","marginLeft","StyleSheet","container","marginHorizontal","marginVertical","wrapper","flexDirection","alignItems","padding","marginRight"],"mappings":"g/BAAA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,KAAA,CAAA,sBAAA,CAAA,OAAA,sBAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,sBAAA,CAAA,OAAA,WAAA,CAAA,CACA,GAAA,CAAA,gBAAA,CAAA,sBAAA,CAAA,OAAA,sBAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,OAAA,sBAAA,C,s4BA8CMA,IAAAA,CAAAA,U,mVAGK,CAAA,GAAA,CAAA,WAAA,CAUH,KAVG,KAAA,CAELG,IAFK,CAAA,WAAA,CAAA,IAAA,CAGLC,KAHK,CAAA,WAAA,CAAA,KAAA,CAILC,MAJK,CAAA,WAAA,CAAA,MAAA,CAKLC,KALK,CAAA,WAAA,CAAA,KAAA,CAMLC,KANK,CAAA,WAAA,CAAA,KAAA,CAOLC,OAPK,CAAA,WAAA,CAAA,OAAA,CAQLC,kBARK,CAAA,WAAA,CAAA,kBAAA,CASFC,IATE,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,WAAA,CAAA,CAAA,MAAA,CAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,OAAA,CAAA,SAAA,CAAA,oBAAA,CAAA,CAAA,CAAA,GAWCC,CAAAA,MAXD,CAWuBL,KAXvB,CAAA,MAAA,CAWSM,SAXT,CAWuBN,KAXvB,CAAA,SAAA,CAYP,GAAMO,CAAAA,eAAe,CAAGR,MAAM,CAC1B,CAAA,EAAA,MAAA,CAAA,OAAA,EAAMM,MAAM,CAAZ,OAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,GAD0B,MAC1B,EAD0B,CAA9B,aAAA,CAMA,GAAMG,CAAAA,YAAY,CAAGT,MAAM,CACvBM,MAAM,CADiB,OAAA,CAEvB,CAAA,EAAA,MAAA,CAAA,OAAA,EAAMA,MAAM,CAAZ,IAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,GAFJ,MAEI,EAFJ,CAMA,GAAMI,CAAAA,IAAI,CAAGT,KAAK,CAALA,KAAAA,CAAb,MAAA,CACA,GAAMU,CAAAA,WAAW,CAAGb,IAAI,CAAA,EAAA,CAAxB,CAAA,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,IAAA,CAAA,CAEE,KAAK,CAAE,CACLc,MAAM,CADD,SAAA,CAEL,CAAEJ,eAAe,CAAjB,eAAA,CAAmBK,YAAY,CAF1B,SAEL,CAFK,CAFT,KAES,CAFT,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAQE,KAAA,CAAA,aAAA,CAAC,gBAAA,CAAD,OAAA,CAAA,CACE,UAAU,CADZ,IAAA,CAEE,YAAY,CAFd,CAAA,CAGE,OAAO,CAHT,OAAA,CAIE,KAAK,CAAE,CAAEA,YAAY,CAJvB,SAIS,CAJT,CAKE,mBAAmB,CAAEb,MAAM,CAAG,CAAA,QAAA,CAAH,UAAG,CAAH,CAL7B,QAAA,CAME,0BAA0B,CAN5B,QAAA,CAOE,iBAAiB,CAPnB,QAAA,CAQE,mBAAmB,CAAEA,MAAM,CAAG,CAAH,UAAG,CAAH,CAR7B,EAAA,CASE,kBAAkB,CATpB,kBAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAWE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CAAM,KAAK,CAAEY,MAAM,CAAnB,OAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CACGd,IAAI,CACH,KAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,CAAA,CAAM,MAAM,CAAZ,IAAA,CAAoB,IAAI,CAAxB,EAAA,CAA8B,KAAK,CAAnC,YAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADG,GACH,CAAA,CAAA,CADG,CADP,IAAA,CAIE,KAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,CAAA,CACE,aAAa,CADf,CAAA,CAEE,KAAK,CAAE,CACLc,MAAM,CADD,KAAA,CAAA,aAAA,CAAA,CAGHE,KAAK,CAHF,YAAA,CAAA,CAAA,IAAA,CAAA,CAKHC,UAAU,CAPhB,WAES,CAAA,CAAA,CAFT,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CAxBR,KAwBQ,CAJF,CAXF,CARF,CADF,C,yBA9BqBnB,KAAK,CAACC,S,CAAzBF,C,6BAAAA,U,eACiB,a,EAyEvB,GAAMiB,CAAAA,MAAM,CAAGI,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,gBAAgB,CADP,EAAA,CAETC,cAAc,CAHe,CACpB,CADoB,CAK/BC,OAAO,CAAE,CACPC,aAAa,CADN,KAAA,CAEPC,UAAU,CAFH,QAAA,CAGPC,OAAO,CARsB,CAKtB,CALsB,CAU/BxB,KAAK,CAAE,CACLyB,WAAW,CAXf,EAUS,CAVwB,CAAlBR,CAAf,C,aAee,CAAA,EAAA,QAAA,CAAA,SAAA,EAAA,UAAA,C","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Text from '../Typography/Text';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The label text of the item.\n   */\n  label: string;\n  /**\n   * Icon to display for the `DrawerItem`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  active?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Drawer.Item label=\"First Item\" />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass DrawerItem extends React.Component<Props> {\n  static displayName = 'Drawer.Item';\n\n  render() {\n    const {\n      icon,\n      label,\n      active,\n      theme,\n      style,\n      onPress,\n      accessibilityLabel,\n      ...rest\n    } = this.props;\n    const { colors, roundness } = theme;\n    const backgroundColor = active\n      ? color(colors.primary)\n          .alpha(0.12)\n          .rgb()\n          .string()\n      : 'transparent';\n    const contentColor = active\n      ? colors.primary\n      : color(colors.text)\n          .alpha(0.68)\n          .rgb()\n          .string();\n    const font = theme.fonts.medium;\n    const labelMargin = icon ? 32 : 0;\n\n    return (\n      <View\n        {...rest}\n        style={[\n          styles.container,\n          { backgroundColor, borderRadius: roundness },\n          style,\n        ]}\n      >\n        <TouchableRipple\n          borderless\n          delayPressIn={0}\n          onPress={onPress}\n          style={{ borderRadius: roundness }}\n          accessibilityTraits={active ? ['button', 'selected'] : 'button'}\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityStates={active ? ['selected'] : []}\n          accessibilityLabel={accessibilityLabel}\n        >\n          <View style={styles.wrapper}>\n            {icon ? (\n              <Icon source={icon} size={24} color={contentColor} />\n            ) : null}\n            <Text\n              numberOfLines={1}\n              style={[\n                styles.label,\n                {\n                  color: contentColor,\n                  ...font,\n                  marginLeft: labelMargin,\n                },\n              ]}\n            >\n              {label}\n            </Text>\n          </View>\n        </TouchableRipple>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  label: {\n    marginRight: 32,\n  },\n});\n\nexport default withTheme(DrawerItem);\n"]},"metadata":{},"sourceType":"script"}
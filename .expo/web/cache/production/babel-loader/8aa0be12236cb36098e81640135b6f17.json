{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _reactNativeSafeAreaView=_interopRequireDefault(require(\"react-native-safe-area-view\"));var _color=_interopRequireDefault(require(\"color\"));var _overlay=_interopRequireDefault(require(\"../styles/overlay\"));var _Icon=_interopRequireDefault(require(\"./Icon\"));var _Surface=_interopRequireDefault(require(\"./Surface\"));var _Badge=_interopRequireDefault(require(\"./Badge\"));var _TouchableRipple=_interopRequireDefault(require(\"./TouchableRipple\"));var _Text=_interopRequireDefault(require(\"./Typography/Text\"));var _colors=require(\"../styles/colors\");var _theming=require(\"../core/theming\");var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/BottomNavigation.tsx\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var MIN_RIPPLE_SCALE=0.001;var MIN_TAB_WIDTH=96;var MAX_TAB_WIDTH=168;var BAR_HEIGHT=56;var FAR_FAR_AWAY=9999;var Touchable=function Touchable(_ref){var _0=_ref.route,style=_ref.style,children=_ref.children,borderless=_ref.borderless,centered=_ref.centered,rippleColor=_ref.rippleColor,rest=(0,_objectWithoutProperties2.default)(_ref,[\"route\",\"style\",\"children\",\"borderless\",\"centered\",\"rippleColor\"]);return _TouchableRipple.default.supported?React.createElement(_TouchableRipple.default,(0,_extends2.default)({},rest,{borderless:borderless,centered:centered,rippleColor:rippleColor,style:style,__source:{fileName:_jsxFileName,lineNumber:291}}),children):React.createElement(_reactNative.TouchableWithoutFeedback,(0,_extends2.default)({},rest,{__source:{fileName:_jsxFileName,lineNumber:301}}),React.createElement(_reactNative.View,{style:style,__source:{fileName:_jsxFileName,lineNumber:302}},children));};var SceneComponent=function(_React$PureComponent){(0,_inherits2.default)(SceneComponent,_React$PureComponent);function SceneComponent(){(0,_classCallCheck2.default)(this,SceneComponent);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(SceneComponent).apply(this,arguments));}(0,_createClass2.default)(SceneComponent,[{key:\"render\",value:function render(){var _this$props=this.props,component=_this$props.component,rest=(0,_objectWithoutProperties2.default)(_this$props,[\"component\"]);return React.createElement(component,rest);}}]);return SceneComponent;}(React.PureComponent);var BottomNavigation=function(_React$Component){(0,_inherits2.default)(BottomNavigation,_React$Component);(0,_createClass2.default)(BottomNavigation,null,[{key:\"SceneMap\",value:function SceneMap(scenes){return function(_ref2){var route=_ref2.route,jumpTo=_ref2.jumpTo;return React.createElement(SceneComponent,{key:route.key,component:scenes[route.key?route.key:''],route:route,jumpTo:jumpTo,__source:{fileName:_jsxFileName,lineNumber:386}});};}},{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,prevState){var _nextProps$navigation=nextProps.navigationState,index=_nextProps$navigation.index,routes=_nextProps$navigation.routes;var tabs=routes.map(function(_,i){return prevState.tabs[i]||new _reactNative.Animated.Value(i===index?1:0);});var offsets=routes.map(function(_,i){return prevState.offsets[i]||new _reactNative.Animated.Value(i===index?0:1);});var nextState={tabs:tabs,offsets:offsets};if(index!==prevState.current){(0,_extends2.default)(nextState,{current:index,previous:prevState.current,loaded:prevState.loaded.includes(index)?prevState.loaded:[].concat((0,_toConsumableArray2.default)(prevState.loaded),[index])});}return nextState;}}]);function BottomNavigation(props){var _this;(0,_classCallCheck2.default)(this,BottomNavigation);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(BottomNavigation).call(this,props));(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"handleKeyboardShow\",function(){var scale=_this.props.theme.animation.scale;_this.setState({keyboard:true},function(){return _reactNative.Animated.timing(_this.state.visible,{toValue:0,duration:150*scale,useNativeDriver:true}).start();});});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"handleKeyboardHide\",function(){var scale=_this.props.theme.animation.scale;_reactNative.Animated.timing(_this.state.visible,{toValue:1,duration:100*scale,useNativeDriver:true}).start(function(){_this.setState({keyboard:false});});});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"animateToCurrentIndex\",function(){var shifting=_this.isShifting();var _this$props2=_this.props,navigationState=_this$props2.navigationState,scale=_this$props2.theme.animation.scale;var routes=navigationState.routes,index=navigationState.index;_this.state.ripple.setValue(MIN_RIPPLE_SCALE);_reactNative.Animated.parallel([_reactNative.Animated.timing(_this.state.ripple,{toValue:1,duration:shifting?400*scale:0,useNativeDriver:true})].concat((0,_toConsumableArray2.default)(routes.map(function(_,i){return _reactNative.Animated.timing(_this.state.tabs[i],{toValue:i===index?1:0,duration:shifting?150*scale:0,useNativeDriver:true});})))).start(function(_ref3){var finished=_ref3.finished;_this.state.tabs.map(function(tab,i){return tab.setValue(i===index?1:0);});_this.state.index.setValue(index);_this.state.ripple.setValue(MIN_RIPPLE_SCALE);if(finished){_this.state.offsets.forEach(function(offset,i){if(i===index){offset.setValue(0);}else{offset.setValue(1);}});}});});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"handleLayout\",function(e){var layout=_this.state.layout;var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;if(height===layout.height&&width===layout.width){return;}_this.setState({layout:{height:height,width:width,measured:true}});});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"handleTabPress\",function(index){var _this$props3=_this.props,navigationState=_this$props3.navigationState,onTabPress=_this$props3.onTabPress,onIndexChange=_this$props3.onIndexChange;var event={route:navigationState.routes[index],defaultPrevented:false,preventDefault:function preventDefault(){event.defaultPrevented=true;}};onTabPress===null||onTabPress===void 0?void 0:onTabPress(event);if(event.defaultPrevented){return;}if(index!==navigationState.index){onIndexChange(index);}});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"jumpTo\",function(key){var index=_this.props.navigationState.routes.findIndex(function(route){return route.key===key;});_this.props.onIndexChange(index);});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"isShifting\",function(){return typeof _this.props.shifting==='boolean'?_this.props.shifting:_this.props.navigationState.routes.length>3;});var _index=_this.props.navigationState.index;_this.state={visible:new _reactNative.Animated.Value(1),tabs:[],offsets:[],index:new _reactNative.Animated.Value(_index),ripple:new _reactNative.Animated.Value(MIN_RIPPLE_SCALE),touch:new _reactNative.Animated.Value(MIN_RIPPLE_SCALE),layout:{height:0,width:0,measured:false},current:_index,previous:0,loaded:[_index],keyboard:false};return _this;}(0,_createClass2.default)(BottomNavigation,[{key:\"componentDidMount\",value:function componentDidMount(){this.animateToCurrentIndex();if(_reactNative.Platform.OS==='ios'){_reactNative.Keyboard.addListener('keyboardWillShow',this.handleKeyboardShow);_reactNative.Keyboard.addListener('keyboardWillHide',this.handleKeyboardHide);}else{_reactNative.Keyboard.addListener('keyboardDidShow',this.handleKeyboardShow);_reactNative.Keyboard.addListener('keyboardDidHide',this.handleKeyboardHide);}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this2=this;if(prevProps.navigationState.index===this.props.navigationState.index){return;}this.state.offsets.forEach(function(offset,i){if(i===_this2.props.navigationState.index||i===prevProps.navigationState.index){offset.setValue(0);}});this.animateToCurrentIndex();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(_reactNative.Platform.OS==='ios'){_reactNative.Keyboard.removeListener('keyboardWillShow',this.handleKeyboardShow);_reactNative.Keyboard.removeListener('keyboardWillHide',this.handleKeyboardHide);}else{_reactNative.Keyboard.removeListener('keyboardDidShow',this.handleKeyboardShow);_reactNative.Keyboard.removeListener('keyboardDidHide',this.handleKeyboardHide);}}},{key:\"render\",value:function render(){var _this3=this;var _this$props4=this.props,navigationState=_this$props4.navigationState,renderScene=_this$props4.renderScene,renderIcon=_this$props4.renderIcon,renderLabel=_this$props4.renderLabel,_this$props4$renderTo=_this$props4.renderTouchable,renderTouchable=_this$props4$renderTo===void 0?function(props){return React.createElement(Touchable,(0,_extends2.default)({},props,{__source:{fileName:_jsxFileName,lineNumber:627}}));}:_this$props4$renderTo,_this$props4$getLabel=_this$props4.getLabelText,getLabelText=_this$props4$getLabel===void 0?function(_ref4){var route=_ref4.route;return route.title;}:_this$props4$getLabel,_this$props4$getBadge=_this$props4.getBadge,getBadge=_this$props4$getBadge===void 0?function(_ref5){var route=_ref5.route;return route.badge;}:_this$props4$getBadge,_this$props4$getColor=_this$props4.getColor,getColor=_this$props4$getColor===void 0?function(_ref6){var route=_ref6.route;return route.color;}:_this$props4$getColor,_this$props4$getAcces=_this$props4.getAccessibilityLabel,getAccessibilityLabel=_this$props4$getAcces===void 0?function(_ref7){var route=_ref7.route;return route.accessibilityLabel;}:_this$props4$getAcces,_this$props4$getTestI=_this$props4.getTestID,getTestID=_this$props4$getTestI===void 0?function(_ref8){var route=_ref8.route;return route.testID;}:_this$props4$getTestI,activeColor=_this$props4.activeColor,inactiveColor=_this$props4.inactiveColor,keyboardHidesNavigationBar=_this$props4.keyboardHidesNavigationBar,barStyle=_this$props4.barStyle,labeled=_this$props4.labeled,style=_this$props4.style,theme=_this$props4.theme,sceneAnimationEnabled=_this$props4.sceneAnimationEnabled;var _this$state=this.state,layout=_this$state.layout,loaded=_this$state.loaded,index=_this$state.index,visible=_this$state.visible,ripple=_this$state.ripple,keyboard=_this$state.keyboard,tabs=_this$state.tabs,offsets=_this$state.offsets;var routes=navigationState.routes;var colors=theme.colors,isDarkTheme=theme.dark,mode=theme.mode;var shifting=this.isShifting();var _ref9=_reactNative.StyleSheet.flatten(barStyle)||{},customBackground=_ref9.backgroundColor,_ref9$elevation=_ref9.elevation,elevation=_ref9$elevation===void 0?4:_ref9$elevation;var approxBackgroundColor=customBackground?customBackground:isDarkTheme&&mode==='adaptive'?(0,_overlay.default)(elevation,colors.surface):colors.primary;var backgroundColor=shifting?index.interpolate({inputRange:routes.map(function(_,i){return i;}),outputRange:routes.map(function(route){return getColor({route:route})||approxBackgroundColor;})}):approxBackgroundColor;var isDark=!(0,_color.default)(approxBackgroundColor).isLight();var textColor=isDark?_colors.white:_colors.black;var activeTintColor=typeof activeColor!=='undefined'?activeColor:textColor;var inactiveTintColor=typeof inactiveColor!=='undefined'?inactiveColor:(0,_color.default)(textColor).alpha(0.5).rgb().string();var touchColor=(0,_color.default)(activeColor||activeTintColor).alpha(0.12).rgb().string();var maxTabWidth=routes.length>3?MIN_TAB_WIDTH:MAX_TAB_WIDTH;var maxTabBarWidth=maxTabWidth*routes.length;var tabBarWidth=Math.min(layout.width,maxTabBarWidth);var tabWidth=tabBarWidth/routes.length;var rippleSize=layout.width/4;return React.createElement(_reactNative.View,{style:[styles.container,style],__source:{fileName:_jsxFileName,lineNumber:705}},React.createElement(_reactNative.View,{style:[styles.content,{backgroundColor:colors.background}],__source:{fileName:_jsxFileName,lineNumber:706}},routes.map(function(route,index){if(!loaded.includes(index)){return null;}var focused=navigationState.index===index;var opacity=sceneAnimationEnabled!==false?tabs[index]:focused?1:0;var top=offsets[index].interpolate({inputRange:[0,1],outputRange:[0,FAR_FAR_AWAY]});return React.createElement(_reactNative.Animated.View,{key:route.key,pointerEvents:focused?'auto':'none',accessibilityElementsHidden:!focused,importantForAccessibility:focused?'auto':'no-hide-descendants',style:[_reactNative.StyleSheet.absoluteFill,{opacity:opacity}],collapsable:false,removeClippedSubviews:_reactNative.Platform.OS==='ios'?navigationState.index!==index:true,__source:{fileName:_jsxFileName,lineNumber:723}},React.createElement(_reactNative.Animated.View,{style:[styles.content,{top:top}],__source:{fileName:_jsxFileName,lineNumber:738}},renderScene({route:route,jumpTo:_this3.jumpTo})));})),React.createElement(_Surface.default,{style:[styles.bar,keyboardHidesNavigationBar?{transform:[{translateY:visible.interpolate({inputRange:[0,1],outputRange:[layout.height,0]})}],position:keyboard?'absolute':null}:null,barStyle],pointerEvents:layout.measured?keyboardHidesNavigationBar&&keyboard?'none':'auto':'none',onLayout:this.handleLayout,__source:{fileName:_jsxFileName,lineNumber:748}},React.createElement(_reactNative.Animated.View,{style:[styles.barContent,{backgroundColor:backgroundColor}],__source:{fileName:_jsxFileName,lineNumber:780}},React.createElement(_reactNativeSafeAreaView.default,{forceInset:{top:'never',bottom:'always'},style:[styles.items,{maxWidth:maxTabBarWidth}],__source:{fileName:_jsxFileName,lineNumber:781}},shifting?React.createElement(_reactNative.Animated.View,{pointerEvents:\"none\",style:[styles.ripple,{top:(BAR_HEIGHT-rippleSize)/2,left:tabWidth*(navigationState.index+0.5)-rippleSize/2,height:rippleSize,width:rippleSize,borderRadius:rippleSize/2,backgroundColor:getColor({route:routes[navigationState.index]}),transform:[{scale:ripple.interpolate({inputRange:[0,1],outputRange:[0,8]})}],opacity:ripple.interpolate({inputRange:[0,MIN_RIPPLE_SCALE,0.3,1],outputRange:[0,0,1,1]})}],__source:{fileName:_jsxFileName,lineNumber:786}}):null,routes.map(function(route,index){var focused=navigationState.index===index;var active=tabs[index];var scale=labeled&&shifting?active.interpolate({inputRange:[0,1],outputRange:[0.5,1]}):1;var translateY=labeled?shifting?active.interpolate({inputRange:[0,1],outputRange:[7,0]}):0:7;var activeOpacity=active;var inactiveOpacity=active.interpolate({inputRange:[0,1],outputRange:[1,0]});var badge=getBadge({route:route});return renderTouchable({key:route.key,route:route,borderless:true,centered:true,rippleColor:touchColor,onPress:function onPress(){return _this3.handleTabPress(index);},testID:getTestID({route:route}),accessibilityLabel:getAccessibilityLabel({route:route}),accessibilityTraits:focused?['button','selected']:'button',accessibilityComponentType:'button',accessibilityRole:'button',accessibilityStates:['selected'],style:styles.item,children:React.createElement(_reactNative.View,{pointerEvents:\"none\",__source:{fileName:_jsxFileName,lineNumber:871}},React.createElement(_reactNative.Animated.View,{style:[styles.iconContainer,{transform:[{translateY:translateY}]}],__source:{fileName:_jsxFileName,lineNumber:872}},React.createElement(_reactNative.Animated.View,{style:[styles.iconWrapper,{opacity:activeOpacity}],__source:{fileName:_jsxFileName,lineNumber:878}},renderIcon?renderIcon({route:route,focused:true,color:activeTintColor}):React.createElement(_Icon.default,{source:route.icon,color:activeTintColor,size:24,__source:{fileName:_jsxFileName,lineNumber:891}})),React.createElement(_reactNative.Animated.View,{style:[styles.iconWrapper,{opacity:inactiveOpacity}],__source:{fileName:_jsxFileName,lineNumber:898}},renderIcon?renderIcon({route:route,focused:false,color:inactiveTintColor}):React.createElement(_Icon.default,{source:route.icon,color:inactiveTintColor,size:24,__source:{fileName:_jsxFileName,lineNumber:911}})),React.createElement(_reactNative.View,{style:[styles.badgeContainer,{right:(badge!=null&&typeof badge!=='boolean'?String(badge).length*-2:0)-2}],__source:{fileName:_jsxFileName,lineNumber:918}},typeof badge==='boolean'?React.createElement(_Badge.default,{visible:badge,size:8,__source:{fileName:_jsxFileName,lineNumber:930}}):React.createElement(_Badge.default,{visible:badge!=null,size:16,__source:{fileName:_jsxFileName,lineNumber:932}},badge))),labeled?React.createElement(_reactNative.Animated.View,{style:[styles.labelContainer,{transform:[{scale:scale}]}],__source:{fileName:_jsxFileName,lineNumber:939}},React.createElement(_reactNative.Animated.View,{style:[styles.labelWrapper,{opacity:activeOpacity}],__source:{fileName:_jsxFileName,lineNumber:945}},renderLabel?renderLabel({route:route,focused:true,color:activeTintColor}):React.createElement(_Text.default,{style:[styles.label,{color:activeTintColor}],__source:{fileName:_jsxFileName,lineNumber:958}},getLabelText({route:route}))),shifting?null:React.createElement(_reactNative.Animated.View,{style:[styles.labelWrapper,{opacity:inactiveOpacity}],__source:{fileName:_jsxFileName,lineNumber:969}},renderLabel?renderLabel({route:route,focused:false,color:inactiveTintColor}):React.createElement(_Text.default,{style:[styles.label,{color:inactiveTintColor}],__source:{fileName:_jsxFileName,lineNumber:982}},getLabelText({route:route})))):React.createElement(_reactNative.View,{style:styles.labelContainer,__source:{fileName:_jsxFileName,lineNumber:995}}))});})))));}}]);return BottomNavigation;}(React.Component);(0,_defineProperty2.default)(BottomNavigation,\"defaultProps\",{labeled:true,keyboardHidesNavigationBar:true});var _default=(0,_theming.withTheme)(BottomNavigation);exports.default=_default;var styles=_reactNative.StyleSheet.create({container:{flex:1,overflow:'hidden'},content:{flex:1},bar:{left:0,right:0,bottom:0,elevation:4},barContent:{alignItems:'center',overflow:'hidden'},items:{flexDirection:'row',width:'100%'},item:{flex:1,paddingVertical:6},ripple:{position:'absolute'},iconContainer:{height:24,width:24,marginTop:2,marginHorizontal:12,alignSelf:'center'},iconWrapper:_objectSpread({},_reactNative.StyleSheet.absoluteFillObject,{alignItems:'center'}),labelContainer:{height:16,paddingBottom:2},labelWrapper:_objectSpread({},_reactNative.StyleSheet.absoluteFillObject),label:_objectSpread({fontSize:12,textAlign:'center',backgroundColor:'transparent'},_reactNative.Platform.OS==='web'?{whiteSpace:'nowrap'}:null),badgeContainer:{position:'absolute',left:0,top:-2}});","map":{"version":3,"sources":["BottomNavigation.tsx"],"names":["MIN_RIPPLE_SCALE","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","FAR_FAR_AWAY","Touchable","_0","style","children","borderless","centered","rippleColor","rest","TouchableRipple","SceneComponent","React","PureComponent","component","BottomNavigation","Component","scenes","route","jumpTo","labeled","keyboardHidesNavigationBar","nextProps","prevState","index","routes","tabs","Animated","i","offsets","nextState","current","previous","loaded","visible","ripple","touch","layout","height","width","measured","keyboard","Platform","Keyboard","prevProps","offset","scale","toValue","duration","useNativeDriver","shifting","navigationState","finished","tab","e","onTabPress","onIndexChange","event","defaultPrevented","preventDefault","renderScene","renderIcon","renderLabel","renderTouchable","getLabelText","getBadge","getColor","getAccessibilityLabel","getTestID","activeColor","inactiveColor","barStyle","theme","sceneAnimationEnabled","colors","isDarkTheme","mode","customBackground","elevation","StyleSheet","approxBackgroundColor","backgroundColor","inputRange","outputRange","isDark","textColor","white","black","activeTintColor","inactiveTintColor","touchColor","maxTabWidth","maxTabBarWidth","tabBarWidth","Math","tabWidth","rippleSize","styles","focused","opacity","top","transform","translateY","position","bottom","maxWidth","left","borderRadius","active","activeOpacity","inactiveOpacity","badge","key","onPress","testID","accessibilityLabel","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityStates","color","right","String","container","flex","overflow","content","bar","barContent","alignItems","items","flexDirection","item","paddingVertical","iconContainer","marginTop","marginHorizontal","alignSelf","iconWrapper","labelContainer","paddingBottom","labelWrapper","label","fontSize","textAlign","whiteSpace","badgeContainer"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-multi-comp */\n\nimport * as React from 'react';\nimport {\n  View,\n  Animated,\n  TouchableWithoutFeedback,\n  TouchableWithoutFeedbackProps,\n  StyleSheet,\n  StyleProp,\n  Platform,\n  Keyboard,\n  ViewStyle,\n  LayoutChangeEvent,\n} from 'react-native';\nimport SafeAreaView from 'react-native-safe-area-view';\nimport color from 'color';\nimport overlay from '../styles/overlay';\nimport Icon, { IconSource } from './Icon';\nimport Surface from './Surface';\nimport Badge from './Badge';\nimport TouchableRipple from './TouchableRipple';\nimport Text from './Typography/Text';\nimport { black, white } from '../styles/colors';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Route = {\n  key: string;\n  title?: string;\n  icon?: IconSource;\n  badge?: string | number | boolean;\n  color?: string;\n  accessibilityLabel?: string;\n  testID?: string;\n};\n\ntype NavigationState = {\n  index: number;\n  routes: Route[];\n};\n\ntype TabPressEvent = {\n  defaultPrevented: boolean;\n  preventDefault(): void;\n};\n\ntype TouchableProps = TouchableWithoutFeedbackProps & {\n  key: string;\n  route: Route;\n  children: React.ReactNode;\n  borderless?: boolean;\n  centered?: boolean;\n  rippleColor?: string;\n};\n\ntype Props = {\n  /**\n   * Whether the shifting style is used, the active tab appears wider and the inactive tabs won't have a label.\n   * By default, this is `true` when you have more than 3 tabs.\n   */\n  shifting?: boolean;\n  /**\n   * Whether to show labels in tabs. When `false`, only icons will be displayed.\n   */\n  labeled?: boolean;\n  /**\n   * State for the bottom navigation. The state should contain the following properties:\n   *\n   * - `index`: a number reprsenting the index of the active route in the `routes` array\n   * - `routes`: an array containing a list of route objects used for rendering the tabs\n   *\n   * Each route object should contain the following properties:\n   *\n   * - `key`: a unique key to identify the route (required)\n   * - `title`: title of the route to use as the tab label\n   * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n   * - `color`: color to use as background color for shifting bottom navigation\n   * - `badge`: badge to show on the tab icon, can be `true` to show a dot, `string` or `number` to show text.\n   * - `accessibilityLabel`: accessibility label for the tab button\n   * - `testID`: test id for the tab button\n   *\n   * Example:\n   *\n   * ```js\n   * {\n   *   index: 1,\n   *   routes: [\n   *     { key: 'music', title: 'Music', icon: 'queue-music', color: '#3F51B5' },\n   *     { key: 'albums', title: 'Albums', icon: 'album', color: '#009688' },\n   *     { key: 'recents', title: 'Recents', icon: 'history', color: '#795548' },\n   *     { key: 'purchased', title: 'Purchased', icon: 'shopping-cart', color: '#607D8B' },\n   *   ]\n   * }\n   * ```\n   *\n   * `BottomNavigation` is a controlled component, which means the `index` needs to be updated via the `onIndexChange` callback.\n   */\n  navigationState: NavigationState;\n  /**\n   * Callback which is called on tab change, receives the index of the new tab as argument.\n   * The navigation state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onIndexChange: (index: number) => void;\n  /**\n   * Callback which returns a react element to render as the page for the tab. Receives an object containing the route as the argument:\n   *\n   * ```js\n   * renderScene = ({ route, jumpTo }) => {\n   *   switch (route.key) {\n   *     case 'music':\n   *       return <MusicRoute jumpTo={jumpTo} />;\n   *     case 'albums':\n   *       return <AlbumsRoute jumpTo={jumpTo} />;\n   *   }\n   * }\n   * ```\n   *\n   * Pages are lazily rendered, which means that a page will be rendered the first time you navigate to it.\n   * After initial render, all the pages stay rendered to preserve their state.\n   *\n   * You need to make sure that your individual routes implement a `shouldComponentUpdate` to improve the performance.\n   * To make it easier to specify the components, you can use the `SceneMap` helper:\n   *\n   * ```js\n   * renderScene = BottomNavigation.SceneMap({\n   *   music: MusicRoute,\n   *   albums: AlbumsRoute,\n   * });\n   * ```\n   *\n   * Specifying the components this way is easier and takes care of implementing a `shouldComponentUpdate` method.\n   * Each component will receive the current route and a `jumpTo` method as it's props.\n   * The `jumpTo` method can be used to navigate to other tabs programmatically:\n   *\n   * ```js\n   * this.props.jumpTo('albums')\n   * ```\n   */\n  renderScene: (props: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => React.ReactNode | null;\n  /**\n   * Callback which returns a React Element to be used as tab icon.\n   */\n  renderIcon?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which React Element to be used as tab label.\n   */\n  renderLabel?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to be used as the touchable for the tab item.\n   * Renders a `TouchableRipple` on Android and `TouchableWithoutFeedback` with `View` on iOS.\n   */\n  renderTouchable?: (props: TouchableProps) => React.ReactNode;\n  /**\n   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n   */\n  getLabelText?: (props: { route: Route }) => string;\n  /**\n   * Get accessibility label for the tab button. This is read by the screen reader when the user taps the tab.\n   * Uses `route.accessibilityLabel` by default.\n   */\n  getAccessibilityLabel?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get the id to locate this tab button in tests, uses `route.testID` by default.\n   */\n  getTestID?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get badge for the tab, uses `route.badge` by default.\n   */\n  getBadge?: (props: { route: Route }) => boolean | number | string | undefined;\n  /**\n   * Get color for the tab, uses `route.color` by default.\n   */\n  getColor?: (props: { route: Route }) => string | undefined;\n  /**\n   * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n   */\n  onTabPress?: (props: { route: Route } & TabPressEvent) => void;\n  /**\n   * Custom color for icon and label in the active tab.\n   */\n  activeColor?: string;\n  /**\n   * Custom color for icon and label in the inactive tab.\n   */\n  inactiveColor?: string;\n  /**\n   * Whether animation is enabled for scenes transitions in `shifting` mode.\n   * By default, the scenes cross-fade during tab change when `shifting` is enabled.\n   * Specify `sceneAnimationEnabled` as `false` to disable the animation.\n   */\n  sceneAnimationEnabled?: boolean;\n  /**\n   * Whether the bottom navigation bar is hidden when keyboard is shown.\n   * On Android, this works best when [`windowSoftInputMode`](https://developer.android.com/guide/topics/manifest/activity-element#wsoft) is set to `adjustResize`.\n   */\n  keyboardHidesNavigationBar?: boolean;\n  /**\n   * Style for the bottom navigation bar.\n   * You can set a bottom padding here if you have a translucent navigation bar on Android:\n   *\n   * ```js\n   * barStyle={{ paddingBottom: 48 }}\n   * ```\n   */\n  barStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  /**\n   * Visibility of the navigation bar, visible state is 1 and invisible is 0.\n   */\n  visible: Animated.Value;\n  /**\n   * Active state of individual tab items, active state is 1 and inactve state is 0.\n   */\n  tabs: Animated.Value[];\n  /**\n   * The top offset for each tab item to position it offscreen.\n   * Placing items offscreen helps to save memory usage for inactive screens with removeClippedSubviews.\n   * We use animated values for this to prevent unnecesary re-renders.\n   */\n  offsets: Animated.Value[];\n  /**\n   * Index of the currently active tab. Used for setting the background color.\n   * Use don't use the color as an animated value directly, because `setValue` seems to be buggy with colors.\n   */\n  index: Animated.Value;\n  /**\n   * Animation for the touch, used to determine it's scale and opacity.\n   */\n  touch: Animated.Value;\n  /**\n   * Animation for the background color ripple, used to determine it's scale and opacity.\n   */\n  ripple: Animated.Value;\n  /**\n   * Layout of the navigation bar. The width is used to determine the size and position of the ripple.\n   */\n  layout: { height: number; width: number; measured: boolean };\n  /**\n   * Currently active index. Used only for getDerivedStateFromProps.\n   */\n  current: number;\n  /**\n   * Previously active index. Used to determine the position of the ripple.\n   */\n  previous: number;\n  /**\n   * List of loaded tabs, tabs will be loaded when navigated to.\n   */\n  loaded: number[];\n  /**\n   * Trak whether the keyboard is visible to show and hide the navigation bar.\n   */\n  keyboard: boolean;\n};\n\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\nconst MIN_TAB_WIDTH = 96;\nconst MAX_TAB_WIDTH = 168;\nconst BAR_HEIGHT = 56;\nconst FAR_FAR_AWAY = 9999;\n\nconst Touchable = ({\n  route: _0,\n  style,\n  children,\n  borderless,\n  centered,\n  rippleColor,\n  ...rest\n}: TouchableProps) =>\n  TouchableRipple.supported ? (\n    <TouchableRipple\n      {...rest}\n      borderless={borderless}\n      centered={centered}\n      rippleColor={rippleColor}\n      style={style}\n    >\n      {children}\n    </TouchableRipple>\n  ) : (\n    <TouchableWithoutFeedback {...rest}>\n      <View style={style}>{children}</View>\n    </TouchableWithoutFeedback>\n  );\n\nclass SceneComponent extends React.PureComponent<any> {\n  render() {\n    const { component, ...rest } = this.props;\n    return React.createElement(component, rest);\n  }\n}\n\n/**\n * Bottom navigation provides quick navigation between top-level views of an app with a bottom navigation bar.\n * It is primarily designed for use on mobile.\n *\n * For integration with React Navigation, you can use [react-navigation-material-bottom-tab-navigator](https://github.com/react-navigation/react-navigation-material-bottom-tab-navigator).\n *\n * By default Bottom navigation uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more informations\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/bottom-navigation.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { BottomNavigation, Text } from 'react-native-paper';\n *\n * const MusicRoute = () => <Text>Music</Text>;\n *\n * const AlbumsRoute = () => <Text>Albums</Text>;\n *\n * const RecentsRoute = () => <Text>Recents</Text>;\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     index: 0,\n *     routes: [\n *       { key: 'music', title: 'Music', icon: 'queue-music' },\n *       { key: 'albums', title: 'Albums', icon: 'album' },\n *       { key: 'recents', title: 'Recents', icon: 'history' },\n *     ],\n *   };\n *\n *   _handleIndexChange = index => this.setState({ index });\n *\n *   _renderScene = BottomNavigation.SceneMap({\n *     music: MusicRoute,\n *     albums: AlbumsRoute,\n *     recents: RecentsRoute,\n *   });\n *\n *   render() {\n *     return (\n *       <BottomNavigation\n *         navigationState={this.state}\n *         onIndexChange={this._handleIndexChange}\n *         renderScene={this._renderScene}\n *       />\n *     );\n *   }\n * }\n * ```\n */\nclass BottomNavigation extends React.Component<Props, State> {\n  /**\n   * Function which takes a map of route keys to components.\n   * Pure components are used to minmize re-rendering of the pages.\n   * This drastically improves the animation performance.\n   */\n  static SceneMap(scenes: {\n    [key: string]: React.ComponentType<{\n      route: Route;\n      jumpTo: (key: string) => void;\n    }>;\n  }) {\n    return ({\n      route,\n      jumpTo,\n    }: {\n      route: Route;\n      jumpTo: (key: string) => void;\n    }) => (\n      <SceneComponent\n        key={route.key}\n        component={scenes[route.key ? route.key : '']}\n        route={route}\n        jumpTo={jumpTo}\n      />\n    );\n  }\n\n  static defaultProps = {\n    labeled: true,\n    keyboardHidesNavigationBar: true,\n  };\n\n  static getDerivedStateFromProps(nextProps: any, prevState: State) {\n    const { index, routes } = nextProps.navigationState;\n\n    // Re-create animated values if routes have been added/removed\n    // Preserve previous animated values if they exist, so we don't break animations\n    const tabs = routes.map(\n      // focused === 1, unfocused === 0\n      (_: any, i: number) =>\n        prevState.tabs[i] || new Animated.Value(i === index ? 1 : 0)\n    );\n    const offsets = routes.map(\n      // offscreen === 1, normal === 0\n      (_: any, i: number) =>\n        prevState.offsets[i] || new Animated.Value(i === index ? 0 : 1)\n    );\n\n    const nextState = {\n      tabs,\n      offsets,\n    };\n\n    if (index !== prevState.current) {\n      /* $FlowFixMe */\n      Object.assign(nextState, {\n        // Store the current index in state so that we can later check if the index has changed\n        current: index,\n        previous: prevState.current,\n        // Set the current tab to be loaded if it was not loaded before\n        loaded: prevState.loaded.includes(index)\n          ? prevState.loaded\n          : [...prevState.loaded, index],\n      });\n    }\n\n    return nextState;\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    const { index } = this.props.navigationState;\n\n    this.state = {\n      visible: new Animated.Value(1),\n      tabs: [],\n      offsets: [],\n      index: new Animated.Value(index),\n      ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n      layout: { height: 0, width: 0, measured: false },\n      current: index,\n      previous: 0,\n      loaded: [index],\n      keyboard: false,\n    };\n  }\n\n  componentDidMount() {\n    // Workaround for native animated bug in react-native@^0.57\n    // Context: https://github.com/callstack/react-native-paper/pull/637\n    this.animateToCurrentIndex();\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', this.handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', this.handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', this.handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', this.handleKeyboardHide);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.navigationState.index === this.props.navigationState.index) {\n      return;\n    }\n\n    // Reset offsets of previous and current tabs before animation\n    this.state.offsets.forEach((offset, i) => {\n      if (\n        i === this.props.navigationState.index ||\n        i === prevProps.navigationState.index\n      ) {\n        offset.setValue(0);\n      }\n    });\n\n    this.animateToCurrentIndex();\n  }\n\n  componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.removeListener('keyboardWillShow', this.handleKeyboardShow);\n      Keyboard.removeListener('keyboardWillHide', this.handleKeyboardHide);\n    } else {\n      Keyboard.removeListener('keyboardDidShow', this.handleKeyboardShow);\n      Keyboard.removeListener('keyboardDidHide', this.handleKeyboardHide);\n    }\n  }\n\n  private handleKeyboardShow = () => {\n    const { scale } = this.props.theme.animation;\n    this.setState({ keyboard: true }, () =>\n      Animated.timing(this.state.visible, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start()\n    );\n  };\n\n  private handleKeyboardHide = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.visible, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true,\n    }).start(() => {\n      this.setState({ keyboard: false });\n    });\n  };\n\n  private animateToCurrentIndex = () => {\n    const shifting = this.isShifting();\n    const {\n      navigationState,\n      theme: {\n        animation: { scale },\n      },\n    } = this.props;\n    const { routes, index } = navigationState;\n\n    // Reset the ripple to avoid glitch if it's currently animating\n    this.state.ripple.setValue(MIN_RIPPLE_SCALE);\n\n    Animated.parallel([\n      Animated.timing(this.state.ripple, {\n        toValue: 1,\n        duration: shifting ? 400 * scale : 0,\n        useNativeDriver: true,\n      }),\n      ...routes.map((_, i) =>\n        Animated.timing(this.state.tabs[i], {\n          toValue: i === index ? 1 : 0,\n          duration: shifting ? 150 * scale : 0,\n          useNativeDriver: true,\n        })\n      ),\n    ]).start(({ finished }) => {\n      // Workaround a bug in native animations where this is reset after first animation\n      this.state.tabs.map((tab, i) => tab.setValue(i === index ? 1 : 0));\n\n      // Update the index to change bar's bacground color and then hide the ripple\n      this.state.index.setValue(index);\n      this.state.ripple.setValue(MIN_RIPPLE_SCALE);\n\n      if (finished) {\n        // Position all inactive screens offscreen to save memory usage\n        // Only do it when animation has finished to avoid glitches mid-transition if switching fast\n        this.state.offsets.forEach((offset, i) => {\n          if (i === index) {\n            offset.setValue(0);\n          } else {\n            offset.setValue(1);\n          }\n        });\n      }\n    });\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { layout } = this.state;\n    const { height, width } = e.nativeEvent.layout;\n\n    if (height === layout.height && width === layout.width) {\n      return;\n    }\n\n    this.setState({\n      layout: {\n        height,\n        width,\n        measured: true,\n      },\n    });\n  };\n\n  private handleTabPress = (index: number) => {\n    const { navigationState, onTabPress, onIndexChange } = this.props;\n\n    const event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: () => {\n        event.defaultPrevented = true;\n      },\n    };\n\n    onTabPress?.(event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (index !== navigationState.index) {\n      onIndexChange(index);\n    }\n  };\n\n  private jumpTo = (key: string) => {\n    const index = this.props.navigationState.routes.findIndex(\n      route => route.key === key\n    );\n\n    this.props.onIndexChange(index);\n  };\n\n  private isShifting = () =>\n    typeof this.props.shifting === 'boolean'\n      ? this.props.shifting\n      : this.props.navigationState.routes.length > 3;\n\n  render() {\n    const {\n      navigationState,\n      renderScene,\n      renderIcon,\n      renderLabel,\n      renderTouchable = (props: TouchableProps) => <Touchable {...props} />,\n      getLabelText = ({ route }: { route: Route }) => route.title,\n      getBadge = ({ route }: { route: Route }) => route.badge,\n      getColor = ({ route }: { route: Route }) => route.color,\n      getAccessibilityLabel = ({ route }: { route: Route }) =>\n        route.accessibilityLabel,\n      getTestID = ({ route }: { route: Route }) => route.testID,\n      activeColor,\n      inactiveColor,\n      keyboardHidesNavigationBar,\n      barStyle,\n      labeled,\n      style,\n      theme,\n      sceneAnimationEnabled,\n    } = this.props;\n\n    const {\n      layout,\n      loaded,\n      index,\n      visible,\n      ripple,\n      keyboard,\n      tabs,\n      offsets,\n    } = this.state;\n    const { routes } = navigationState;\n    const { colors, dark: isDarkTheme, mode } = theme;\n\n    const shifting = this.isShifting();\n\n    const { backgroundColor: customBackground, elevation = 4 }: ViewStyle =\n      StyleSheet.flatten(barStyle) || {};\n\n    const approxBackgroundColor = customBackground\n      ? customBackground\n      : isDarkTheme && mode === 'adaptive'\n      ? overlay(elevation, colors.surface)\n      : colors.primary;\n\n    const backgroundColor = shifting\n      ? index.interpolate({\n          inputRange: routes.map((_, i) => i),\n          //@ts-ignore\n          outputRange: routes.map(\n            route => getColor({ route }) || approxBackgroundColor\n          ),\n        })\n      : approxBackgroundColor;\n\n    const isDark = !color(approxBackgroundColor).isLight();\n\n    const textColor = isDark ? white : black;\n    const activeTintColor =\n      typeof activeColor !== 'undefined' ? activeColor : textColor;\n    const inactiveTintColor =\n      typeof inactiveColor !== 'undefined'\n        ? inactiveColor\n        : color(textColor)\n            .alpha(0.5)\n            .rgb()\n            .string();\n\n    const touchColor = color(activeColor || activeTintColor)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n    const maxTabBarWidth = maxTabWidth * routes.length;\n\n    const tabBarWidth = Math.min(layout.width, maxTabBarWidth);\n    const tabWidth = tabBarWidth / routes.length;\n\n    const rippleSize = layout.width / 4;\n\n    return (\n      <View style={[styles.container, style]}>\n        <View style={[styles.content, { backgroundColor: colors.background }]}>\n          {routes.map((route, index) => {\n            if (!loaded.includes(index)) {\n              // Don't render a screen if we've never navigated to it\n              return null;\n            }\n            const focused = navigationState.index === index;\n\n            const opacity =\n              sceneAnimationEnabled !== false ? tabs[index] : focused ? 1 : 0;\n\n            const top = offsets[index].interpolate({\n              inputRange: [0, 1],\n              outputRange: [0, FAR_FAR_AWAY],\n            });\n\n            return (\n              <Animated.View\n                key={route.key}\n                pointerEvents={focused ? 'auto' : 'none'}\n                accessibilityElementsHidden={!focused}\n                importantForAccessibility={\n                  focused ? 'auto' : 'no-hide-descendants'\n                }\n                style={[StyleSheet.absoluteFill, { opacity }]}\n                collapsable={false}\n                removeClippedSubviews={\n                  // On iOS, set removeClippedSubviews to true only when not focused\n                  // This is an workaround for a bug where the clipped view never re-appears\n                  Platform.OS === 'ios' ? navigationState.index !== index : true\n                }\n              >\n                <Animated.View style={[styles.content, { top }]}>\n                  {renderScene({\n                    route,\n                    jumpTo: this.jumpTo,\n                  })}\n                </Animated.View>\n              </Animated.View>\n            );\n          })}\n        </View>\n        <Surface\n          style={\n            [\n              styles.bar,\n              keyboardHidesNavigationBar\n                ? {\n                    // When the keyboard is shown, slide down the navigation bar\n                    transform: [\n                      {\n                        translateY: visible.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [layout.height, 0],\n                        }),\n                      },\n                    ],\n                    // Absolutely position the navigation bar so that the content is below it\n                    // This is needed to avoid gap at bottom when the navigation bar is hidden\n                    position: keyboard ? 'absolute' : null,\n                  }\n                : null,\n              barStyle,\n            ] as StyleProp<ViewStyle>\n          }\n          pointerEvents={\n            layout.measured\n              ? keyboardHidesNavigationBar && keyboard\n                ? 'none'\n                : 'auto'\n              : 'none'\n          }\n          onLayout={this.handleLayout}\n        >\n          <Animated.View style={[styles.barContent, { backgroundColor }]}>\n            <SafeAreaView\n              forceInset={{ top: 'never', bottom: 'always' }}\n              style={[styles.items, { maxWidth: maxTabBarWidth }]}\n            >\n              {shifting ? (\n                <Animated.View\n                  pointerEvents=\"none\"\n                  style={[\n                    styles.ripple,\n                    {\n                      // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n                      // We need to move it from the top to center of the navigation bar and from the left to the active tab.\n                      top: (BAR_HEIGHT - rippleSize) / 2,\n                      left:\n                        tabWidth * (navigationState.index + 0.5) -\n                        rippleSize / 2,\n                      height: rippleSize,\n                      width: rippleSize,\n                      borderRadius: rippleSize / 2,\n                      backgroundColor: getColor({\n                        route: routes[navigationState.index],\n                      }),\n                      transform: [\n                        {\n                          // Scale to twice the size  to ensure it covers the whole navigation bar\n                          scale: ripple.interpolate({\n                            inputRange: [0, 1],\n                            outputRange: [0, 8],\n                          }),\n                        },\n                      ],\n                      opacity: ripple.interpolate({\n                        inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n                        outputRange: [0, 0, 1, 1],\n                      }),\n                    },\n                  ]}\n                />\n              ) : null}\n              {routes.map((route, index) => {\n                const focused = navigationState.index === index;\n                const active = tabs[index];\n\n                // Scale the label up\n                const scale =\n                  labeled && shifting\n                    ? active.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [0.5, 1],\n                      })\n                    : 1;\n\n                // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\n                const translateY = labeled\n                  ? shifting\n                    ? active.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [7, 0],\n                      })\n                    : 0\n                  : 7;\n\n                // We render the active icon and label on top of inactive ones and cross-fade them on change.\n                // This trick gives the illusion that we are animating between active and inactive colors.\n                // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\n                const activeOpacity = active;\n                const inactiveOpacity = active.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0],\n                });\n\n                const badge = getBadge({ route });\n\n                return renderTouchable({\n                  key: route.key,\n                  route,\n                  borderless: true,\n                  centered: true,\n                  rippleColor: touchColor,\n                  onPress: () => this.handleTabPress(index),\n                  testID: getTestID({ route }),\n                  accessibilityLabel: getAccessibilityLabel({ route }),\n                  accessibilityTraits: focused\n                    ? ['button', 'selected']\n                    : 'button',\n                  accessibilityComponentType: 'button',\n                  accessibilityRole: 'button',\n                  accessibilityStates: ['selected'],\n                  style: styles.item,\n                  children: (\n                    <View pointerEvents=\"none\">\n                      <Animated.View\n                        style={[\n                          styles.iconContainer,\n                          { transform: [{ translateY }] },\n                        ]}\n                      >\n                        <Animated.View\n                          style={[\n                            styles.iconWrapper,\n                            { opacity: activeOpacity },\n                          ]}\n                        >\n                          {renderIcon ? (\n                            renderIcon({\n                              route,\n                              focused: true,\n                              color: activeTintColor,\n                            })\n                          ) : (\n                            <Icon\n                              source={route.icon as IconSource}\n                              color={activeTintColor}\n                              size={24}\n                            />\n                          )}\n                        </Animated.View>\n                        <Animated.View\n                          style={[\n                            styles.iconWrapper,\n                            { opacity: inactiveOpacity },\n                          ]}\n                        >\n                          {renderIcon ? (\n                            renderIcon({\n                              route,\n                              focused: false,\n                              color: inactiveTintColor,\n                            })\n                          ) : (\n                            <Icon\n                              source={route.icon as IconSource}\n                              color={inactiveTintColor}\n                              size={24}\n                            />\n                          )}\n                        </Animated.View>\n                        <View\n                          style={[\n                            styles.badgeContainer,\n                            {\n                              right:\n                                (badge != null && typeof badge !== 'boolean'\n                                  ? String(badge).length * -2\n                                  : 0) - 2,\n                            },\n                          ]}\n                        >\n                          {typeof badge === 'boolean' ? (\n                            <Badge visible={badge} size={8} />\n                          ) : (\n                            <Badge visible={badge != null} size={16}>\n                              {badge}\n                            </Badge>\n                          )}\n                        </View>\n                      </Animated.View>\n                      {labeled ? (\n                        <Animated.View\n                          style={[\n                            styles.labelContainer,\n                            { transform: [{ scale }] },\n                          ]}\n                        >\n                          <Animated.View\n                            style={[\n                              styles.labelWrapper,\n                              { opacity: activeOpacity },\n                            ]}\n                          >\n                            {renderLabel ? (\n                              renderLabel({\n                                route,\n                                focused: true,\n                                color: activeTintColor,\n                              })\n                            ) : (\n                              <Text\n                                style={[\n                                  styles.label,\n                                  { color: activeTintColor },\n                                ]}\n                              >\n                                {getLabelText({ route })}\n                              </Text>\n                            )}\n                          </Animated.View>\n                          {shifting ? null : (\n                            <Animated.View\n                              style={[\n                                styles.labelWrapper,\n                                { opacity: inactiveOpacity },\n                              ]}\n                            >\n                              {renderLabel ? (\n                                renderLabel({\n                                  route,\n                                  focused: false,\n                                  color: inactiveTintColor,\n                                })\n                              ) : (\n                                <Text\n                                  style={[\n                                    styles.label,\n                                    { color: inactiveTintColor },\n                                  ]}\n                                >\n                                  {getLabelText({ route })}\n                                </Text>\n                              )}\n                            </Animated.View>\n                          )}\n                        </Animated.View>\n                      ) : (\n                        <View style={styles.labelContainer} />\n                      )}\n                    </View>\n                  ),\n                });\n              })}\n            </SafeAreaView>\n          </Animated.View>\n        </Surface>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(BottomNavigation);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  content: {\n    flex: 1,\n  },\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 4,\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  items: {\n    flexDirection: 'row',\n    width: '100%',\n  },\n  item: {\n    flex: 1,\n    // Top padding is 6 and bottom padding is 10\n    // The extra 4dp bottom padding is offset by label's height\n    paddingVertical: 6,\n  },\n  ripple: {\n    position: 'absolute',\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center',\n  },\n  iconWrapper: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2,\n  },\n  labelWrapper: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  label: {\n    fontSize: 12,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...(Platform.OS === 'web'\n      ? {\n          whiteSpace: 'nowrap',\n        }\n      : null),\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 0,\n    top: -2,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}
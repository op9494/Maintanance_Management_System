{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf3=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _color=_interopRequireDefault(require(\"color\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _ActivityIndicator=_interopRequireDefault(require(\"../ActivityIndicator\"));var _FABGroup2=_interopRequireDefault(require(\"./FABGroup\"));var _Surface=_interopRequireDefault(require(\"../Surface\"));var _CrossFadeIcon=_interopRequireDefault(require(\"../CrossFadeIcon\"));var _Text=_interopRequireDefault(require(\"../Typography/Text\"));var _TouchableRipple=_interopRequireDefault(require(\"../TouchableRipple\"));var _colors=require(\"../../styles/colors\");var _theming=require(\"../../core/theming\");var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/FAB/FAB.tsx\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var FAB=function(_React$Component){(0,_inherits2.default)(FAB,_React$Component);function FAB(){var _getPrototypeOf2;var _this;(0,_classCallCheck2.default)(this,FAB);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=(0,_possibleConstructorReturn2.default)(this,(_getPrototypeOf2=(0,_getPrototypeOf3.default)(FAB)).call.apply(_getPrototypeOf2,[this].concat(args)));(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"state\",{visibility:new _reactNative.Animated.Value(_this.props.visible?1:0)});return _this;}(0,_createClass2.default)(FAB,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var scale=this.props.theme.animation.scale;if(this.props.visible===prevProps.visible){return;}if(this.props.visible){_reactNative.Animated.timing(this.state.visibility,{toValue:1,duration:200*scale,useNativeDriver:true}).start();}else{_reactNative.Animated.timing(this.state.visibility,{toValue:0,duration:150*scale,useNativeDriver:true}).start();}}},{key:\"render\",value:function render(){var _this$props=this.props,small=_this$props.small,icon=_this$props.icon,label=_this$props.label,_this$props$accessibi=_this$props.accessibilityLabel,accessibilityLabel=_this$props$accessibi===void 0?label:_this$props$accessibi,customColor=_this$props.color,disabled=_this$props.disabled,onPress=_this$props.onPress,theme=_this$props.theme,style=_this$props.style,visible=_this$props.visible,loading=_this$props.loading,testID=_this$props.testID,rest=(0,_objectWithoutProperties2.default)(_this$props,[\"small\",\"icon\",\"label\",\"accessibilityLabel\",\"color\",\"disabled\",\"onPress\",\"theme\",\"style\",\"visible\",\"loading\",\"testID\"]);var visibility=this.state.visibility;var disabledColor=(0,_color.default)(theme.dark?_colors.white:_colors.black).alpha(0.12).rgb().string();var _ref=_reactNative.StyleSheet.flatten(style)||{},_ref$backgroundColor=_ref.backgroundColor,backgroundColor=_ref$backgroundColor===void 0?disabled?disabledColor:theme.colors.accent:_ref$backgroundColor;var foregroundColor;if(typeof customColor!=='undefined'){foregroundColor=customColor;}else if(disabled){foregroundColor=(0,_color.default)(theme.dark?_colors.white:_colors.black).alpha(0.32).rgb().string();}else{foregroundColor=!(0,_color.default)(backgroundColor).isLight()?_colors.white:'rgba(0, 0, 0, .54)';}var rippleColor=(0,_color.default)(foregroundColor).alpha(0.32).rgb().string();return React.createElement(_Surface.default,(0,_extends2.default)({},rest,{style:[{backgroundColor:backgroundColor,opacity:visibility,transform:[{scale:visibility}]},styles.container,disabled&&styles.disabled,style],pointerEvents:visible?'auto':'none',__source:{fileName:_jsxFileName,lineNumber:181}}),React.createElement(_TouchableRipple.default,{borderless:true,onPress:onPress,rippleColor:rippleColor,disabled:disabled,accessibilityLabel:accessibilityLabel,accessibilityTraits:disabled?['button','disabled']:'button',accessibilityComponentType:\"button\",accessibilityRole:\"button\",accessibilityStates:disabled?['disabled']:[],style:styles.touchable,testID:testID,__source:{fileName:_jsxFileName,lineNumber:201}},React.createElement(_reactNative.View,{style:[styles.content,label?styles.extended:small?styles.small:styles.standard],pointerEvents:\"none\",__source:{fileName:_jsxFileName,lineNumber:214}},icon&&loading!==true?React.createElement(_CrossFadeIcon.default,{source:icon,size:24,color:foregroundColor,__source:{fileName:_jsxFileName,lineNumber:222}}):null,loading?React.createElement(_ActivityIndicator.default,{size:18,color:foregroundColor,__source:{fileName:_jsxFileName,lineNumber:225}}):null,label?React.createElement(_Text.default,{style:[styles.label,_objectSpread({color:foregroundColor},theme.fonts.medium)],__source:{fileName:_jsxFileName,lineNumber:228}},label.toUpperCase()):null)));}}]);return FAB;}(React.Component);(0,_defineProperty2.default)(FAB,\"Group\",_FABGroup2.default);(0,_defineProperty2.default)(FAB,\"defaultProps\",{visible:true});var styles=_reactNative.StyleSheet.create({container:{borderRadius:28,elevation:6},touchable:{borderRadius:28},standard:{height:56,width:56},small:{height:40,width:40},extended:{height:48,paddingHorizontal:16},content:{flexDirection:'row',alignItems:'center',justifyContent:'center'},label:{marginHorizontal:8},disabled:{elevation:0}});var _default=(0,_theming.withTheme)(FAB);exports.default=_default;","map":{"version":3,"sources":["FAB.tsx"],"names":["FAB","React","Component","FABGroup","visible","visibility","Animated","prevProps","scale","toValue","duration","useNativeDriver","small","icon","label","accessibilityLabel","customColor","disabled","onPress","theme","style","loading","testID","rest","disabledColor","white","black","backgroundColor","StyleSheet","foregroundColor","rippleColor","opacity","transform","styles","color","container","borderRadius","elevation","touchable","standard","height","width","extended","paddingHorizontal","content","flexDirection","alignItems","justifyContent","marginHorizontal"],"mappings":"4lCAAA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,kBAAA,CAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA,CAEA,GAAA,CAAA,UAAA,CAAA,sBAAA,CAAA,OAAA,cAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,sBAAA,CAAA,OAAA,cAAA,CAAA,CACA,GAAA,CAAA,cAAA,CAAA,sBAAA,CAAA,OAAA,oBAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,sBAAA,CAAA,OAAA,sBAAA,CAAA,CACA,GAAA,CAAA,gBAAA,CAAA,sBAAA,CAAA,OAAA,sBAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,OAAA,uBAAA,CACA,GAAA,CAAA,QAAA,CAAA,OAAA,sBAAA,C,43BAyFMA,IAAAA,CAAAA,G,gfAQI,CACNK,UAAU,CAAE,GAAIC,CAAAA,YAAAA,CAAAA,QAAAA,CAAJ,KAAA,CAAmB,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CADzB,CACM,CADN,C,2GAIWC,S,CAAkB,CAAA,GAC3BC,CAAAA,KAD2B,CACjB,KAAA,KAAA,CAAA,KAAA,CADiB,SACjB,CADiB,KAAA,CAEnC,GAAI,KAAA,KAAA,CAAA,OAAA,GAAuBD,SAAS,CAApC,OAAA,CAA8C,CAC5C,OAGF,IAAI,KAAA,KAAA,CAAJ,OAAA,CAAwB,CACtBD,YAAAA,CAAAA,QAAAA,CAAAA,MAAAA,CAAgB,KAAA,KAAA,CAAhBA,UAAAA,CAAuC,CACrCG,OAAO,CAD8B,CAAA,CAErCC,QAAQ,CAAE,IAF2B,KAAA,CAGrCC,eAAe,CAHjBL,IAAuC,CAAvCA,EAAAA,KAAAA,GADF,CAAA,IAMO,CACLA,YAAAA,CAAAA,QAAAA,CAAAA,MAAAA,CAAgB,KAAA,KAAA,CAAhBA,UAAAA,CAAuC,CACrCG,OAAO,CAD8B,CAAA,CAErCC,QAAQ,CAAE,IAF2B,KAAA,CAGrCC,eAAe,CAHjBL,IAAuC,CAAvCA,EAAAA,KAAAA,GAMH,C,wCAEQ,CAAA,GAAA,CAAA,WAAA,CAeH,KAfG,KAAA,CAELM,KAFK,CAAA,WAAA,CAAA,KAAA,CAGLC,IAHK,CAAA,WAAA,CAAA,IAAA,CAILC,KAJK,CAAA,WAAA,CAAA,KAAA,CAAA,qBAAA,CAAA,WAAA,CAAA,kBAAA,CAKLC,kBALK,CAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,KAAA,CAAA,qBAAA,CAMEC,WANF,CAAA,WAAA,CAAA,KAAA,CAOLC,QAPK,CAAA,WAAA,CAAA,QAAA,CAQLC,OARK,CAAA,WAAA,CAAA,OAAA,CASLC,KATK,CAAA,WAAA,CAAA,KAAA,CAULC,KAVK,CAAA,WAAA,CAAA,KAAA,CAWLhB,OAXK,CAAA,WAAA,CAAA,OAAA,CAYLiB,OAZK,CAAA,WAAA,CAAA,OAAA,CAaLC,MAbK,CAAA,WAAA,CAAA,MAAA,CAcFC,IAdE,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,WAAA,CAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,OAAA,CAAA,UAAA,CAAA,SAAA,CAAA,OAAA,CAAA,OAAA,CAAA,SAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAAA,CAAA,GAgBClB,CAAAA,UAhBD,CAgBgB,KAhBhB,KAgBgB,CAhBhB,UAAA,CAkBP,GAAMmB,CAAAA,aAAa,CAAG,CAAA,EAAA,MAAA,CAAA,OAAA,EAAML,KAAK,CAALA,IAAAA,CAAaM,OAAAA,CAAbN,KAAAA,CAAqBO,OAAAA,CAA3B,KAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,GAAtB,MAAsB,EAAtB,CAlBO,GAAA,CAAA,IAAA,CAwBLE,YAAAA,CAAAA,UAAAA,CAAAA,OAAAA,CAAAA,KAAAA,GAxBK,EAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,eAAA,CAuBCD,eAvBD,CAAA,oBAAA,GAAA,IAAA,EAAA,CAuBmBV,QAAQ,CAAA,aAAA,CAAmBE,KAAK,CAALA,MAAAA,CAvB9C,MAAA,CAAA,oBAAA,CA0BP,GAAA,CAAA,eAAA,CAEA,GAAI,MAAA,CAAA,WAAA,GAAJ,WAAA,CAAwC,CACtCU,eAAe,CAAfA,WAAAA,CADF,CAAA,IAEO,IAAA,QAAA,CAAc,CACnBA,eAAe,CAAG,CAAA,EAAA,MAAA,CAAA,OAAA,EAAMV,KAAK,CAALA,IAAAA,CAAaM,OAAAA,CAAbN,KAAAA,CAAqBO,OAAAA,CAA3B,KAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,GAAlBG,MAAkB,EAAlBA,CADK,CAAA,IAKA,CACLA,eAAe,CAAG,CAAC,CAAA,EAAA,MAAA,CAAA,OAAA,EAAA,eAAA,EAAD,OAAC,EAAD,CACdJ,OAAAA,CADc,KAAA,CAAlBI,oBAAAA,CAKF,IAAMC,CAAAA,WAAW,CAAG,CAAA,EAAA,MAAA,CAAA,OAAA,EAAA,eAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,GAApB,MAAoB,EAApB,CAKA,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,QAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,IAAA,CAAA,CAEE,KAAK,CACH,CACE,CACEH,eAAe,CADjB,eAAA,CAEEI,OAAO,CAFT,UAAA,CAGEC,SAAS,CAAE,CACT,CACExB,KAAK,CANb,UAKM,CADS,CAHb,CADF,CAUEyB,MAAM,CAVR,SAAA,CAWEhB,QAAQ,EAAIgB,MAAM,CAXpB,QAAA,CAHJ,KAGI,CAHJ,CAkBE,aAAa,CAAE7B,OAAO,CAAA,MAAA,CAlBxB,MAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAoBE,KAAA,CAAA,aAAA,CAAC,gBAAA,CAAD,OAAA,CAAA,CACE,UAAU,CADZ,IAAA,CAEE,OAAO,CAFT,OAAA,CAGE,WAAW,CAHb,WAAA,CAIE,QAAQ,CAJV,QAAA,CAKE,kBAAkB,CALpB,kBAAA,CAME,mBAAmB,CAAEa,QAAQ,CAAG,CAAA,QAAA,CAAH,UAAG,CAAH,CAN/B,QAAA,CAOE,0BAA0B,CAP5B,QAAA,CAQE,iBAAiB,CARnB,QAAA,CASE,mBAAmB,CAAEA,QAAQ,CAAG,CAAH,UAAG,CAAH,CAT/B,EAAA,CAUE,KAAK,CAAEgB,MAAM,CAVf,SAAA,CAWE,MAAM,CAXR,MAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CAaE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CACE,KAAK,CAAE,CACLA,MAAM,CADD,OAAA,CAELnB,KAAK,CAAGmB,MAAM,CAAT,QAAA,CAAqBrB,KAAK,CAAGqB,MAAM,CAAT,KAAA,CAAkBA,MAAM,CAH3D,QACS,CADT,CAKE,aAAa,CALf,MAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CAOGpB,IAAI,EAAIQ,OAAO,GAAfR,IAAAA,CACC,KAAA,CAAA,aAAA,CAAC,cAAA,CAAD,OAAA,CAAA,CAAe,MAAM,CAArB,IAAA,CAA6B,IAAI,CAAjC,EAAA,CAAuC,KAAK,CAA5C,eAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADDA,GACC,CAAA,CAAA,CADDA,CAPH,IAAA,CAUGQ,OAAO,CACN,KAAA,CAAA,aAAA,CAAC,kBAAA,CAAD,OAAA,CAAA,CAAmB,IAAI,CAAvB,EAAA,CAA6B,KAAK,CAAlC,eAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADM,GACN,CAAA,CAAA,CADM,CAVV,IAAA,CAaGP,KAAK,CACJ,KAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,CAAA,CACE,KAAK,CAAE,CACLmB,MAAM,CADD,KAAA,CAAA,aAAA,CAAA,CAEHC,KAAK,CAFF,eAAA,CAAA,CAEwBf,KAAK,CAALA,KAAAA,CAHjC,MACS,CAAA,CADT,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CAMGL,KAAK,CAPJ,WAODA,EANH,CADI,CA/Cd,IAkCM,CAbF,CApBF,CADF,C,kBA/Ecb,KAAK,CAACC,S,CAAlBF,C,6BAAAA,G,SAEWG,UAAAA,CAAAA,O,+BAFXH,G,gBAIkB,CACpBI,OAAO,CADa,IAAA,C,EA2IxB,GAAM6B,CAAAA,MAAM,CAAGL,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAkB,CAC/BO,SAAS,CAAE,CACTC,YAAY,CADH,EAAA,CAETC,SAAS,CAHoB,CACpB,CADoB,CAK/BC,SAAS,CAAE,CACTF,YAAY,CANiB,EAKpB,CALoB,CAQ/BG,QAAQ,CAAE,CACRC,MAAM,CADE,EAAA,CAERC,KAAK,CAVwB,EAQrB,CARqB,CAY/B7B,KAAK,CAAE,CACL4B,MAAM,CADD,EAAA,CAELC,KAAK,CAdwB,EAYxB,CAZwB,CAgB/BC,QAAQ,CAAE,CACRF,MAAM,CADE,EAAA,CAERG,iBAAiB,CAlBY,EAgBrB,CAhBqB,CAoB/BC,OAAO,CAAE,CACPC,aAAa,CADN,KAAA,CAEPC,UAAU,CAFH,QAAA,CAGPC,cAAc,CAvBe,QAoBtB,CApBsB,CAyB/BjC,KAAK,CAAE,CACLkC,gBAAgB,CA1Ba,CAyBxB,CAzBwB,CA4B/B/B,QAAQ,CAAE,CACRoB,SAAS,CA7Bb,CA4BY,CA5BqB,CAAlBT,CAAf,C,aAiCe,CAAA,EAAA,QAAA,CAAA,SAAA,EAAA,GAAA,C","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { Animated, View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport ActivityIndicator from '../ActivityIndicator';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport FABGroup, { FABGroup as _FABGroup } from './FABGroup';\nimport Surface from '../Surface';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport { Theme, $RemoveChildren } from '../../types';\nimport { IconSource } from './../Icon';\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Optional label for extended `FAB`.\n   */\n  label?: string;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\n   */\n  small?: boolean;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n  testID?: string;\n};\n\ntype State = {\n  visibility: Animated.Value;\n};\n\n/**\n * A floating action button represents the primary action in an application.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-1.png\" />\n *   <img src=\"screenshots/fab-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     style={styles.fab}\n *     small\n *     icon=\"plus\"\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nclass FAB extends React.Component<Props, State> {\n  // @component ./FABGroup.tsx\n  static Group = FABGroup;\n\n  static defaultProps = {\n    visible: true,\n  };\n\n  state = {\n    visibility: new Animated.Value(this.props.visible ? 1 : 0),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    const { scale } = this.props.theme.animation;\n    if (this.props.visible === prevProps.visible) {\n      return;\n    }\n\n    if (this.props.visible) {\n      Animated.timing(this.state.visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(this.state.visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }\n\n  render() {\n    const {\n      small,\n      icon,\n      label,\n      accessibilityLabel = label,\n      color: customColor,\n      disabled,\n      onPress,\n      theme,\n      style,\n      visible,\n      loading,\n      testID,\n      ...rest\n    } = this.props;\n    const { visibility } = this.state;\n\n    const disabledColor = color(theme.dark ? white : black)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    const { backgroundColor = disabled ? disabledColor : theme.colors.accent } =\n      StyleSheet.flatten(style) || {};\n\n    let foregroundColor;\n\n    if (typeof customColor !== 'undefined') {\n      foregroundColor = customColor;\n    } else if (disabled) {\n      foregroundColor = color(theme.dark ? white : black)\n        .alpha(0.32)\n        .rgb()\n        .string();\n    } else {\n      foregroundColor = !color(backgroundColor).isLight()\n        ? white\n        : 'rgba(0, 0, 0, .54)';\n    }\n\n    const rippleColor = color(foregroundColor)\n      .alpha(0.32)\n      .rgb()\n      .string();\n\n    return (\n      <Surface\n        {...rest}\n        style={\n          [\n            {\n              backgroundColor,\n              opacity: visibility,\n              transform: [\n                {\n                  scale: visibility,\n                },\n              ],\n            },\n            styles.container,\n            disabled && styles.disabled,\n            style,\n          ] as StyleProp<ViewStyle>\n        }\n        pointerEvents={visible ? 'auto' : 'none'}\n      >\n        <TouchableRipple\n          borderless\n          onPress={onPress}\n          rippleColor={rippleColor}\n          disabled={disabled}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityStates={disabled ? ['disabled'] : []}\n          style={styles.touchable}\n          testID={testID}\n        >\n          <View\n            style={[\n              styles.content,\n              label ? styles.extended : small ? styles.small : styles.standard,\n            ]}\n            pointerEvents=\"none\"\n          >\n            {icon && loading !== true ? (\n              <CrossFadeIcon source={icon} size={24} color={foregroundColor} />\n            ) : null}\n            {loading ? (\n              <ActivityIndicator size={18} color={foregroundColor} />\n            ) : null}\n            {label ? (\n              <Text\n                style={[\n                  styles.label,\n                  { color: foregroundColor, ...theme.fonts.medium },\n                ]}\n              >\n                {label.toUpperCase()}\n              </Text>\n            ) : null}\n          </View>\n        </TouchableRipple>\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 28,\n    elevation: 6,\n  },\n  touchable: {\n    borderRadius: 28,\n  },\n  standard: {\n    height: 56,\n    width: 56,\n  },\n  small: {\n    height: 40,\n    width: 40,\n  },\n  extended: {\n    height: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    marginHorizontal: 8,\n  },\n  disabled: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(FAB);\n"]},"metadata":{},"sourceType":"script"}
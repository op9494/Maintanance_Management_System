{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.RadioButtonIOS=exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _color=_interopRequireDefault(require(\"color\"));var _RadioButtonGroup=require(\"./RadioButtonGroup\");var _utils=require(\"./utils\");var _MaterialCommunityIcon=_interopRequireDefault(require(\"../MaterialCommunityIcon\"));var _TouchableRipple=_interopRequireDefault(require(\"../TouchableRipple\"));var _theming=require(\"../../core/theming\");var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/RadioButton/RadioButtonIOS.tsx\";var RadioButtonIOS=function(_React$Component){(0,_inherits2.default)(RadioButtonIOS,_React$Component);function RadioButtonIOS(){(0,_classCallCheck2.default)(this,RadioButtonIOS);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(RadioButtonIOS).apply(this,arguments));}(0,_createClass2.default)(RadioButtonIOS,[{key:\"render\",value:function render(){var _this$props=this.props,disabled=_this$props.disabled,onPress=_this$props.onPress,theme=_this$props.theme,status=_this$props.status,value=_this$props.value,rest=(0,_objectWithoutProperties2.default)(_this$props,[\"disabled\",\"onPress\",\"theme\",\"status\",\"value\"]);var checkedColor=disabled?theme.colors.disabled:this.props.color||theme.colors.accent;var rippleColor;if(disabled){rippleColor=(0,_color.default)(theme.colors.text).alpha(0.16).rgb().string();}else{rippleColor=(0,_color.default)(checkedColor).fade(0.32).rgb().string();}return React.createElement(_RadioButtonGroup.RadioButtonContext.Consumer,{__source:{fileName:_jsxFileName,lineNumber:78}},function(context){var checked=(0,_utils.isChecked)({contextValue:context===null||context===void 0?void 0:context.value,status:status,value:value})==='checked';return React.createElement(_TouchableRipple.default,(0,_extends2.default)({},rest,{borderless:true,rippleColor:rippleColor,onPress:disabled?undefined:function(){(0,_utils.handlePress)({onPress:onPress,value:value,onValueChange:context===null||context===void 0?void 0:context.onValueChange});},accessibilityTraits:disabled?['button','disabled']:'button',accessibilityComponentType:checked?'radiobutton_checked':'radiobutton_unchecked',accessibilityRole:\"button\",accessibilityStates:disabled?['disabled']:[],accessibilityLiveRegion:\"polite\",style:styles.container,__source:{fileName:_jsxFileName,lineNumber:88}}),React.createElement(_reactNative.View,{style:{opacity:checked?1:0},__source:{fileName:_jsxFileName,lineNumber:112}},React.createElement(_MaterialCommunityIcon.default,{allowFontScaling:false,name:\"check\",size:24,color:checkedColor,direction:_reactNative.I18nManager.isRTL?'rtl':'ltr',__source:{fileName:_jsxFileName,lineNumber:113}})));});}}]);return RadioButtonIOS;}(React.Component);exports.RadioButtonIOS=RadioButtonIOS;(0,_defineProperty2.default)(RadioButtonIOS,\"displayName\",'RadioButton.IOS');var styles=_reactNative.StyleSheet.create({container:{borderRadius:18,padding:6}});var _default=(0,_theming.withTheme)(RadioButtonIOS);exports.default=_default;","map":{"version":3,"sources":["RadioButtonIOS.tsx"],"names":["RadioButtonIOS","React","Component","disabled","onPress","theme","status","value","rest","checkedColor","rippleColor","checked","contextValue","context","onValueChange","styles","opacity","I18nManager","StyleSheet","container","borderRadius","padding"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, I18nManager } from 'react-native';\nimport color from 'color';\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple';\nimport { withTheme } from '../../core/theming';\nimport { Theme, $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for iOS.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.ios.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.ios.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nclass RadioButtonIOS extends React.Component<Props> {\n  static displayName = 'RadioButton.IOS';\n\n  render() {\n    const { disabled, onPress, theme, status, value, ...rest } = this.props;\n\n    const checkedColor = disabled\n      ? theme.colors.disabled\n      : this.props.color || theme.colors.accent;\n\n    let rippleColor: string;\n\n    if (disabled) {\n      rippleColor = color(theme.colors.text)\n        .alpha(0.16)\n        .rgb()\n        .string();\n    } else {\n      rippleColor = color(checkedColor)\n        .fade(0.32)\n        .rgb()\n        .string();\n    }\n\n    return (\n      <RadioButtonContext.Consumer>\n        {(context?: RadioButtonContextType) => {\n          const checked =\n            isChecked({\n              contextValue: context?.value,\n              status,\n              value,\n            }) === 'checked';\n\n          return (\n            <TouchableRipple\n              {...rest}\n              borderless\n              rippleColor={rippleColor}\n              onPress={\n                disabled\n                  ? undefined\n                  : () => {\n                      handlePress({\n                        onPress,\n                        value,\n                        onValueChange: context?.onValueChange,\n                      });\n                    }\n              }\n              accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n              accessibilityComponentType={\n                checked ? 'radiobutton_checked' : 'radiobutton_unchecked'\n              }\n              accessibilityRole=\"button\"\n              accessibilityStates={disabled ? ['disabled'] : []}\n              accessibilityLiveRegion=\"polite\"\n              style={styles.container}\n            >\n              <View style={{ opacity: checked ? 1 : 0 }}>\n                <MaterialCommunityIcon\n                  allowFontScaling={false}\n                  name=\"check\"\n                  size={24}\n                  color={checkedColor}\n                  direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n                />\n              </View>\n            </TouchableRipple>\n          );\n        }}\n      </RadioButtonContext.Consumer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6,\n  },\n});\n\nexport default withTheme(RadioButtonIOS);\n\n// @component-docs ignore-next-line\nexport { RadioButtonIOS };\n"]},"metadata":{},"sourceType":"script"}
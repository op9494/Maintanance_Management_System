{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _color=_interopRequireDefault(require(\"color\"));var _InputLabel=_interopRequireDefault(require(\"./Label/InputLabel\"));var _LabelBackground=_interopRequireDefault(require(\"./Label/LabelBackground\"));var _constants=require(\"./constants\");var _helpers=require(\"./helpers\");var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/TextInput/TextInputOutlined.tsx\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var OUTLINE_MINIMIZED_LABEL_Y_OFFSET=-6;var LABEL_PADDING_TOP=8;var MIN_HEIGHT=64;var MIN_DENSE_HEIGHT=48;var INPUT_PADDING_HORIZONTAL=14;var TextInputOutlined=function(_React$Component){(0,_inherits2.default)(TextInputOutlined,_React$Component);function TextInputOutlined(){(0,_classCallCheck2.default)(this,TextInputOutlined);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(TextInputOutlined).apply(this,arguments));}(0,_createClass2.default)(TextInputOutlined,[{key:\"render\",value:function render(){var _this$props=this.props,disabled=_this$props.disabled,editable=_this$props.editable,label=_this$props.label,error=_this$props.error,selectionColor=_this$props.selectionColor,underlineColor=_this$props.underlineColor,dense=_this$props.dense,style=_this$props.style,theme=_this$props.theme,render=_this$props.render,multiline=_this$props.multiline,parentState=_this$props.parentState,innerRef=_this$props.innerRef,onFocus=_this$props.onFocus,onBlur=_this$props.onBlur,onChangeText=_this$props.onChangeText,onLayoutAnimatedText=_this$props.onLayoutAnimatedText,rest=(0,_objectWithoutProperties2.default)(_this$props,[\"disabled\",\"editable\",\"label\",\"error\",\"selectionColor\",\"underlineColor\",\"dense\",\"style\",\"theme\",\"render\",\"multiline\",\"parentState\",\"innerRef\",\"onFocus\",\"onBlur\",\"onChangeText\",\"onLayoutAnimatedText\"]);var colors=theme.colors,fonts=theme.fonts;var font=fonts.regular;var hasActiveOutline=parentState.focused||error;var _ref=_reactNative.StyleSheet.flatten(style)||{},fontSizeStyle=_ref.fontSize,fontWeight=_ref.fontWeight,height=_ref.height,_ref$backgroundColor=_ref.backgroundColor,backgroundColor=_ref$backgroundColor===void 0?colors.background:_ref$backgroundColor,viewStyle=(0,_objectWithoutProperties2.default)(_ref,[\"fontSize\",\"fontWeight\",\"height\",\"backgroundColor\"]);var fontSize=fontSizeStyle||_constants.MAXIMIZED_LABEL_FONT_SIZE;var inputTextColor,activeColor,outlineColor,placeholderColor,errorColor;if(disabled){inputTextColor=activeColor=(0,_color.default)(colors.text).alpha(0.54).rgb().string();placeholderColor=outlineColor=colors.disabled;}else{inputTextColor=colors.text;activeColor=error?colors.error:colors.primary;placeholderColor=outlineColor=colors.placeholder;errorColor=colors.error;}var labelScale=_constants.MINIMIZED_LABEL_FONT_SIZE/fontSize;var fontScale=_constants.MAXIMIZED_LABEL_FONT_SIZE/fontSize;var labelWidth=parentState.labelLayout.width;var labelHeight=parentState.labelLayout.height;var labelHalfWidth=labelWidth/2;var labelHalfHeight=labelHeight/2;var baseLabelTranslateX=(_reactNative.I18nManager.isRTL?1:-1)*(labelHalfWidth-labelScale*labelWidth/2-(fontSize-_constants.MINIMIZED_LABEL_FONT_SIZE)*labelScale);var minInputHeight=(dense?MIN_DENSE_HEIGHT:MIN_HEIGHT)-LABEL_PADDING_TOP;var inputHeight=(0,_helpers.calculateInputHeight)(labelHeight,height,minInputHeight);var topPosition=(0,_helpers.calculateLabelTopPosition)(labelHeight,inputHeight,LABEL_PADDING_TOP);if(height&&typeof height!=='number')console.warn('Currently we support only numbers in height prop');var paddingSettings={height:height?+height:null,labelHalfHeight:labelHalfHeight,offset:LABEL_PADDING_TOP,multiline:multiline?multiline:null,dense:dense?dense:null,topPosition:topPosition,fontSize:fontSize,label:label,scale:fontScale,isAndroid:_reactNative.Platform.OS==='android',styles:_reactNative.StyleSheet.flatten(dense?styles.inputOutlinedDense:styles.inputOutlined)};var pad=(0,_helpers.calculatePadding)(paddingSettings);var paddingOut=(0,_helpers.adjustPaddingOut)(_objectSpread({},paddingSettings,{pad:pad}));var baseLabelTranslateY=-labelHalfHeight-(topPosition+OUTLINE_MINIMIZED_LABEL_Y_OFFSET);var placeholderOpacity=(0,_helpers.interpolatePlaceholder)(parentState.labeled,hasActiveOutline);var labelProps={label:label,onLayoutAnimatedText:onLayoutAnimatedText,placeholderOpacity:placeholderOpacity,error:error,placeholderStyle:styles.placeholder,baseLabelTranslateY:baseLabelTranslateY,baseLabelTranslateX:baseLabelTranslateX,font:font,fontSize:fontSize,fontWeight:fontWeight,labelScale:labelScale,wiggleOffsetX:_constants.LABEL_WIGGLE_X_OFFSET,topPosition:topPosition,hasActiveOutline:hasActiveOutline,activeColor:activeColor,placeholderColor:placeholderColor,backgroundColor:backgroundColor,errorColor:errorColor};var minHeight=height||(dense?MIN_DENSE_HEIGHT:MIN_HEIGHT);return React.createElement(_reactNative.View,{style:viewStyle,__source:{fileName:_jsxFileName,lineNumber:183}},React.createElement(_reactNative.View,{__source:{fileName:_jsxFileName,lineNumber:189}},React.createElement(Outline,{theme:theme,hasActiveOutline:hasActiveOutline,activeColor:activeColor,outlineColor:outlineColor,backgroundColor:backgroundColor,__source:{fileName:_jsxFileName,lineNumber:190}}),React.createElement(_reactNative.View,{style:{paddingTop:LABEL_PADDING_TOP,paddingBottom:0,minHeight:minHeight},__source:{fileName:_jsxFileName,lineNumber:197}},React.createElement(_InputLabel.default,{parentState:parentState,labelProps:labelProps,labelBackground:_LabelBackground.default,__source:{fileName:_jsxFileName,lineNumber:204}}),render===null||render===void 0?void 0:render(_objectSpread({},rest,{ref:innerRef,onChangeText:onChangeText,placeholder:label?parentState.placeholder:this.props.placeholder,placeholderTextColor:placeholderColor,editable:!disabled&&editable,selectionColor:typeof selectionColor==='undefined'?activeColor:selectionColor,onFocus:onFocus,onBlur:onBlur,underlineColorAndroid:'transparent',multiline:multiline,style:[styles.input,!multiline||multiline&&height?{height:inputHeight}:{},paddingOut,_objectSpread({},font,{fontSize:fontSize,fontWeight:fontWeight,color:inputTextColor,textAlignVertical:multiline?'top':'center'})]})))));}}]);return TextInputOutlined;}(React.Component);(0,_defineProperty2.default)(TextInputOutlined,\"defaultProps\",{disabled:false,error:false,multiline:false,editable:true,render:function render(props){return React.createElement(_reactNative.TextInput,(0,_extends2.default)({},props,{__source:{fileName:_jsxFileName,lineNumber:44}}));}});var _default=TextInputOutlined;exports.default=_default;var Outline=function Outline(_ref2){var theme=_ref2.theme,hasActiveOutline=_ref2.hasActiveOutline,activeColor=_ref2.activeColor,outlineColor=_ref2.outlineColor,backgroundColor=_ref2.backgroundColor;return React.createElement(_reactNative.View,{pointerEvents:\"none\",style:[styles.outline,{backgroundColor:backgroundColor,borderRadius:theme.roundness,borderWidth:hasActiveOutline?2:1,borderColor:hasActiveOutline?activeColor:outlineColor}],__source:{fileName:_jsxFileName,lineNumber:266}});};var styles=_reactNative.StyleSheet.create({placeholder:{position:'absolute',left:0,paddingHorizontal:INPUT_PADDING_HORIZONTAL},outline:{position:'absolute',left:0,right:0,top:6,bottom:0},input:{flexGrow:1,paddingHorizontal:INPUT_PADDING_HORIZONTAL,margin:0,textAlign:_reactNative.I18nManager.isRTL?'right':'left',zIndex:1},inputOutlined:{paddingTop:8,paddingBottom:8},inputOutlinedDense:{paddingTop:4,paddingBottom:4}});","map":{"version":3,"sources":["TextInputOutlined.tsx"],"names":["OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","MIN_DENSE_HEIGHT","INPUT_PADDING_HORIZONTAL","TextInputOutlined","React","Component","disabled","error","multiline","editable","render","label","selectionColor","underlineColor","dense","style","theme","parentState","innerRef","onFocus","onBlur","onChangeText","onLayoutAnimatedText","rest","colors","fonts","font","hasActiveOutline","fontSizeStyle","fontWeight","height","backgroundColor","viewStyle","StyleSheet","fontSize","MAXIMIZED_LABEL_FONT_SIZE","inputTextColor","activeColor","placeholderColor","outlineColor","errorColor","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","minInputHeight","inputHeight","topPosition","console","paddingSettings","offset","scale","isAndroid","Platform","styles","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labelProps","placeholderStyle","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","minHeight","paddingTop","paddingBottom","LabelBackground","ref","placeholder","placeholderTextColor","underlineColorAndroid","color","textAlignVertical","Outline","borderRadius","borderWidth","borderColor","position","left","paddingHorizontal","outline","right","top","bottom","input","flexGrow","margin","textAlign","zIndex","inputOutlined","inputOutlinedDense"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport { RenderProps, ChildTextInputProps } from './types';\nimport { Theme } from '../../types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n} from './helpers';\n\nconst OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nconst LABEL_PADDING_TOP = 8;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT = 48;\nconst INPUT_PADDING_HORIZONTAL = 14;\n\nclass TextInputOutlined extends React.Component<ChildTextInputProps, {}> {\n  static defaultProps = {\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      underlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      ...rest\n    } = this.props;\n\n    const { colors, fonts } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      height,\n      backgroundColor = colors.background,\n      ...viewStyle\n    } = (StyleSheet.flatten(style) || {}) as TextStyle;\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n    let inputTextColor, activeColor, outlineColor, placeholderColor, errorColor;\n\n    if (disabled) {\n      inputTextColor = activeColor = color(colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n      placeholderColor = outlineColor = colors.disabled;\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error ? colors.error : colors.primary;\n      placeholderColor = outlineColor = colors.placeholder;\n      errorColor = colors.error;\n    }\n\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n\n    const baseLabelTranslateX =\n      (I18nManager.isRTL ? 1 : -1) *\n      (labelHalfWidth -\n        (labelScale * labelWidth) / 2 -\n        (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n    const minInputHeight =\n      (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n    const inputHeight = calculateInputHeight(\n      labelHeight,\n      height,\n      minInputHeight\n    );\n\n    const topPosition = calculateLabelTopPosition(\n      labelHeight,\n      inputHeight,\n      LABEL_PADDING_TOP\n    );\n\n    if (height && typeof height !== 'number')\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: LABEL_PADDING_TOP,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid: Platform.OS === 'android',\n      styles: StyleSheet.flatten(\n        dense ? styles.inputOutlinedDense : styles.inputOutlined\n      ) as Padding,\n    };\n\n    const pad = calculatePadding(paddingSettings);\n\n    const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n    const baseLabelTranslateY =\n      -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n    const placeholderOpacity = interpolatePlaceholder(\n      parentState.labeled,\n      hasActiveOutline\n    );\n\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      backgroundColor,\n      errorColor,\n    };\n\n    const minHeight = height || (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT);\n\n    return (\n      <View style={viewStyle}>\n        {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n        <View>\n          <Outline\n            theme={theme}\n            hasActiveOutline={hasActiveOutline}\n            activeColor={activeColor}\n            outlineColor={outlineColor}\n            backgroundColor={backgroundColor}\n          />\n          <View\n            style={{\n              paddingTop: LABEL_PADDING_TOP,\n              paddingBottom: 0,\n              minHeight,\n            }}\n          >\n            <InputLabel\n              parentState={parentState}\n              labelProps={labelProps}\n              labelBackground={LabelBackground}\n            />\n\n            {render?.({\n              ...rest,\n              ref: innerRef,\n              onChangeText,\n              placeholder: label\n                ? parentState.placeholder\n                : this.props.placeholder,\n              placeholderTextColor: placeholderColor,\n              editable: !disabled && editable,\n              selectionColor:\n                typeof selectionColor === 'undefined'\n                  ? activeColor\n                  : selectionColor,\n              onFocus,\n              onBlur,\n              underlineColorAndroid: 'transparent',\n              multiline,\n              style: [\n                styles.input,\n                !multiline || (multiline && height)\n                  ? { height: inputHeight }\n                  : {},\n                paddingOut,\n                {\n                  ...font,\n                  fontSize,\n                  fontWeight,\n                  color: inputTextColor,\n                  textAlignVertical: multiline ? 'top' : 'center',\n                },\n              ],\n            } as RenderProps)}\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default TextInputOutlined;\n\ntype OutlineType = {\n  activeColor: string;\n  hasActiveOutline: boolean | undefined;\n  outlineColor: string | undefined;\n  backgroundColor: string | undefined;\n  theme: Theme;\n};\n\nconst Outline = ({\n  theme,\n  hasActiveOutline,\n  activeColor,\n  outlineColor,\n  backgroundColor,\n}: OutlineType) => (\n  <View\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: theme.roundness,\n        borderWidth: hasActiveOutline ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  },\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    margin: 0,\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}
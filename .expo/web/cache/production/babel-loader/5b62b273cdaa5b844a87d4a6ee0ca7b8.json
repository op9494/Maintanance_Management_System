{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import React,{Component}from'react';import PropTypes from'prop-types';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from\"react-native-web/dist/exports/Animated\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Easing from\"react-native-web/dist/exports/Easing\";import Text from\"react-native-web/dist/exports/Text\";import ColumnChartItem from\"./column-chart-item\";import{initData,drawYAxis,drawYAxisLabels,drawGuideLine,numberWithCommas,drawXAxis,drawXAxisLabels}from\"../common\";var ColumnChart=function(_Component){_inherits(ColumnChart,_Component);function ColumnChart(props){var _this;_classCallCheck(this,ColumnChart);_this=_possibleConstructorReturn(this,_getPrototypeOf(ColumnChart).call(this,props));var defaultGap=_this.props.defaultColumnWidth+_this.props.defaultColumnMargin;var newState=initData(_this.props.data,_this.props.height,defaultGap,_this.props.numberOfYAxisGuideLine);_this.state={sortedData:newState.sortedData,max:newState.max,selectedIndex:null,fadeAnim:new Animated.Value(0),guideArray:newState.guideArray,gap:defaultGap};_this.renderColumns=_this.renderColumns.bind(_assertThisInitialized(_this));_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));_this.drawTooltip=_this.drawTooltip.bind(_assertThisInitialized(_this));return _this;}_createClass(ColumnChart,[{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){var _this2=this;if(nextProps.data!==this.props.data){this.setState(_extends({fadeAnim:new Animated.Value(0)},initData(nextProps.data,this.props.height,this.state.gap,this.props.numberOfYAxisGuideLine)),function(){Animated.timing(_this2.state.fadeAnim,{toValue:1,easing:Easing.bounce,duration:1000,useNativeDriver:true}).start();});}}},{key:\"componentDidMount\",value:function componentDidMount(){Animated.timing(this.state.fadeAnim,{toValue:1,easing:Easing.bounce,duration:1000,useNativeDriver:true}).start();}},{key:\"renderColumns\",value:function renderColumns(fadeAnim){var _this3=this;var seriesArray=this.state.sortedData;var seriesCount=seriesArray.length;var renderColumns=[];if(seriesCount>0){var standardSeries=seriesArray[0];var dataCount=standardSeries.data.length;var _loop=function _loop(i){renderColumns.push(React.createElement(ColumnChartItem,{key:i,seriesArray:_this3.state.sortedData,dataIndex:i,defaultWidth:_this3.props.defaultColumnWidth,defaultHeight:_this3.props.height+20,defaultMargin:_this3.props.defaultColumnMargin,isSelected:_this3.state.selectedIndex===i,highlightColor:_this3.props.highlightColor,onClick:function onClick(evt){return _this3.handleClick(evt,i);}}));};for(var i=0;i<dataCount;i++){_loop(i);}}return React.createElement(Animated.View,{style:[styles.chartView,{transform:[{scaleY:fadeAnim}],marginBottom:this.props.minValue&&this.state.guideArray&&this.state.guideArray.length>0?-1*this.state.guideArray[0][2]*this.props.minValue:null}]},renderColumns);}},{key:\"handleClick\",value:function handleClick(event,index){var _this4=this;this.setState({selectedIndex:index},function(){if(typeof _this4.props.onPress==='function'){_this4.props.onPress(index);}});}},{key:\"drawTooltip\",value:function drawTooltip(selectedIndex){if(typeof selectedIndex==='number'&&selectedIndex>=0){var standardSeries=this.state.sortedData[0];if(!standardSeries){console.warn('standardSeries is null');return null;}var seriesCount=this.state.sortedData.length;var plusGap=10*seriesCount;if(this.state.sortedData.length===1){plusGap=0;}else if(selectedIndex===standardSeries.data.length-1){plusGap=-50;}var left=standardSeries.data[selectedIndex]['gap']+plusGap;var tooltipRenders=[];for(var i=0;i<this.state.sortedData.length;i++){var series=this.state.sortedData[i];if(series.data[selectedIndex]['x']){tooltipRenders.push(React.createElement(Text,{key:'tooltipTitle-'+i,style:styles.tooltipTitle},series.data[selectedIndex]['x']));}tooltipRenders.push(React.createElement(View,{key:'tooltipText-'+i,style:{flexDirection:'row',paddingLeft:5,alignItems:'center'}},React.createElement(View,{style:[styles.tooltipColor,{backgroundColor:!series.seriesColor?this.props.primaryColor:series.seriesColor}]}),React.createElement(Text,{style:styles.tooltipValue},numberWithCommas(series.data[selectedIndex]['y'],false))));}return React.createElement(View,{style:[styles.tooltipWrapper,{left:left}]},React.createElement(View,{style:styles.tooltip},tooltipRenders));}else{return null;}}},{key:\"render\",value:function render(){var fadeAnim=this.state.fadeAnim;if(this.state.sortedData&&this.state.sortedData.length===0)return null;return React.createElement(View,{style:StyleSheet.flatten([styles.wrapper,{backgroundColor:this.props.backgroundColor}])},React.createElement(View,{style:{paddingRight:5}},drawYAxisLabels(this.state.guideArray,this.props.height+20,this.props.minValue,this.props.labelColor)),React.createElement(View,{style:styles.mainContainer},React.createElement(ScrollView,{horizontal:true},React.createElement(View,null,React.createElement(View,{ref:\"chartView\",style:styles.chartContainer},drawYAxis(this.props.yAxisColor),drawGuideLine(this.state.guideArray,this.props.yAxisGridLineColor),this.renderColumns(fadeAnim)),drawXAxis(this.props.xAxisColor),React.createElement(View,{style:{marginLeft:this.props.defaultColumnWidth/2}},drawXAxisLabels(this.state.sortedData[0].data,this.state.gap,this.props.labelColor,this.props.showEvenNumberXaxisLabel))),this.drawTooltip(this.state.selectedIndex))));}}]);return ColumnChart;}(Component);export{ColumnChart as default};var styles=StyleSheet.create({wrapper:{flexDirection:'row',overflow:'hidden'},mainContainer:{paddingBottom:0,paddingLeft:0,paddingRight:0,height:'100%'},chartContainer:{flexDirection:'row',alignItems:'flex-end',margin:0,paddingRight:10,overflow:'hidden'},chartView:{flexDirection:'row',alignItems:'flex-end',height:'100%'},tooltipWrapper:{position:'absolute',height:'100%',alignItems:'center',justifyContent:'center'},tooltip:{backgroundColor:'#FFFFFF',borderRadius:5,borderColor:'#AAAAAA',borderWidth:1,padding:3,alignItems:'center',justifyContent:'center',opacity:0.8},tooltipTitle:{fontSize:10},tooltipValue:{fontWeight:'bold',fontSize:15},tooltipColor:{width:10,height:5,marginRight:3,borderRadius:2}});ColumnChart.propTypes={data:PropTypes.array};ColumnChart.defaultProps={data:[],height:100,defaultColumnWidth:40,defaultColumnMargin:20,primaryColor:'#297AB1',highlightColor:'red',showEvenNumberXaxisLabel:true};","map":{"version":3,"sources":["/home/op-pro/Desktop/Finalyear project/Admin/node_modules/react-native-pure-chart/examples/pure-chart/components/column-chart.js"],"names":["React","Component","PropTypes","ColumnChartItem","initData","drawYAxis","drawYAxisLabels","drawGuideLine","numberWithCommas","drawXAxis","drawXAxisLabels","ColumnChart","props","defaultGap","defaultColumnWidth","defaultColumnMargin","newState","data","height","numberOfYAxisGuideLine","state","sortedData","max","selectedIndex","fadeAnim","Animated","Value","guideArray","gap","renderColumns","bind","handleClick","drawTooltip","nextProps","setState","timing","toValue","easing","Easing","bounce","duration","useNativeDriver","start","seriesArray","seriesCount","length","standardSeries","dataCount","i","push","highlightColor","evt","styles","chartView","transform","scaleY","marginBottom","minValue","event","index","onPress","console","warn","plusGap","left","tooltipRenders","series","tooltipTitle","flexDirection","paddingLeft","alignItems","tooltipColor","backgroundColor","seriesColor","primaryColor","tooltipValue","tooltipWrapper","tooltip","StyleSheet","flatten","wrapper","paddingRight","labelColor","mainContainer","chartContainer","yAxisColor","yAxisGridLineColor","xAxisColor","marginLeft","showEvenNumberXaxisLabel","create","overflow","paddingBottom","margin","position","justifyContent","borderRadius","borderColor","borderWidth","padding","opacity","fontSize","fontWeight","width","marginRight","propTypes","array","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { View, StyleSheet, Animated, ScrollView, Easing, Text } from 'react-native'\nimport ColumnChartItem from './column-chart-item'\nimport {initData, drawYAxis, drawYAxisLabels, drawGuideLine, numberWithCommas, drawXAxis, drawXAxisLabels} from '../common'\n\nexport default class ColumnChart extends Component {\n  constructor (props) {\n    super(props)\n    let defaultGap = this.props.defaultColumnWidth + this.props.defaultColumnMargin\n    let newState = initData(this.props.data, this.props.height, defaultGap, this.props.numberOfYAxisGuideLine)\n    this.state = {\n      sortedData: newState.sortedData,\n      max: newState.max,\n      selectedIndex: null,\n      fadeAnim: new Animated.Value(0),\n      guideArray: newState.guideArray,\n      gap: defaultGap\n    }\n    this.renderColumns = this.renderColumns.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n    this.drawTooltip = this.drawTooltip.bind(this)\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.data !== this.props.data) {\n      this.setState(Object.assign({\n        fadeAnim: new Animated.Value(0)\n      }, initData(nextProps.data, this.props.height, this.state.gap, this.props.numberOfYAxisGuideLine)), () => {\n        Animated.timing(this.state.fadeAnim, { toValue: 1, easing: Easing.bounce, duration: 1000, useNativeDriver: true }).start()\n      })\n    }\n  }\n\n  componentDidMount () {\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 1, easing: Easing.bounce, duration: 1000, useNativeDriver: true\n    }).start()\n  }\n\n  renderColumns (fadeAnim) {\n    let seriesArray = this.state.sortedData\n    let seriesCount = seriesArray.length\n    let renderColumns = []\n    if (seriesCount > 0) {\n      let standardSeries = seriesArray[0]\n      let dataCount = standardSeries.data.length\n      for (let i = 0; i < dataCount; i++) {\n        renderColumns.push(\n          <ColumnChartItem key={i} seriesArray={this.state.sortedData}\n            dataIndex={i}\n            defaultWidth={this.props.defaultColumnWidth}\n            defaultHeight={this.props.height + 20}\n            defaultMargin={this.props.defaultColumnMargin}\n            isSelected={this.state.selectedIndex === i}\n            highlightColor={this.props.highlightColor}\n            onClick={(evt) => this.handleClick(evt, i)} />\n        )\n      }\n    }\n    return (\n      <Animated.View style={[styles.chartView, {\n        transform: [{scaleY: fadeAnim}],\n        marginBottom: this.props.minValue && this.state.guideArray && this.state.guideArray.length > 0 ? -1 * this.state.guideArray[0][2] * this.props.minValue : null\n      }]}>\n        {renderColumns}\n      </Animated.View>\n    )\n  }\n\n  handleClick (event, index) {\n    this.setState({\n      selectedIndex: index\n    }, () => {\n      if (typeof this.props.onPress === 'function') {\n        this.props.onPress(index)\n      }\n    })\n  }\n  drawTooltip (selectedIndex) {\n    if (typeof (selectedIndex) === 'number' && selectedIndex >= 0) {\n      let standardSeries = this.state.sortedData[0]\n      if (!standardSeries) {\n        console.warn('standardSeries is null')\n        return null\n      }\n\n      let seriesCount = this.state.sortedData.length\n      let plusGap = 10 * seriesCount\n      if (this.state.sortedData.length === 1) {\n        plusGap = 0\n      } else if (selectedIndex === standardSeries.data.length - 1) {\n        plusGap = -50\n      }\n      // 차트 width를 마지막에 늘려야겠음.\n\n      let left = standardSeries.data[selectedIndex]['gap'] + plusGap\n      let tooltipRenders = []\n      for (let i = 0; i < this.state.sortedData.length; i++) {\n        let series = this.state.sortedData[i]\n        if (series.data[selectedIndex]['x']) {\n          tooltipRenders.push(<Text key={'tooltipTitle-' + i} style={styles.tooltipTitle}>{series.data[selectedIndex]['x']}</Text>)\n        }\n        tooltipRenders.push(\n          <View key={'tooltipText-' + i} style={{flexDirection: 'row', paddingLeft: 5, alignItems: 'center'}}>\n            <View style={[styles.tooltipColor, {backgroundColor: !series.seriesColor ? this.props.primaryColor : series.seriesColor}]} />\n            <Text style={styles.tooltipValue}>{numberWithCommas(series.data[selectedIndex]['y'], false)}</Text>\n          </View>\n        )\n      }\n      return (\n        <View style={[styles.tooltipWrapper, { left: left }]}>\n          <View style={styles.tooltip}>\n            {tooltipRenders}\n          </View>\n        </View>\n      )\n    } else {\n      return null\n    }\n  }\n\n  render () {\n    let {fadeAnim} = this.state\n    if (this.state.sortedData && this.state.sortedData.length === 0) return null\n\n    return (\n      <View style={StyleSheet.flatten([styles.wrapper, {\n        backgroundColor: this.props.backgroundColor\n      }])}>\n        <View style={{paddingRight: 5}}>\n          {drawYAxisLabels(this.state.guideArray, this.props.height + 20, this.props.minValue, this.props.labelColor)}\n        </View>\n        <View style={styles.mainContainer}>\n          <ScrollView horizontal>\n            <View>\n              <View ref='chartView' style={styles.chartContainer}>\n                {drawYAxis(this.props.yAxisColor)}\n                {drawGuideLine(this.state.guideArray, this.props.yAxisGridLineColor)}\n                {this.renderColumns(fadeAnim)}\n              </View>\n              {drawXAxis(this.props.xAxisColor)}\n              <View style={{ marginLeft: this.props.defaultColumnWidth / 2 }}>\n                {drawXAxisLabels(this.state.sortedData[0].data, this.state.gap, this.props.labelColor, this.props.showEvenNumberXaxisLabel)}\n              </View>\n            </View>\n            {this.drawTooltip(this.state.selectedIndex)}\n          </ScrollView>\n        </View>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  mainContainer: {\n    paddingBottom: 0,\n    paddingLeft: 0,\n    paddingRight: 0,\n    height: '100%'\n  },\n  chartContainer: {\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    margin: 0,\n    paddingRight: 10,\n    overflow: 'hidden'\n  },\n  chartView: {\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    height: '100%'\n  },\n  tooltipWrapper: {\n    position: 'absolute',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  tooltip: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 5,\n    borderColor: '#AAAAAA',\n    borderWidth: 1,\n    padding: 3,\n    alignItems: 'center',\n    justifyContent: 'center',\n    opacity: 0.8\n  },\n  tooltipTitle: {fontSize: 10},\n  tooltipValue: {fontWeight: 'bold', fontSize: 15},\n  tooltipColor: {\n    width: 10,\n    height: 5,\n    marginRight: 3,\n    borderRadius: 2\n  }\n})\n\nColumnChart.propTypes = {\n  data: PropTypes.array\n}\nColumnChart.defaultProps = {\n  data: [],\n  height: 100,\n  defaultColumnWidth: 40,\n  defaultColumnMargin: 20,\n  primaryColor: '#297AB1',\n  highlightColor: 'red',\n  showEvenNumberXaxisLabel: true\n}\n"]},"metadata":{},"sourceType":"module"}
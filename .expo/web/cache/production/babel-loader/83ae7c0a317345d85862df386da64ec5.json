{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _color=_interopRequireDefault(require(\"color\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _Text=_interopRequireDefault(require(\"../Typography/Text\"));var _Divider=_interopRequireDefault(require(\"../Divider\"));var _theming=require(\"../../core/theming\");var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Drawer/DrawerSection.tsx\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var DrawerSection=function(_React$Component){(0,_inherits2.default)(DrawerSection,_React$Component);function DrawerSection(){(0,_classCallCheck2.default)(this,DrawerSection);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(DrawerSection).apply(this,arguments));}(0,_createClass2.default)(DrawerSection,[{key:\"render\",value:function render(){var _this$props=this.props,children=_this$props.children,title=_this$props.title,theme=_this$props.theme,style=_this$props.style,rest=(0,_objectWithoutProperties2.default)(_this$props,[\"children\",\"title\",\"theme\",\"style\"]);var colors=theme.colors,fonts=theme.fonts;var titleColor=(0,_color.default)(colors.text).alpha(0.54).rgb().string();var font=fonts.medium;return React.createElement(_reactNative.View,(0,_extends2.default)({style:[styles.container,style]},rest,{__source:{fileName:_jsxFileName,lineNumber:72}}),title&&React.createElement(_reactNative.View,{style:styles.titleContainer,__source:{fileName:_jsxFileName,lineNumber:74}},React.createElement(_Text.default,{numberOfLines:1,style:_objectSpread({color:titleColor},font,{marginLeft:16}),__source:{fileName:_jsxFileName,lineNumber:75}},title)),children,React.createElement(_Divider.default,{style:styles.divider,__source:{fileName:_jsxFileName,lineNumber:84}}));}}]);return DrawerSection;}(React.Component);(0,_defineProperty2.default)(DrawerSection,\"displayName\",'Drawer.Section');var styles=_reactNative.StyleSheet.create({container:{marginBottom:4},titleContainer:{height:40,justifyContent:'center'},divider:{marginTop:4}});var _default=(0,_theming.withTheme)(DrawerSection);exports.default=_default;","map":{"version":3,"sources":["DrawerSection.tsx"],"names":["DrawerSection","React","Component","children","title","theme","style","rest","colors","fonts","titleColor","font","styles","color","marginLeft","StyleSheet","container","marginBottom","titleContainer","height","justifyContent","divider","marginTop"],"mappings":"g/BAAA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,KAAA,CAAA,sBAAA,CAAA,OAAA,sBAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,sBAAA,CAAA,OAAA,cAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,OAAA,sBAAA,C,y4BAqDMA,IAAAA,CAAAA,a,kWAGK,CAAA,GAAA,CAAA,WAAA,CAC4C,KAD5C,KAAA,CACCG,QADD,CAAA,WAAA,CAAA,QAAA,CACWC,KADX,CAAA,WAAA,CAAA,KAAA,CACkBC,KADlB,CAAA,WAAA,CAAA,KAAA,CACyBC,KADzB,CAAA,WAAA,CAAA,KAAA,CACmCC,IADnC,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,WAAA,CAAA,CAAA,UAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA,GAECC,CAAAA,MAFD,CAEmBH,KAFnB,CAAA,MAAA,CAESI,KAFT,CAEmBJ,KAFnB,CAAA,KAAA,CAGP,GAAMK,CAAAA,UAAU,CAAG,CAAA,EAAA,MAAA,CAAA,OAAA,EAAMF,MAAM,CAAZ,IAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,GAAnB,MAAmB,EAAnB,CAIA,GAAMG,CAAAA,IAAI,CAAGF,KAAK,CAAlB,MAAA,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,CAAM,KAAK,CAAE,CAACG,MAAM,CAAP,SAAA,CAAb,KAAa,CAAb,CAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CACGR,KAAK,EACJ,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CAAM,KAAK,CAAEQ,MAAM,CAAnB,cAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CACE,KAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,CAAA,CACE,aAAa,CADf,CAAA,CAEE,KAAK,CAAA,aAAA,CAAA,CAAIC,KAAK,CAAT,UAAA,CAAA,CAAA,IAAA,CAAA,CAAgCC,UAAU,CAFjD,EAEO,CAAA,CAFP,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAHN,KAGM,CADF,CAFJ,CAAA,QAAA,CAYE,KAAA,CAAA,aAAA,CAAC,QAAA,CAAD,OAAA,CAAA,CAAS,KAAK,CAAEF,MAAM,CAAtB,OAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAbJ,EAaI,CAAA,CAAA,CAZF,CADF,C,4BAZwBX,KAAK,CAACC,S,CAA5BF,C,6BAAAA,a,eACiB,gB,EA8BvB,GAAMY,CAAAA,MAAM,CAAGG,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,YAAY,CAFiB,CACpB,CADoB,CAI/BC,cAAc,CAAE,CACdC,MAAM,CADQ,EAAA,CAEdC,cAAc,CANe,QAIf,CAJe,CAQ/BC,OAAO,CAAE,CACPC,SAAS,CATb,CAQW,CARsB,CAAlBP,CAAf,C,aAae,CAAA,EAAA,QAAA,CAAA,SAAA,EAAA,aAAA,C","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Text from '../Typography/Text';\nimport Divider from '../Divider';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Title to show as the header for the section.\n   */\n  title?: string;\n  /**\n   * Content of the `Drawer.Section`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component to group content inside a navigation drawer.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     active: 'first',\n *   };\n *\n *   render() {\n *     const { active } = this.state;\n *\n *     return (\n *       <Drawer.Section title=\"Some title\">\n *         <Drawer.Item\n *           label=\"First Item\"\n *           active={active === 'first'}\n *           onPress={() => { this.setState({ active: 'first' }); }}\n *         />\n *         <Drawer.Item\n *           label=\"Second Item\"\n *           active={active === 'second'}\n *           onPress={() => { this.setState({ active: 'second' }); }}\n *         />\n *      </Drawer.Section>\n *     );\n *   }\n * }\n * ```\n */\nclass DrawerSection extends React.Component<Props> {\n  static displayName = 'Drawer.Section';\n\n  render() {\n    const { children, title, theme, style, ...rest } = this.props;\n    const { colors, fonts } = theme;\n    const titleColor = color(colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n    const font = fonts.medium;\n\n    return (\n      <View style={[styles.container, style]} {...rest}>\n        {title && (\n          <View style={styles.titleContainer}>\n            <Text\n              numberOfLines={1}\n              style={{ color: titleColor, ...font, marginLeft: 16 }}\n            >\n              {title}\n            </Text>\n          </View>\n        )}\n        {children}\n        <Divider style={styles.divider} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 4,\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  divider: {\n    marginTop: 4,\n  },\n});\n\nexport default withTheme(DrawerSection);\n"]},"metadata":{},"sourceType":"script"}
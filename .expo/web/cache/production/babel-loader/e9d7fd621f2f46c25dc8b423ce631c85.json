{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.ListAccordionGroupContext=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf3=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var React=_interopRequireWildcard(require(\"react\"));var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/List/ListAccordionGroup.tsx\";var ListAccordionGroupContext=React.createContext(null);exports.ListAccordionGroupContext=ListAccordionGroupContext;var ListAccordionGroup=function(_React$Component){(0,_inherits2.default)(ListAccordionGroup,_React$Component);function ListAccordionGroup(){var _getPrototypeOf2;var _this;(0,_classCallCheck2.default)(this,ListAccordionGroup);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=(0,_possibleConstructorReturn2.default)(this,(_getPrototypeOf2=(0,_getPrototypeOf3.default)(ListAccordionGroup)).call.apply(_getPrototypeOf2,[this].concat(args)));(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"state\",{expandedId:undefined});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"onAccordionPress\",function(expandedId){_this.setState(function(_ref){var currentExpandedId=_ref.expandedId;return{expandedId:currentExpandedId===expandedId?undefined:expandedId};});});return _this;}(0,_createClass2.default)(ListAccordionGroup,[{key:\"render\",value:function render(){var _this$props=this.props,expandedId=_this$props.expandedId,onAccordionPress=_this$props.onAccordionPress,children=_this$props.children;return React.createElement(ListAccordionGroupContext.Provider,{value:{expandedId:expandedId||this.state.expandedId,onAccordionPress:onAccordionPress||this.onAccordionPress},__source:{fileName:_jsxFileName,lineNumber:85}},children);}}]);return ListAccordionGroup;}(React.Component);(0,_defineProperty2.default)(ListAccordionGroup,\"displayName\",'List.AccordionGroup');var _default=ListAccordionGroup;exports.default=_default;","map":{"version":3,"sources":["ListAccordionGroup.tsx"],"names":["ListAccordionGroupContext","React","ListAccordionGroup","Component","expandedId","currentExpandedId","onAccordionPress","children"],"mappings":"87BAAA,GAAA,CAAA,KAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,oGAsBO,GAAMA,CAAAA,yBAAyB,CAAGC,KAAK,CAALA,aAAAA,CAAlC,IAAkCA,CAAlC,C,4DA6CDC,GAAAA,CAAAA,kB,4iBAGW,CACbE,UAAU,CADG,SAAA,C,6FAII,SAAA,UAAA,CAAiC,CAClD,KAAA,CAAA,QAAA,CAAc,SAAA,IAAA,CAAA,CAAA,GAAeC,CAAAA,iBAAf,CAAA,IAAA,CAAA,UAAA,CAAA,MAAwC,CACpDD,UAAU,CAAEC,iBAAiB,GAAjBA,UAAAA,CAAAA,SAAAA,CADA,UAAwC,CAAxC,CAAd,CAAA,E,oGAKO,CAAA,GAAA,CAAA,WAAA,CAC4C,KAD5C,KAAA,CACCD,UADD,CAAA,WAAA,CAAA,UAAA,CACaE,gBADb,CAAA,WAAA,CAAA,gBAAA,CAC+BC,QAD/B,CAAA,WAAA,CAAA,QAAA,CAGP,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,yBAAD,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,CACLH,UAAU,CAAEA,UAAU,EAAI,KAAA,KAAA,CADrB,UAAA,CAELE,gBAAgB,CAAEA,gBAAgB,EAAI,KAH1C,gBACS,CADT,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CADF,QACE,CADF,C,iCAhB6BL,KAAK,CAACE,S,CAAjCD,C,6BAAAA,kB,eACiB,qB,eA4BRA,kB","sourcesContent":["import * as React from 'react';\n\ntype Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onAccordionPress?: (expandedId: string | number) => void;\n  /**\n   * Id of the currently expanded list accordion\n   */\n  expandedId?: string | number;\n  /**\n   * React elements containing list accordions\n   */\n  children: React.ReactNode;\n};\n\nexport type ListAccordionGroupContextType = {\n  expandedId: string | number | undefined;\n  onAccordionPress: (expandedId: string | number) => void;\n} | null;\n\nexport const ListAccordionGroupContext = React.createContext<\n  ListAccordionGroupContextType\n>(null);\n\ntype State = {\n  expandedId: string | number | undefined;\n};\n\n/**\n * List.AccordionGroup allows to control a group of List Accordions. Id prop for List.Accordion is required in order to group to work.\n * List.AccordionGroup can be controlled or uncontrolled component. Example shows uncontrolled version.\n * At most one Accordion will be expanded in given time.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/list-accordion-group.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View, Text } from 'react-native';\n * import { List } from 'react-native-paper';\n *\n * function MyComponent() {\n *  return (\n *   <List.AccordionGroup>\n *     <List.Accordion title=\"Accordion 1\" id=\"1\">\n *       <List.Item title=\"Item 1\" />\n *     </List.Accordion>\n *     <List.Accordion title=\"Accordion 2\" id=\"2\">\n *       <List.Item title=\"Item 2\" />\n *     </List.Accordion>\n *     <View>\n *       <Text>\n *         List.Accordion can be wrapped because implementation uses React.Context.\n *       </Text>\n *       <List.Accordion title=\"Accordion 3\" id=\"3\">\n *         <List.Item title=\"Item 3\" />\n *       </List.Accordion>\n *     </View>\n *   </List.AccordionGroup>\n *  );\n * }\n *```\n */\nclass ListAccordionGroup extends React.Component<Props, State> {\n  static displayName = 'List.AccordionGroup';\n\n  state: State = {\n    expandedId: undefined,\n  };\n\n  onAccordionPress = (expandedId: string | number) => {\n    this.setState(({ expandedId: currentExpandedId }) => ({\n      expandedId: currentExpandedId === expandedId ? undefined : expandedId,\n    }));\n  };\n\n  render() {\n    const { expandedId, onAccordionPress, children } = this.props;\n\n    return (\n      <ListAccordionGroupContext.Provider\n        value={{\n          expandedId: expandedId || this.state.expandedId, // component can be controlled or uncontrolled\n          onAccordionPress: onAccordionPress || this.onAccordionPress,\n        }}\n      >\n        {children}\n      </ListAccordionGroupContext.Provider>\n    );\n  }\n}\n\nexport default ListAccordionGroup;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf3=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _color=_interopRequireDefault(require(\"color\"));var _theming=require(\"../core/theming\");var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/ProgressBar.tsx\";var INDETERMINATE_DURATION=2000;var INDETERMINATE_MAX_WIDTH=0.6;var isRTL=_reactNative.I18nManager.isRTL;var ProgressBar=function(_React$Component){(0,_inherits2.default)(ProgressBar,_React$Component);function ProgressBar(){var _getPrototypeOf2;var _this;(0,_classCallCheck2.default)(this,ProgressBar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=(0,_possibleConstructorReturn2.default)(this,(_getPrototypeOf2=(0,_getPrototypeOf3.default)(ProgressBar)).call.apply(_getPrototypeOf2,[this].concat(args)));(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"state\",{width:0,timer:new _reactNative.Animated.Value(0),fade:new _reactNative.Animated.Value(0)});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"indeterminateAnimation\",null);(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"onLayout\",function(event){var visible=_this.props.visible;var previousWidth=_this.state.width;_this.setState({width:event.nativeEvent.layout.width},function(){if(visible&&previousWidth===0){_this.startAnimation();}});});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"startAnimation\",function(){var _this$props=_this.props,indeterminate=_this$props.indeterminate,progress=_this$props.progress,scale=_this$props.theme.animation.scale;var _this$state=_this.state,fade=_this$state.fade,timer=_this$state.timer;_reactNative.Animated.timing(fade,{duration:200*scale,toValue:1,useNativeDriver:true,isInteraction:false}).start();if(indeterminate){if(!_this.indeterminateAnimation){_this.indeterminateAnimation=_reactNative.Animated.timing(timer,{duration:INDETERMINATE_DURATION,toValue:1,useNativeDriver:_reactNative.Platform.OS!=='web',isInteraction:false});}timer.setValue(0);_reactNative.Animated.loop(_this.indeterminateAnimation).start();}else{_reactNative.Animated.timing(timer,{duration:200*scale,toValue:progress?progress:0,useNativeDriver:true,isInteraction:false}).start();}});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),\"stopAnimation\",function(){var fade=_this.state.fade;var scale=_this.props.theme.animation.scale;if(_this.indeterminateAnimation){_this.indeterminateAnimation.stop();}_reactNative.Animated.timing(fade,{duration:200*scale,toValue:0,useNativeDriver:true,isInteraction:false}).start();});return _this;}(0,_createClass2.default)(ProgressBar,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this$props2=this.props,visible=_this$props2.visible,progress=_this$props2.progress;if(progress!==prevProps.progress||visible!==prevProps.visible){if(visible){this.startAnimation();}else{this.stopAnimation();}}}},{key:\"render\",value:function render(){var _this$props3=this.props,color=_this$props3.color,indeterminate=_this$props3.indeterminate,style=_this$props3.style,theme=_this$props3.theme,progress=_this$props3.progress,visible=_this$props3.visible,rest=(0,_objectWithoutProperties2.default)(_this$props3,[\"color\",\"indeterminate\",\"style\",\"theme\",\"progress\",\"visible\"]);var _this$state2=this.state,fade=_this$state2.fade,timer=_this$state2.timer,width=_this$state2.width;var tintColor=color||theme.colors.primary;var trackTintColor=(0,_color.default)(tintColor).alpha(0.38).rgb().string();return React.createElement(_reactNative.View,(0,_extends2.default)({onLayout:this.onLayout},rest,{__source:{fileName:_jsxFileName,lineNumber:188}}),React.createElement(_reactNative.Animated.View,{style:[styles.container,{backgroundColor:trackTintColor,opacity:fade},style],__source:{fileName:_jsxFileName,lineNumber:189}},React.createElement(_reactNative.Animated.View,{style:[styles.progressBar,{backgroundColor:tintColor,width:width,transform:[{translateX:timer.interpolate(indeterminate?{inputRange:[0,0.5,1],outputRange:[(isRTL?1:-1)*0.5*width,(isRTL?1:-1)*0.5*INDETERMINATE_MAX_WIDTH*width,(isRTL?-1:1)*0.7*width]}:{inputRange:[0,1],outputRange:[(isRTL?1:-1)*0.5*width,0]})},{scaleX:timer.interpolate(indeterminate?{inputRange:[0,0.5,1],outputRange:[0.0001,INDETERMINATE_MAX_WIDTH,0.0001]}:{inputRange:[0,1],outputRange:[0.0001,1]})}]}],__source:{fileName:_jsxFileName,lineNumber:196}})));}}]);return ProgressBar;}(React.Component);(0,_defineProperty2.default)(ProgressBar,\"defaultProps\",{visible:true,progress:0});var styles=_reactNative.StyleSheet.create({container:{height:4,overflow:'hidden'},progressBar:{flex:1}});var _default=(0,_theming.withTheme)(ProgressBar);exports.default=_default;","map":{"version":3,"sources":["ProgressBar.tsx"],"names":["INDETERMINATE_DURATION","INDETERMINATE_MAX_WIDTH","isRTL","I18nManager","ProgressBar","React","Component","visible","progress","width","timer","Animated","fade","prevProps","previousWidth","event","indeterminate","scale","duration","toValue","useNativeDriver","isInteraction","Platform","color","style","theme","rest","tintColor","trackTintColor","styles","backgroundColor","opacity","transform","translateX","inputRange","outputRange","scaleX","StyleSheet","container","height","overflow","progressBar","flex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n  LayoutChangeEvent,\n  I18nManager,\n} from 'react-native';\nimport setColor from 'color';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Progress value (between 0 and 1).\n   */\n  progress?: number;\n  /**\n   * Color of the progress bar. The background color will be calculated based on this but you can change it by passing `backgroundColor` to `style` prop.\n   */\n  color?: string;\n  /**\n   * If the progress bar will show indeterminate progress.\n   */\n  indeterminate?: boolean;\n  /**\n   * Whether to show the ProgressBar (true, the default) or hide it (false).\n   */\n  visible?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  width: number;\n  fade: Animated.Value;\n  timer: Animated.Value;\n};\n\nconst INDETERMINATE_DURATION = 2000;\nconst INDETERMINATE_MAX_WIDTH = 0.6;\nconst { isRTL } = I18nManager;\n\n/**\n * Progress bar is an indicator used to present progress of some activity in the app.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/progress-bar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ProgressBar, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ProgressBar progress={0.5} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass ProgressBar extends React.Component<Props, State> {\n  static defaultProps = {\n    visible: true,\n    progress: 0,\n  };\n\n  state = {\n    width: 0,\n    timer: new Animated.Value(0),\n    fade: new Animated.Value(0),\n  };\n\n  indeterminateAnimation: Animated.CompositeAnimation | null = null;\n\n  componentDidUpdate(prevProps: Props) {\n    const { visible, progress } = this.props;\n\n    if (progress !== prevProps.progress || visible !== prevProps.visible) {\n      if (visible) {\n        this.startAnimation();\n      } else {\n        this.stopAnimation();\n      }\n    }\n  }\n\n  private onLayout = (event: LayoutChangeEvent) => {\n    const { visible } = this.props;\n    const { width: previousWidth } = this.state;\n\n    this.setState({ width: event.nativeEvent.layout.width }, () => {\n      // Start animation the very first time when previously the width was unclear\n      if (visible && previousWidth === 0) {\n        this.startAnimation();\n      }\n    });\n  };\n\n  private startAnimation = () => {\n    const {\n      indeterminate,\n      progress,\n      theme: {\n        animation: { scale },\n      },\n    } = this.props;\n    const { fade, timer } = this.state;\n\n    // Show progress bar\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n\n    // Animate progress bar\n    if (indeterminate) {\n      if (!this.indeterminateAnimation) {\n        this.indeterminateAnimation = Animated.timing(timer, {\n          duration: INDETERMINATE_DURATION,\n          toValue: 1,\n          // Animated.loop does not work if useNativeDriver is true on web\n          useNativeDriver: Platform.OS !== 'web',\n          isInteraction: false,\n        });\n      }\n\n      // Reset timer to the beginning\n      timer.setValue(0);\n\n      Animated.loop(this.indeterminateAnimation).start();\n    } else {\n      Animated.timing(timer, {\n        duration: 200 * scale,\n        toValue: progress ? progress : 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start();\n    }\n  };\n\n  private stopAnimation = () => {\n    const { fade } = this.state;\n    const { scale } = this.props.theme.animation;\n\n    // Stop indeterminate animation\n    if (this.indeterminateAnimation) {\n      this.indeterminateAnimation.stop();\n    }\n\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 0,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n  };\n\n  render() {\n    const {\n      color,\n      indeterminate,\n      style,\n      theme,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      progress,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      visible,\n      ...rest\n    } = this.props;\n    const { fade, timer, width } = this.state;\n    const tintColor = color || theme.colors.primary;\n    const trackTintColor = setColor(tintColor)\n      .alpha(0.38)\n      .rgb()\n      .string();\n\n    return (\n      <View onLayout={this.onLayout} {...rest}>\n        <Animated.View\n          style={[\n            styles.container,\n            { backgroundColor: trackTintColor, opacity: fade },\n            style,\n          ]}\n        >\n          <Animated.View\n            style={[\n              styles.progressBar,\n              {\n                backgroundColor: tintColor,\n                width,\n                transform: [\n                  {\n                    translateX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              (isRTL ? 1 : -1) * 0.5 * width,\n                              (isRTL ? 1 : -1) *\n                                0.5 *\n                                INDETERMINATE_MAX_WIDTH *\n                                width,\n                              (isRTL ? -1 : 1) * 0.7 * width,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0],\n                          }\n                    ),\n                  },\n                  {\n                    // Workaround for workaround for https://github.com/facebook/react-native/issues/6278\n                    scaleX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              0.0001,\n                              INDETERMINATE_MAX_WIDTH,\n                              0.0001,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [0.0001, 1],\n                          }\n                    ),\n                  },\n                ],\n              },\n            ]}\n          />\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden',\n  },\n\n  progressBar: {\n    flex: 1,\n  },\n});\n\nexport default withTheme(ProgressBar);\n"]},"metadata":{},"sourceType":"script"}
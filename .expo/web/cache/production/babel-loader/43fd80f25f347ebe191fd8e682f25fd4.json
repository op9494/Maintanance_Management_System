{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.AppbarContent=exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _color=_interopRequireDefault(require(\"color\"));var _Text=_interopRequireDefault(require(\"../Typography/Text\"));var _theming=require(\"../../core/theming\");var _colors=require(\"../../styles/colors\");var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Appbar/AppbarContent.tsx\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var AppbarContent=function(_React$Component){(0,_inherits2.default)(AppbarContent,_React$Component);function AppbarContent(){(0,_classCallCheck2.default)(this,AppbarContent);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(AppbarContent).apply(this,arguments));}(0,_createClass2.default)(AppbarContent,[{key:\"render\",value:function render(){var _this$props=this.props,_this$props$color=_this$props.color,titleColor=_this$props$color===void 0?_colors.white:_this$props$color,subtitle=_this$props.subtitle,subtitleStyle=_this$props.subtitleStyle,onPress=_this$props.onPress,style=_this$props.style,titleRef=_this$props.titleRef,titleStyle=_this$props.titleStyle,theme=_this$props.theme,title=_this$props.title,rest=(0,_objectWithoutProperties2.default)(_this$props,[\"color\",\"subtitle\",\"subtitleStyle\",\"onPress\",\"style\",\"titleRef\",\"titleStyle\",\"theme\",\"title\"]);var fonts=theme.fonts;var subtitleColor=(0,_color.default)(titleColor).alpha(0.7).rgb().string();return React.createElement(_reactNative.TouchableWithoutFeedback,{onPress:onPress,disabled:!onPress,__source:{fileName:_jsxFileName,lineNumber:83}},React.createElement(_reactNative.View,(0,_extends2.default)({style:[styles.container,style]},rest,{__source:{fileName:_jsxFileName,lineNumber:84}}),React.createElement(_Text.default,{ref:titleRef,style:[_objectSpread({color:titleColor},_reactNative.Platform.OS==='ios'?fonts.regular:fonts.medium),styles.title,titleStyle],numberOfLines:1,accessible:true,accessibilityTraits:\"header\",accessibilityRole:_reactNative.Platform.OS==='web'?'heading':'header',__source:{fileName:_jsxFileName,lineNumber:85}},title),subtitle?React.createElement(_Text.default,{style:[styles.subtitle,{color:subtitleColor},subtitleStyle],numberOfLines:1,__source:{fileName:_jsxFileName,lineNumber:104}},subtitle):null));}}]);return AppbarContent;}(React.Component);exports.AppbarContent=AppbarContent;(0,_defineProperty2.default)(AppbarContent,\"displayName\",'Appbar.Content');var styles=_reactNative.StyleSheet.create({container:{flex:1,paddingHorizontal:12},title:{fontSize:_reactNative.Platform.OS==='ios'?17:20},subtitle:{fontSize:_reactNative.Platform.OS==='ios'?11:14}});var _default=(0,_theming.withTheme)(AppbarContent);exports.default=_default;","map":{"version":3,"sources":["AppbarContent.tsx"],"names":["AppbarContent","React","Component","titleColor","white","subtitle","subtitleStyle","onPress","style","titleRef","titleStyle","theme","title","rest","fonts","subtitleColor","styles","color","Platform","StyleSheet","container","flex","paddingHorizontal","fontSize"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport Text from '../Typography/Text';\n\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\n\nimport { Theme, $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof View> & {\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Text for the title.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Reference for the title.\n   */\n  titleRef?: React.RefObject<Text>;\n  /**\n   * Text for the subtitle.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component used to display a title and optional subtitle in a appbar.\n */\nclass AppbarContent extends React.Component<Props> {\n  static displayName = 'Appbar.Content';\n\n  render() {\n    const {\n      color: titleColor = white,\n      subtitle,\n      subtitleStyle,\n      onPress,\n      style,\n      titleRef,\n      titleStyle,\n      theme,\n      title,\n      ...rest\n    } = this.props;\n    const { fonts } = theme;\n\n    const subtitleColor = color(titleColor)\n      .alpha(0.7)\n      .rgb()\n      .string();\n\n    return (\n      <TouchableWithoutFeedback onPress={onPress} disabled={!onPress}>\n        <View style={[styles.container, style]} {...rest}>\n          <Text\n            ref={titleRef}\n            style={[\n              {\n                color: titleColor,\n                ...(Platform.OS === 'ios' ? fonts.regular : fonts.medium),\n              },\n              styles.title,\n              titleStyle,\n            ]}\n            numberOfLines={1}\n            accessible\n            accessibilityTraits=\"header\"\n            // @ts-ignore\n            accessibilityRole={Platform.OS === 'web' ? 'heading' : 'header'}\n          >\n            {title}\n          </Text>\n          {subtitle ? (\n            <Text\n              style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n              numberOfLines={1}\n            >\n              {subtitle}\n            </Text>\n          ) : null}\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\n  },\n});\n\nexport default withTheme(AppbarContent);\n\n// @component-docs ignore-next-line\nexport { AppbarContent };\n"]},"metadata":{},"sourceType":"script"}
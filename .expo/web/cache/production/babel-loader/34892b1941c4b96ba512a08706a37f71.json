{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var React=_interopRequireWildcard(require(\"react\"));var _color=_interopRequireDefault(require(\"color\"));var _colors=require(\"../../styles/colors\");var _IconButton=_interopRequireDefault(require(\"../IconButton\"));var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Appbar/AppbarAction.tsx\";var AppbarAction=function(_React$Component){(0,_inherits2.default)(AppbarAction,_React$Component);function AppbarAction(){(0,_classCallCheck2.default)(this,AppbarAction);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(AppbarAction).apply(this,arguments));}(0,_createClass2.default)(AppbarAction,[{key:\"render\",value:function render(){var _this$props=this.props,_this$props$color=_this$props.color,iconColor=_this$props$color===void 0?(0,_color.default)(_colors.black).alpha(0.54).rgb().string():_this$props$color,icon=_this$props.icon,disabled=_this$props.disabled,onPress=_this$props.onPress,accessibilityLabel=_this$props.accessibilityLabel,rest=(0,_objectWithoutProperties2.default)(_this$props,[\"color\",\"icon\",\"disabled\",\"onPress\",\"accessibilityLabel\"]);return React.createElement(_IconButton.default,(0,_extends2.default)({onPress:onPress,color:iconColor,icon:icon,disabled:disabled,accessibilityLabel:accessibilityLabel,animated:true},rest,{__source:{fileName:_jsxFileName,lineNumber:61}}));}}]);return AppbarAction;}(React.Component);exports.default=AppbarAction;(0,_defineProperty2.default)(AppbarAction,\"displayName\",'Appbar.Action');(0,_defineProperty2.default)(AppbarAction,\"defaultProps\",{size:24});","map":{"version":3,"sources":["AppbarAction.tsx"],"names":["AppbarAction","React","Component","size","iconColor","black","icon","disabled","onPress","accessibilityLabel","rest"],"mappings":"g/BAAA,GAAA,CAAA,KAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAEA,GAAA,CAAA,OAAA,CAAA,OAAA,uBAAA,CACA,GAAA,CAAA,WAAA,CAAA,sBAAA,CAAA,OAAA,iBAAA,CAAA,C,gGAmCqBA,GAAAA,CAAAA,Y,6VAOV,CAAA,GAAA,CAAA,WAAA,CAWH,KAXG,KAAA,CAAA,iBAAA,CAAA,WAAA,CAAA,KAAA,CAEEI,SAFF,CAAA,iBAAA,GAAA,IAAA,EAAA,CAEc,CAAA,EAAA,MAAA,CAAA,OAAA,EAAMC,OAAAA,CAAN,KAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,GAFd,MAEc,EAFd,CAAA,iBAAA,CAMLC,IANK,CAAA,WAAA,CAAA,IAAA,CAOLC,QAPK,CAAA,WAAA,CAAA,QAAA,CAQLC,OARK,CAAA,WAAA,CAAA,OAAA,CASLC,kBATK,CAAA,WAAA,CAAA,kBAAA,CAUFC,IAVE,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,WAAA,CAAA,CAAA,OAAA,CAAA,MAAA,CAAA,UAAA,CAAA,SAAA,CAAA,oBAAA,CAAA,CAAA,CAaP,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,WAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,CACE,OAAO,CADT,OAAA,CAEE,KAAK,CAFP,SAAA,CAGE,IAAI,CAHN,IAAA,CAIE,QAAQ,CAJV,QAAA,CAKE,kBAAkB,CALpB,kBAAA,CAME,QAAQ,CANV,IAAA,CAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADF,EACE,CAAA,CAAA,CAAA,CADF,C,2BApBsCT,KAAK,CAACC,S,CAA3BF,C,0DAAAA,Y,eACE,e,+BADFA,Y,gBAGG,CACpBG,IAAI,CADgB,EAAA,C","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleProp, ViewStyle, TouchableWithoutFeedback } from 'react-native';\nimport { black } from '../../styles/colors';\nimport IconButton from '../IconButton';\nimport { IconSource } from '../Icon';\n\ntype Props = React.ComponentPropsWithoutRef<typeof IconButton> & {\n  /**\n   *  Custom color for action icon.\n   */\n  color?: string;\n  /**\n   * Name of the icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<TouchableWithoutFeedback>;\n};\n\n/**\n * A component used to display an action item in the appbar.\n */\nexport default class AppbarAction extends React.Component<Props> {\n  static displayName = 'Appbar.Action';\n\n  static defaultProps = {\n    size: 24,\n  };\n\n  render() {\n    const {\n      color: iconColor = color(black)\n        .alpha(0.54)\n        .rgb()\n        .string(),\n      icon,\n      disabled,\n      onPress,\n      accessibilityLabel,\n      ...rest\n    } = this.props;\n\n    return (\n      <IconButton\n        onPress={onPress}\n        color={iconColor}\n        icon={icon}\n        disabled={disabled}\n        accessibilityLabel={accessibilityLabel}\n        animated\n        {...rest}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _CheckboxIOS2=_interopRequireDefault(require(\"./CheckboxIOS\"));var _CheckboxAndroid2=_interopRequireDefault(require(\"./CheckboxAndroid\"));var _CheckboxItem=_interopRequireDefault(require(\"./CheckboxItem\"));var _theming=require(\"../../core/theming\");var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Checkbox/Checkbox.tsx\";var Checkbox=function(_React$Component){(0,_inherits2.default)(Checkbox,_React$Component);function Checkbox(){(0,_classCallCheck2.default)(this,Checkbox);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(Checkbox).apply(this,arguments));}(0,_createClass2.default)(Checkbox,[{key:\"render\",value:function render(){return _reactNative.Platform.OS==='ios'?React.createElement(_CheckboxIOS2.default,(0,_extends2.default)({},this.props,{__source:{fileName:_jsxFileName,lineNumber:96}})):React.createElement(_CheckboxAndroid2.default,(0,_extends2.default)({},this.props,{__source:{fileName:_jsxFileName,lineNumber:98}}));}}]);return Checkbox;}(React.Component);(0,_defineProperty2.default)(Checkbox,\"Item\",_CheckboxItem.default);(0,_defineProperty2.default)(Checkbox,\"Android\",_CheckboxAndroid2.default);(0,_defineProperty2.default)(Checkbox,\"IOS\",_CheckboxIOS2.default);var _default=(0,_theming.withTheme)(Checkbox);exports.default=_default;","map":{"version":3,"sources":["Checkbox.tsx"],"names":["Checkbox","React","Component","CheckboxItem","CheckboxAndroid","CheckboxIOS","Platform"],"mappings":"g4BAAA,GAAA,CAAA,KAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAGA,GAAA,CAAA,aAAA,CAAA,sBAAA,CAAA,OAAA,iBAAA,CAAA,CACA,GAAA,CAAA,iBAAA,CAAA,sBAAA,CAAA,OAAA,qBAAA,CAAA,CAIA,GAAA,CAAA,aAAA,CAAA,sBAAA,CAAA,OAAA,kBAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,OAAA,sBAAA,C,8FA0EMA,GAAAA,CAAAA,Q,yUAUK,CACP,MAAOM,CAAAA,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAAA,KAAAA,CACL,KAAA,CAAA,aAAA,CAAC,aAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAiB,KAAjB,KAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADKA,EACL,CAAA,CAAA,CAAA,CADKA,CAGL,KAAA,CAAA,aAAA,CAAC,iBAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAqB,KAArB,KAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAHF,EAGE,CAAA,CAAA,CAAA,CAHF,C,uBAXmBL,KAAK,CAACC,S,CAAvBF,C,6BAAAA,Q,QAEUG,aAAAA,CAAAA,O,+BAFVH,Q,WAKaI,iBAAAA,CAAAA,O,+BALbJ,Q,OAQSK,aAAAA,CAAAA,O,eAWA,CAAA,EAAA,QAAA,CAAA,SAAA,EAAA,QAAA,C","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CheckboxIOS, { CheckboxIOS as _CheckboxIOS } from './CheckboxIOS';\nimport CheckboxAndroid, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  CheckboxAndroid as _CheckboxAndroid,\n} from './CheckboxAndroid';\nimport CheckboxItem from './CheckboxItem';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     checked: false,\n *   };\n *\n *   render() {\n *     const { checked } = this.state;\n *     return (\n *       <Checkbox\n *         status={checked ? 'checked' : 'unchecked'}\n *         onPress={() => { this.setState({ checked: !checked }); }}\n *       />\n *     );\n *   }\n * }\n * ```\n */\nclass Checkbox extends React.Component<Props> {\n  // @component ./CheckboxItem.tsx\n  static Item = CheckboxItem;\n\n  // @component ./CheckboxAndroid.tsx\n  static Android = CheckboxAndroid;\n\n  // @component ./CheckboxIOS.tsx\n  static IOS = CheckboxIOS;\n\n  render() {\n    return Platform.OS === 'ios' ? (\n      <CheckboxIOS {...this.props} />\n    ) : (\n      <CheckboxAndroid {...this.props} />\n    );\n  }\n}\n\nexport default withTheme(Checkbox);\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import React from'react';import PropTypes from'prop-types';import View from\"react-native-web/dist/exports/View\";import LineChart from\"./components/line-chart\";import ColumnChart from\"./components/column-chart\";import PieChart from\"./components/pie-chart\";var PureChart=function(_React$Component){_inherits(PureChart,_React$Component);function PureChart(props){var _this;_classCallCheck(this,PureChart);_this=_possibleConstructorReturn(this,_getPrototypeOf(PureChart).call(this,props));_this.renderChart=_this.renderChart.bind(_assertThisInitialized(_this));return _this;}_createClass(PureChart,[{key:\"renderChart\",value:function renderChart(){if(this.props.type==='line'){return React.createElement(LineChart,this.props);}else if(this.props.type==='bar'){return React.createElement(ColumnChart,this.props);}else if(this.props.type==='pie'){return React.createElement(PieChart,this.props);}}},{key:\"render\",value:function render(){return React.createElement(View,null,this.renderChart());}}]);return PureChart;}(React.Component);export{PureChart as default};PureChart.propTypes={type:PropTypes.string.isRequired,data:PropTypes.array.isRequired,color:PropTypes.string,height:PropTypes.number,numberOfYAxisGuideLine:PropTypes.number,customValueRenderer:PropTypes.func,backgroundColor:PropTypes.string};PureChart.defaultProps={color:'#297AB1',height:100,numberOfYAxisGuideLine:5,backgroundColor:'#FFFFFF'};","map":{"version":3,"sources":["/home/op-pro/Desktop/Finalyear project/Admin/node_modules/react-native-pure-chart/examples/pure-chart/index.js"],"names":["React","PropTypes","LineChart","ColumnChart","PieChart","PureChart","props","renderChart","bind","type","Component","propTypes","string","isRequired","data","array","color","height","number","numberOfYAxisGuideLine","customValueRenderer","func","backgroundColor","defaultProps"],"mappings":"oaAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,C,qDAGA,MAAOC,CAAAA,SAAP,+BACA,MAAOC,CAAAA,WAAP,iCACA,MAAOC,CAAAA,QAAP,8B,GACqBC,CAAAA,S,kEACnB,mBAAaC,KAAb,CAAoB,2CAClB,2EAAMA,KAAN,GACA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB,CAFkB,aAGnB,C,uEACc,CACb,GAAI,KAAKF,KAAL,CAAWG,IAAX,GAAoB,MAAxB,CAAgC,CAC9B,MAAO,qBAAC,SAAD,CAAe,KAAKH,KAApB,CAAP,CACD,CAFD,IAEO,IAAI,KAAKA,KAAL,CAAWG,IAAX,GAAoB,KAAxB,CAA+B,CACpC,MAAO,qBAAC,WAAD,CAAiB,KAAKH,KAAtB,CAAP,CACD,CAFM,IAEA,IAAI,KAAKA,KAAL,CAAWG,IAAX,GAAoB,KAAxB,CAA+B,CACpC,MAAO,qBAAC,QAAD,CAAc,KAAKH,KAAnB,CAAP,CACD,CACF,C,uCACS,CACR,MACE,qBAAC,IAAD,MACG,KAAKC,WAAL,EADH,CADF,CAKD,C,uBApBoCP,KAAK,CAACU,S,SAAxBL,S,aAuBrBA,SAAS,CAACM,SAAV,CAAsB,CACpBF,IAAI,CAAER,SAAS,CAACW,MAAV,CAAiBC,UADH,CAEpBC,IAAI,CAAEb,SAAS,CAACc,KAAV,CAAgBF,UAFF,CAGpBG,KAAK,CAAEf,SAAS,CAACW,MAHG,CAIpBK,MAAM,CAAEhB,SAAS,CAACiB,MAJE,CAKpBC,sBAAsB,CAAElB,SAAS,CAACiB,MALd,CAMpBE,mBAAmB,CAAEnB,SAAS,CAACoB,IANX,CAOpBC,eAAe,CAAErB,SAAS,CAACW,MAPP,CAAtB,CASAP,SAAS,CAACkB,YAAV,CAAyB,CACvBP,KAAK,CAAE,SADgB,CAEvBC,MAAM,CAAE,GAFe,CAGvBE,sBAAsB,CAAE,CAHD,CAIvBG,eAAe,CAAE,SAJM,CAAzB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {View} from 'react-native'\n\nimport LineChart from './components/line-chart'\nimport ColumnChart from './components/column-chart'\nimport PieChart from './components/pie-chart'\nexport default class PureChart extends React.Component {\n  constructor (props) {\n    super(props)\n    this.renderChart = this.renderChart.bind(this)\n  }\n  renderChart () {\n    if (this.props.type === 'line') {\n      return <LineChart {...this.props} />\n    } else if (this.props.type === 'bar') {\n      return <ColumnChart {...this.props} />\n    } else if (this.props.type === 'pie') {\n      return <PieChart {...this.props} />\n    }\n  }\n  render () {\n    return (\n      <View>\n        {this.renderChart()}\n      </View>\n    )\n  }\n}\n\nPureChart.propTypes = {\n  type: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  color: PropTypes.string,\n  height: PropTypes.number,\n  numberOfYAxisGuideLine: PropTypes.number,\n  customValueRenderer: PropTypes.func,\n  backgroundColor: PropTypes.string\n}\nPureChart.defaultProps = {\n  color: '#297AB1',\n  height: 100,\n  numberOfYAxisGuideLine: 5,\n  backgroundColor: '#FFFFFF'\n}\n"]},"metadata":{},"sourceType":"module"}
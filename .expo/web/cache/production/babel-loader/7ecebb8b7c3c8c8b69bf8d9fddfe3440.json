{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.CardCover=exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _theming=require(\"../../core/theming\");var _colors=require(\"../../styles/colors\");var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Card/CardCover.tsx\";var CardCover=function(_React$Component){(0,_inherits2.default)(CardCover,_React$Component);function CardCover(){(0,_classCallCheck2.default)(this,CardCover);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(CardCover).apply(this,arguments));}(0,_createClass2.default)(CardCover,[{key:\"render\",value:function render(){var _this$props=this.props,index=_this$props.index,total=_this$props.total,style=_this$props.style,theme=_this$props.theme,rest=(0,_objectWithoutProperties2.default)(_this$props,[\"index\",\"total\",\"style\",\"theme\"]);var roundness=theme.roundness;var coverStyle;if(index===0){if(total===1){coverStyle={borderRadius:roundness};}else{coverStyle={borderTopLeftRadius:roundness,borderTopRightRadius:roundness};}}else if(typeof total==='number'&&index===total-1){coverStyle={borderBottomLeftRadius:roundness};}return React.createElement(_reactNative.View,{style:[styles.container,coverStyle,style],__source:{fileName:_jsxFileName,lineNumber:69}},React.createElement(_reactNative.Image,(0,_extends2.default)({},rest,{style:[styles.image,coverStyle],__source:{fileName:_jsxFileName,lineNumber:70}})));}}]);return CardCover;}(React.Component);exports.CardCover=CardCover;(0,_defineProperty2.default)(CardCover,\"displayName\",'Card.Cover');var styles=_reactNative.StyleSheet.create({container:{height:195,backgroundColor:_colors.grey200,overflow:'hidden'},image:{flex:1,height:undefined,width:undefined,padding:16,justifyContent:'flex-end',resizeMode:'cover'}});var _default=(0,_theming.withTheme)(CardCover);exports.default=_default;","map":{"version":3,"sources":["CardCover.tsx"],"names":["CardCover","React","Component","index","total","style","theme","rest","roundness","coverStyle","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","styles","StyleSheet","container","height","backgroundColor","grey200","overflow","image","flex","width","padding","justifyContent","resizeMode"],"mappings":"kgCAAA,GAAA,CAAA,KAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,QAAA,CAAA,OAAA,sBAAA,CACA,GAAA,CAAA,OAAA,CAAA,OAAA,uBAAA,C,2FAsCMA,GAAAA,CAAAA,S,8UAGK,CAAA,GAAA,CAAA,WAAA,CACyC,KADzC,KAAA,CACCG,KADD,CAAA,WAAA,CAAA,KAAA,CACQC,KADR,CAAA,WAAA,CAAA,KAAA,CACeC,KADf,CAAA,WAAA,CAAA,KAAA,CACsBC,KADtB,CAAA,WAAA,CAAA,KAAA,CACgCC,IADhC,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,WAAA,CAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA,GAECC,CAAAA,SAFD,CAEeF,KAFf,CAAA,SAAA,CAIP,GAAA,CAAA,UAAA,CAEA,GAAIH,KAAK,GAAT,CAAA,CAAiB,CACf,GAAIC,KAAK,GAAT,CAAA,CAAiB,CACfK,UAAU,CAAG,CACXC,YAAY,CADdD,SAAa,CAAbA,CADF,CAAA,IAIO,CACLA,UAAU,CAAG,CACXE,mBAAmB,CADR,SAAA,CAEXC,oBAAoB,CAFtBH,SAAa,CAAbA,CAKH,CAXD,CAAA,IAWO,IAAI,MAAA,CAAA,KAAA,GAAA,QAAA,EAA6BN,KAAK,GAAKC,KAAK,CAAhD,CAAA,CAAsD,CAC3DK,UAAU,CAAG,CACXI,sBAAsB,CADxBJ,SAAa,CAAbA,CAKF,OACE,CAAA,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CAAM,KAAK,CAAE,CAACK,MAAM,CAAP,SAAA,CAAA,UAAA,CAAb,KAAa,CAAb,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,KAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,IAAA,CAAA,CAAiB,KAAK,CAAE,CAACA,MAAM,CAAP,KAAA,CAAxB,UAAwB,CAAxB,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAFJ,EAEI,CAAA,CAAA,CAAA,CADF,CADF,C,wBA1BoBb,KAAK,CAACC,S,CAAxBF,C,yDAAAA,S,eACiB,Y,EAiCvB,GAAMc,CAAAA,MAAM,CAAGC,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,MAAM,CADG,GAAA,CAETC,eAAe,CAAEC,OAAAA,CAFR,OAAA,CAGTC,QAAQ,CAJqB,QACpB,CADoB,CAM/BC,KAAK,CAAE,CACLC,IAAI,CADC,CAAA,CAELL,MAAM,CAFD,SAAA,CAGLM,KAAK,CAHA,SAAA,CAILC,OAAO,CAJF,EAAA,CAKLC,cAAc,CALT,UAAA,CAMLC,UAAU,CAZd,OAMS,CANwB,CAAlBX,CAAf,C,aAgBe,CAAA,EAAA,QAAA,CAAA,SAAA,EAAA,SAAA,C","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Image, StyleProp } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { grey200 } from '../../styles/colors';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentPropsWithRef<typeof Image> & {\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component to show a cover image inside a Card.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Image props https://facebook.github.io/react-native/docs/image.html#props\n */\nclass CardCover extends React.Component<Props> {\n  static displayName = 'Card.Cover';\n\n  render() {\n    const { index, total, style, theme, ...rest } = this.props;\n    const { roundness } = theme;\n\n    let coverStyle;\n\n    if (index === 0) {\n      if (total === 1) {\n        coverStyle = {\n          borderRadius: roundness,\n        };\n      } else {\n        coverStyle = {\n          borderTopLeftRadius: roundness,\n          borderTopRightRadius: roundness,\n        };\n      }\n    } else if (typeof total === 'number' && index === total - 1) {\n      coverStyle = {\n        borderBottomLeftRadius: roundness,\n      };\n    }\n\n    return (\n      <View style={[styles.container, coverStyle, style]}>\n        <Image {...rest} style={[styles.image, coverStyle]} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden',\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end',\n    resizeMode: 'cover',\n  },\n});\n\nexport default withTheme(CardCover);\n\n// @component-docs ignore-next-line\nexport { CardCover };\n"]},"metadata":{},"sourceType":"script"}
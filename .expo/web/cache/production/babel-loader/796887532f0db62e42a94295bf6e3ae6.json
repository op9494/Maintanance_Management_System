{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import React from'react';import View from\"react-native-web/dist/exports/View\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import Text from\"react-native-web/dist/exports/Text\";import Animated from\"react-native-web/dist/exports/Animated\";import Easing from\"react-native-web/dist/exports/Easing\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{initData,drawYAxis,drawGuideLine,drawYAxisLabels,numberWithCommas,drawXAxis,drawXAxisLabels}from\"../common\";var LineChart=function(_React$Component){_inherits(LineChart,_React$Component);function LineChart(props){var _this;_classCallCheck(this,LineChart);_this=_possibleConstructorReturn(this,_getPrototypeOf(LineChart).call(this,props));var newState=initData(_this.props.data,_this.props.height,_this.props.gap,_this.props.numberOfYAxisGuideLine);_this.state={loading:false,sortedData:newState.sortedData,selectedIndex:null,nowHeight:200,nowWidth:200,scrollPosition:0,nowX:0,nowY:0,max:newState.max,fadeAnim:new Animated.Value(0),guideArray:newState.guideArray};_this.drawCoordinates=_this.drawCoordinates.bind(_assertThisInitialized(_this));_this.drawCoordinate=_this.drawCoordinate.bind(_assertThisInitialized(_this));_this.drawSelected=_this.drawSelected.bind(_assertThisInitialized(_this));return _this;}_createClass(LineChart,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(nextState.sortedData!==this.state.sortedData||nextState.selectedIndex!==this.state.selectedIndex||nextState.scrollPosition!==this.state.scrollPosition){return true;}else{return false;}}},{key:\"componentDidMount\",value:function componentDidMount(){Animated.timing(this.state.fadeAnim,{toValue:1,easing:Easing.bounce,duration:1000,useNativeDriver:true}).start();}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){var _this2=this;if(nextProps.data!==this.props.data){this.setState(_extends({fadeAnim:new Animated.Value(0)},initData(nextProps.data,this.props.height,this.props.gap,this.props.numberOfYAxisGuideLine)),function(){Animated.timing(_this2.state.fadeAnim,{toValue:1,easing:Easing.bounce,duration:1000,useNativeDriver:true}).start();});}}},{key:\"getTransform\",value:function getTransform(rad,width){var x=(0-width/2)*Math.cos(rad)-(0-width/2)*Math.sin(rad);var y=(0-width/2)*Math.sin(rad)+(0-width/2)*Math.cos(rad);return[{translateX:-1*x-width/2},{translateY:-1*y+width/2},{rotate:rad+'rad'}];}},{key:\"drawCoordinate\",value:function drawCoordinate(index,start,end,backgroundColor,lineStyle,isBlank,lastCoordinate,seriesIndex){var _this3=this;var key='line'+index;var dx=end.gap-start.gap;var dy=end.ratioY-start.ratioY;var size=Math.sqrt(dx*dx+dy*dy);var angleRad=-1*Math.atan2(dy,dx);var height;var top;var topMargin=20;if(start.ratioY>end.ratioY){height=start.ratioY;top=-1*size;}else{height=end.ratioY;top=-1*(size-Math.abs(dy));}return React.createElement(View,{key:key,style:{height:this.props.height+topMargin,justifyContent:'flex-end'}},React.createElement(View,{style:StyleSheet.flatten([{width:dx,height:height,marginTop:topMargin},styles.coordinateWrapper])},React.createElement(View,{style:StyleSheet.flatten([{top:top,width:size,height:size,borderColor:isBlank?backgroundColor:this.props.primaryColor,borderTopWidth:1,transform:this.getTransform(angleRad,size)},styles.lineBox,lineStyle])}),React.createElement(View,{style:StyleSheet.flatten([styles.absolute,{height:height-Math.abs(dy)-2,backgroundColor:lastCoordinate?'#FFFFFF00':backgroundColor,marginTop:Math.abs(dy)+2}])})),!lastCoordinate&&seriesIndex===0?React.createElement(View,{style:StyleSheet.flatten([styles.guideLine,{width:dx,borderRightColor:this.props.xAxisGridLineColor}])}):null,seriesIndex===this.state.sortedData.length-1&&React.createElement(TouchableWithoutFeedback,{onPress:function onPress(){var selectedIndex=lastCoordinate?index-1:index;var emptyCount=0;_this3.state.sortedData.map(function(series){if(series.data[selectedIndex].isEmpty)emptyCount++;});if(emptyCount===_this3.state.sortedData.length){return null;}_this3.setState({selectedIndex:selectedIndex},function(){if(typeof _this3.props.onPress==='function'){_this3.props.onPress(selectedIndex);}});}},React.createElement(View,{style:{width:dx,height:'100%',position:'absolute',marginLeft:-1*dx/2,backgroundColor:'#FFFFFF01'}})));}},{key:\"drawPoint\",value:function drawPoint(index,point,seriesColor){var _this4=this;var key='point'+index;var size=8;var color=!seriesColor?this.props.primaryColor:seriesColor;if(this.state.selectedIndex===index){color=this.props.selectedColor;}if(point.isEmpty||this.props.hidePoints)return null;return React.createElement(TouchableWithoutFeedback,{key:key,onPress:function onPress(){_this4.setState({selectedIndex:index});}},React.createElement(View,{style:StyleSheet.flatten([styles.pointWrapper,{width:size,height:size,left:point.gap-size/2,bottom:point.ratioY-size/2,borderColor:color,backgroundColor:color}])}));}},{key:\"drawValue\",value:function drawValue(index,point){var key='pointvalue'+index;var size=200;return React.createElement(View,{key:key,style:{position:'absolute',left:index===0?point.gap:point.gap-size/2,bottom:point.ratioY+10,backgroundColor:'transparent',width:index!==0?200:undefined}},this.drawCustomValue(index,point));}},{key:\"drawCustomValue\",value:function drawCustomValue(index,point){if(this.props.customValueRenderer){return this.props.customValueRenderer(index,point);}else{return null;}}},{key:\"drawCoordinates\",value:function drawCoordinates(data,seriesColor,seriesIndex){var result=[];var lineStyle={borderColor:!seriesColor?this.props.primaryColor:seriesColor};var dataLength=data.length;for(var i=0;i<dataLength-1;i++){result.push(this.drawCoordinate(i,data[i],data[i+1],'#FFFFFF00',lineStyle,false,false,seriesIndex));}if(dataLength>0){result.push(this.drawPoint(0,data[0],seriesColor));result.push(this.drawValue(0,data[0],seriesColor));}for(var _i=0;_i<dataLength-1;_i++){result.push(this.drawPoint(_i+1,data[_i+1],seriesColor));result.push(this.drawValue(_i+1,data[_i+1],seriesColor));}var lastData=_extends({},data[dataLength-1]);var lastCoordinate=_extends({},data[dataLength-1]);lastCoordinate.gap=lastCoordinate.gap+this.props.gap;result.push(this.drawCoordinate(dataLength,lastData,lastCoordinate,'#FFFFFF',{},true,true,seriesIndex));return result;}},{key:\"getDistance\",value:function getDistance(p1,p2){return Math.sqrt(Math.pow(p1[0]-p2[0],2)+Math.pow(p1[1]-p2[1],2));}},{key:\"drawSelected\",value:function drawSelected(index){var _this5=this;if(this.state.sortedData.length===0)return null;var data=this.state.sortedData[0].data;var dataObject=data[index];if(typeof this.state.selectedIndex==='number'&&this.state.selectedIndex>=0){if(!dataObject){return null;}var reverse=true;var bottom=dataObject.ratioY;var left=dataObject.gap;var gap=0;if(index===data.length-1&&index!==0){left=data[index-1].gap;gap=dataObject.gap-left;}if(bottom>this.props.height*2/3){reverse=false;}return React.createElement(View,{style:StyleSheet.flatten([styles.selectedWrapper,{left:left,justifyContent:'center'}])},React.createElement(View,{style:StyleSheet.flatten([styles.selectedLine,{backgroundColor:this.props.selectedColor,marginLeft:gap}])}),React.createElement(View,{style:StyleSheet.flatten([styles.selectedBox])},this.state.sortedData.map(function(series){var dataObject=series.data[_this5.state.selectedIndex];return React.createElement(View,{key:series.seriesName},dataObject.x?React.createElement(Text,{style:styles.tooltipTitle},dataObject.x):null,React.createElement(View,{style:{flexDirection:'row',paddingLeft:5,alignItems:'center'}},React.createElement(View,{style:{width:10,height:5,marginRight:3,borderRadius:2,backgroundColor:!series.seriesColor?_this5.props.primaryColor:series.seriesColor}}),React.createElement(Text,{style:styles.tooltipValue},numberWithCommas(dataObject.y,false))));})));}else{return null;}}},{key:\"render\",value:function render(){var _this6=this;var fadeAnim=this.state.fadeAnim;return this.state.sortedData.length>0?React.createElement(View,{style:StyleSheet.flatten([styles.wrapper,{backgroundColor:this.props.backgroundColor}])},React.createElement(View,{style:styles.yAxisLabelsWrapper},drawYAxisLabels(this.state.guideArray,this.props.height+20,this.props.minValue,this.props.labelColor)),React.createElement(View,null,React.createElement(ScrollView,{horizontal:true},React.createElement(View,null,React.createElement(View,{ref:\"chartView\",style:styles.chartViewWrapper},drawYAxis(this.props.yAxisColor),drawGuideLine(this.state.guideArray,this.props.yAxisGridLineColor),this.state.sortedData.map(function(obj,index){return React.createElement(Animated.View,{key:'animated_'+index,style:{transform:[{scaleY:fadeAnim}],flexDirection:'row',alignItems:'flex-end',height:'100%',position:index===0?'relative':'absolute',minWidth:200,marginBottom:_this6.props.minValue&&_this6.state.guideArray&&_this6.state.guideArray.length>0?-1*_this6.state.guideArray[0][2]*_this6.props.minValue:null}},_this6.drawCoordinates(obj.data,obj.seriesColor,index));}),this.drawSelected(this.state.selectedIndex)),drawXAxis(this.props.xAxisColor),drawXAxisLabels(this.state.sortedData[0].data,this.props.gap,this.props.labelColor,this.props.showEvenNumberXaxisLabel))))):null;}}]);return LineChart;}(React.Component);LineChart.defaultProps={data:[],primaryColor:'#297AB1',selectedColor:'#FF0000',height:100,gap:60,showEvenNumberXaxisLabel:true,onPointClick:function onPointClick(point){},numberOfYAxisGuideLine:5};var styles=StyleSheet.create({wrapper:{flexDirection:'row',overflow:'hidden'},yAxisLabelsWrapper:{paddingRight:5},chartViewWrapper:{flexDirection:'row',alignItems:'flex-end',margin:0,paddingRight:0,overflow:'hidden'},coordinateWrapper:{overflow:'hidden',justifyContent:'flex-start',alignContent:'flex-start'},lineBox:{overflow:'hidden',justifyContent:'flex-start'},guideLine:{position:'absolute',height:'100%',borderRightColor:'#e0e0e050',borderRightWidth:1},absolute:{position:'absolute',width:'100%'},pointWrapper:{position:'absolute',borderRadius:10,borderWidth:1},selectedWrapper:{position:'absolute',height:'100%',alignItems:'flex-start'},selectedLine:{position:'absolute',width:1,height:'100%'},selectedBox:{backgroundColor:'#FFFFFF',borderRadius:5,opacity:0.8,borderColor:'#AAAAAA',borderWidth:1,position:'absolute',padding:3,marginLeft:5,justifyContent:'center'},tooltipTitle:{fontSize:10},tooltipValue:{fontWeight:'bold',fontSize:15}});export default LineChart;","map":{"version":3,"sources":["/home/op-pro/Desktop/Finalyear project/Admin/node_modules/react-native-pure-chart/examples/pure-chart/components/line-chart.js"],"names":["React","initData","drawYAxis","drawGuideLine","drawYAxisLabels","numberWithCommas","drawXAxis","drawXAxisLabels","LineChart","props","newState","data","height","gap","numberOfYAxisGuideLine","state","loading","sortedData","selectedIndex","nowHeight","nowWidth","scrollPosition","nowX","nowY","max","fadeAnim","Animated","Value","guideArray","drawCoordinates","bind","drawCoordinate","drawSelected","nextProps","nextState","timing","toValue","easing","Easing","bounce","duration","useNativeDriver","start","setState","rad","width","x","Math","cos","sin","y","translateX","translateY","rotate","index","end","backgroundColor","lineStyle","isBlank","lastCoordinate","seriesIndex","key","dx","dy","ratioY","size","sqrt","angleRad","atan2","top","topMargin","abs","justifyContent","StyleSheet","flatten","marginTop","styles","coordinateWrapper","borderColor","primaryColor","borderTopWidth","transform","getTransform","lineBox","absolute","guideLine","borderRightColor","xAxisGridLineColor","length","emptyCount","map","series","isEmpty","onPress","position","marginLeft","point","seriesColor","color","selectedColor","hidePoints","pointWrapper","left","bottom","undefined","drawCustomValue","customValueRenderer","result","dataLength","i","push","drawPoint","drawValue","lastData","p1","p2","pow","dataObject","reverse","selectedWrapper","selectedLine","selectedBox","seriesName","tooltipTitle","flexDirection","paddingLeft","alignItems","marginRight","borderRadius","tooltipValue","wrapper","yAxisLabelsWrapper","minValue","labelColor","chartViewWrapper","yAxisColor","yAxisGridLineColor","obj","scaleY","minWidth","marginBottom","xAxisColor","showEvenNumberXaxisLabel","Component","defaultProps","onPointClick","create","overflow","paddingRight","margin","alignContent","borderRightWidth","borderWidth","opacity","padding","fontSize","fontWeight"],"mappings":"ydAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,+bAEA,OAAQC,QAAR,CAAkBC,SAAlB,CAA6BC,aAA7B,CAA4CC,eAA5C,CAA6DC,gBAA7D,CAA+EC,SAA/E,CAA0FC,eAA1F,iB,GAEMC,CAAAA,S,kEACJ,mBAAaC,KAAb,CAAoB,2CAClB,2EAAMA,KAAN,GACA,GAAIC,CAAAA,QAAQ,CAAGT,QAAQ,CAAC,MAAKQ,KAAL,CAAWE,IAAZ,CAAkB,MAAKF,KAAL,CAAWG,MAA7B,CAAqC,MAAKH,KAAL,CAAWI,GAAhD,CAAqD,MAAKJ,KAAL,CAAWK,sBAAhE,CAAvB,CACA,MAAKC,KAAL,CAAa,CACXC,OAAO,CAAE,KADE,CAEXC,UAAU,CAAEP,QAAQ,CAACO,UAFV,CAGXC,aAAa,CAAE,IAHJ,CAIXC,SAAS,CAAE,GAJA,CAKXC,QAAQ,CAAE,GALC,CAMXC,cAAc,CAAE,CANL,CAOXC,IAAI,CAAE,CAPK,CAQXC,IAAI,CAAE,CARK,CASXC,GAAG,CAAEd,QAAQ,CAACc,GATH,CAUXC,QAAQ,CAAE,GAAIC,CAAAA,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAVC,CAWXC,UAAU,CAAElB,QAAQ,CAACkB,UAXV,CAAb,CAcA,MAAKC,eAAL,CAAuB,MAAKA,eAAL,CAAqBC,IAArB,+BAAvB,CACA,MAAKC,cAAL,CAAsB,MAAKA,cAAL,CAAoBD,IAApB,+BAAtB,CACA,MAAKE,YAAL,CAAoB,MAAKA,YAAL,CAAkBF,IAAlB,+BAApB,CAnBkB,aAoBnB,C,0FAEsBG,S,CAAWC,S,CAAW,CAC3C,GAAIA,SAAS,CAACjB,UAAV,GAAyB,KAAKF,KAAL,CAAWE,UAApC,EACFiB,SAAS,CAAChB,aAAV,GAA4B,KAAKH,KAAL,CAAWG,aADrC,EAEFgB,SAAS,CAACb,cAAV,GAA6B,KAAKN,KAAL,CAAWM,cAF1C,CAE0D,CACxD,MAAO,KAAP,CACD,CAJD,IAIO,CACL,MAAO,MAAP,CACD,CACF,C,6DAEoB,CACnBK,QAAQ,CAACS,MAAT,CAAgB,KAAKpB,KAAL,CAAWU,QAA3B,CAAqC,CAAEW,OAAO,CAAE,CAAX,CAAcC,MAAM,CAAEC,MAAM,CAACC,MAA7B,CAAqCC,QAAQ,CAAE,IAA/C,CAAqDC,eAAe,CAAE,IAAtE,CAArC,EAAmHC,KAAnH,GACD,C,4EAE0BT,S,CAAW,iBACpC,GAAIA,SAAS,CAACtB,IAAV,GAAmB,KAAKF,KAAL,CAAWE,IAAlC,CAAwC,CACtC,KAAKgC,QAAL,CAAc,SAAc,CAC1BlB,QAAQ,CAAE,GAAIC,CAAAA,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CADgB,CAAd,CAEX1B,QAAQ,CAACgC,SAAS,CAACtB,IAAX,CAAiB,KAAKF,KAAL,CAAWG,MAA5B,CAAoC,KAAKH,KAAL,CAAWI,GAA/C,CAAoD,KAAKJ,KAAL,CAAWK,sBAA/D,CAFG,CAAd,CAEoG,UAAM,CACxGY,QAAQ,CAACS,MAAT,CAAgB,MAAI,CAACpB,KAAL,CAAWU,QAA3B,CAAqC,CAAEW,OAAO,CAAE,CAAX,CAAcC,MAAM,CAAEC,MAAM,CAACC,MAA7B,CAAqCC,QAAQ,CAAE,IAA/C,CAAqDC,eAAe,CAAE,IAAtE,CAArC,EAAmHC,KAAnH,GACD,CAJD,EAKD,CACF,C,kDAEaE,G,CAAKC,K,CAAO,CACxB,GAAIC,CAAAA,CAAC,CAAG,CAAC,EAAID,KAAK,CAAG,CAAb,EAAkBE,IAAI,CAACC,GAAL,CAASJ,GAAT,CAAlB,CAAkC,CAAC,EAAIC,KAAK,CAAG,CAAb,EAAkBE,IAAI,CAACE,GAAL,CAASL,GAAT,CAA5D,CACA,GAAIM,CAAAA,CAAC,CAAG,CAAC,EAAIL,KAAK,CAAG,CAAb,EAAkBE,IAAI,CAACE,GAAL,CAASL,GAAT,CAAlB,CAAkC,CAAC,EAAIC,KAAK,CAAG,CAAb,EAAkBE,IAAI,CAACC,GAAL,CAASJ,GAAT,CAA5D,CAEA,MAAO,CAAE,CAACO,UAAU,CAAG,CAAC,CAAD,CAAKL,CAAN,CAAWD,KAAK,CAAG,CAAhC,CAAF,CAAsC,CAACO,UAAU,CAAG,CAAC,CAAD,CAAKF,CAAN,CAAWL,KAAK,CAAG,CAAhC,CAAtC,CAA0E,CAAEQ,MAAM,CAAET,GAAG,CAAG,KAAhB,CAA1E,CAAP,CACD,C,sDAEeU,K,CAAOZ,K,CAAOa,G,CAAKC,e,CAAiBC,S,CAAWC,O,CAASC,c,CAAgBC,W,CAAa,iBACnG,GAAIC,CAAAA,GAAG,CAAG,OAASP,KAAnB,CACA,GAAIQ,CAAAA,EAAE,CAAGP,GAAG,CAAC1C,GAAJ,CAAU6B,KAAK,CAAC7B,GAAzB,CACA,GAAIkD,CAAAA,EAAE,CAAGR,GAAG,CAACS,MAAJ,CAAatB,KAAK,CAACsB,MAA5B,CACA,GAAIC,CAAAA,IAAI,CAAGlB,IAAI,CAACmB,IAAL,CAAUJ,EAAE,CAAGA,EAAL,CAAUC,EAAE,CAAGA,EAAzB,CAAX,CACA,GAAII,CAAAA,QAAQ,CAAG,CAAC,CAAD,CAAKpB,IAAI,CAACqB,KAAL,CAAWL,EAAX,CAAeD,EAAf,CAApB,CACA,GAAIlD,CAAAA,MAAJ,CACA,GAAIyD,CAAAA,GAAJ,CACA,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CAEA,GAAI5B,KAAK,CAACsB,MAAN,CAAeT,GAAG,CAACS,MAAvB,CAA+B,CAC7BpD,MAAM,CAAG8B,KAAK,CAACsB,MAAf,CACAK,GAAG,CAAG,CAAC,CAAD,CAAKJ,IAAX,CACD,CAHD,IAGO,CACLrD,MAAM,CAAG2C,GAAG,CAACS,MAAb,CACAK,GAAG,CAAG,CAAC,CAAD,EAAMJ,IAAI,CAAGlB,IAAI,CAACwB,GAAL,CAASR,EAAT,CAAb,CAAN,CACD,CAED,MACE,qBAAC,IAAD,EAAM,GAAG,CAAEF,GAAX,CAAgB,KAAK,CAAE,CACrBjD,MAAM,CAAE,KAAKH,KAAL,CAAWG,MAAX,CAAoB0D,SADP,CAErBE,cAAc,CAAE,UAFK,CAAvB,EAKE,oBAAC,IAAD,EAAM,KAAK,CAAEC,UAAU,CAACC,OAAX,CAAmB,CAAC,CAC/B7B,KAAK,CAAEiB,EADwB,CAE/BlD,MAAM,CAAEA,MAFuB,CAG/B+D,SAAS,CAAEL,SAHoB,CAAD,CAI7BM,MAAM,CAACC,iBAJsB,CAAnB,CAAb,EAKE,oBAAC,IAAD,EAAM,KAAK,CAAEJ,UAAU,CAACC,OAAX,CAAmB,CAAC,CAC/BL,GAAG,CAAEA,GAD0B,CAE/BxB,KAAK,CAAEoB,IAFwB,CAG/BrD,MAAM,CAAEqD,IAHuB,CAI/Ba,WAAW,CAAEpB,OAAO,CAAGF,eAAH,CAAqB,KAAK/C,KAAL,CAAWsE,YAJrB,CAK/BC,cAAc,CAAE,CALe,CAM/BC,SAAS,CAAE,KAAKC,YAAL,CAAkBf,QAAlB,CAA4BF,IAA5B,CANoB,CAAD,CAO7BW,MAAM,CAACO,OAPsB,CAOb1B,SAPa,CAAnB,CAAb,EALF,CAaE,oBAAC,IAAD,EAAM,KAAK,CAAEgB,UAAU,CAACC,OAAX,CAAmB,CAACE,MAAM,CAACQ,QAAR,CAAkB,CAChDxE,MAAM,CAAEA,MAAM,CAAGmC,IAAI,CAACwB,GAAL,CAASR,EAAT,CAAT,CAAwB,CADgB,CAEhDP,eAAe,CAAEG,cAAc,CAAG,WAAH,CAAiBH,eAFA,CAGhDmB,SAAS,CAAE5B,IAAI,CAACwB,GAAL,CAASR,EAAT,EAAe,CAHsB,CAAlB,CAAnB,CAAb,EAbF,CALF,CAwBG,CAACJ,cAAD,EAAmBC,WAAW,GAAK,CAAnC,CACC,oBAAC,IAAD,EAAM,KAAK,CAAEa,UAAU,CAACC,OAAX,CAAmB,CAACE,MAAM,CAACS,SAAR,CAAmB,CACjDxC,KAAK,CAAEiB,EAD0C,CAEjDwB,gBAAgB,CAAE,KAAK7E,KAAL,CAAW8E,kBAFoB,CAAnB,CAAnB,CAAb,EADD,CAKG,IA7BN,CA8BG3B,WAAW,GAAK,KAAK7C,KAAL,CAAWE,UAAX,CAAsBuE,MAAtB,CAA+B,CAA/C,EACC,oBAAC,wBAAD,EAA0B,OAAO,CAAE,kBAAM,CACvC,GAAItE,CAAAA,aAAa,CAAGyC,cAAc,CAAGL,KAAK,CAAG,CAAX,CAAeA,KAAjD,CAEA,GAAImC,CAAAA,UAAU,CAAG,CAAjB,CACA,MAAI,CAAC1E,KAAL,CAAWE,UAAX,CAAsByE,GAAtB,CAA0B,SAACC,MAAD,CAAY,CACpC,GAAIA,MAAM,CAAChF,IAAP,CAAYO,aAAZ,EAA2B0E,OAA/B,CAAwCH,UAAU,GACnD,CAFD,EAGA,GAAIA,UAAU,GAAK,MAAI,CAAC1E,KAAL,CAAWE,UAAX,CAAsBuE,MAAzC,CAAiD,CAC/C,MAAO,KAAP,CACD,CAGD,MAAI,CAAC7C,QAAL,CAAc,CACZzB,aAAa,CAAEA,aADH,CAAd,CAEG,UAAM,CACP,GAAI,MAAO,CAAA,MAAI,CAACT,KAAL,CAAWoF,OAAlB,GAA8B,UAAlC,CAA8C,CAC5C,MAAI,CAACpF,KAAL,CAAWoF,OAAX,CAAmB3E,aAAnB,EACD,CACF,CAND,EAOD,CAnBD,EAoBE,oBAAC,IAAD,EAAM,KAAK,CAAE,CACX2B,KAAK,CAAEiB,EADI,CAEXlD,MAAM,CAAE,MAFG,CAGXkF,QAAQ,CAAE,UAHC,CAIXC,UAAU,CAAE,CAAC,CAAD,CAAKjC,EAAL,CAAU,CAJX,CAKXN,eAAe,CAAE,WALN,CAAb,EApBF,CA/BJ,CADF,CAgED,C,4CAEUF,K,CAAO0C,K,CAAOC,W,CAAa,iBACpC,GAAIpC,CAAAA,GAAG,CAAG,QAAUP,KAApB,CACA,GAAIW,CAAAA,IAAI,CAAG,CAAX,CACA,GAAIiC,CAAAA,KAAK,CAAG,CAACD,WAAD,CAAe,KAAKxF,KAAL,CAAWsE,YAA1B,CAAyCkB,WAArD,CACA,GAAI,KAAKlF,KAAL,CAAWG,aAAX,GAA6BoC,KAAjC,CAAwC,CACtC4C,KAAK,CAAG,KAAKzF,KAAL,CAAW0F,aAAnB,CACD,CAED,GAAIH,KAAK,CAACJ,OAAN,EAAiB,KAAKnF,KAAL,CAAW2F,UAAhC,CAA4C,MAAO,KAAP,CAE5C,MACE,qBAAC,wBAAD,EAA0B,GAAG,CAAEvC,GAA/B,CAAoC,OAAO,CAAE,kBAAM,CACjD,MAAI,CAAClB,QAAL,CAAc,CAACzB,aAAa,CAAEoC,KAAhB,CAAd,EACD,CAFD,EAIE,oBAAC,IAAD,EAAM,KAAK,CAAEmB,UAAU,CAACC,OAAX,CAAmB,CAACE,MAAM,CAACyB,YAAR,CAAsB,CACpDxD,KAAK,CAAEoB,IAD6C,CAEpDrD,MAAM,CAAEqD,IAF4C,CAIpDqC,IAAI,CAAEN,KAAK,CAACnF,GAAN,CAAYoD,IAAI,CAAG,CAJ2B,CAKpDsC,MAAM,CAAEP,KAAK,CAAChC,MAAN,CAAeC,IAAI,CAAG,CALsB,CAOpDa,WAAW,CAAEoB,KAPuC,CAQpD1C,eAAe,CAAE0C,KARmC,CAAtB,CAAnB,CAAb,EAJF,CADF,CAkBD,C,4CACU5C,K,CAAO0C,K,CAAO,CACvB,GAAInC,CAAAA,GAAG,CAAG,aAAeP,KAAzB,CACA,GAAIW,CAAAA,IAAI,CAAG,GAAX,CACA,MAEE,qBAAC,IAAD,EAAM,GAAG,CAAEJ,GAAX,CAAgB,KAAK,CAAE,CACrBiC,QAAQ,CAAE,UADW,CAErBQ,IAAI,CAAEhD,KAAK,GAAK,CAAV,CAAc0C,KAAK,CAACnF,GAApB,CAA0BmF,KAAK,CAACnF,GAAN,CAAYoD,IAAI,CAAG,CAF9B,CAGrBsC,MAAM,CAAEP,KAAK,CAAChC,MAAN,CAAe,EAHF,CAIrBR,eAAe,CAAE,aAJI,CAKrBX,KAAK,CAAES,KAAK,GAAK,CAAV,CAAc,GAAd,CAAoBkD,SALN,CAAvB,EAQG,KAAKC,eAAL,CAAqBnD,KAArB,CAA4B0C,KAA5B,CARH,CAFF,CAeD,C,wDAEgB1C,K,CAAO0C,K,CAAO,CAC7B,GAAI,KAAKvF,KAAL,CAAWiG,mBAAf,CAAoC,CAClC,MAAO,MAAKjG,KAAL,CAAWiG,mBAAX,CAA+BpD,KAA/B,CAAsC0C,KAAtC,CAAP,CACD,CAFD,IAEO,CACL,MAAO,KAAP,CACD,CACF,C,wDAEgBrF,I,CAAMsF,W,CAAarC,W,CAAa,CAC/C,GAAI+C,CAAAA,MAAM,CAAG,EAAb,CACA,GAAIlD,CAAAA,SAAS,CAAG,CACdqB,WAAW,CAAE,CAACmB,WAAD,CAAe,KAAKxF,KAAL,CAAWsE,YAA1B,CAAyCkB,WADxC,CAAhB,CAGA,GAAIW,CAAAA,UAAU,CAAGjG,IAAI,CAAC6E,MAAtB,CAEA,IAAK,GAAIqB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,UAAU,CAAG,CAAjC,CAAoCC,CAAC,EAArC,CAAyC,CACvCF,MAAM,CAACG,IAAP,CAAY,KAAK/E,cAAL,CAAoB8E,CAApB,CAAuBlG,IAAI,CAACkG,CAAD,CAA3B,CAAgClG,IAAI,CAACkG,CAAC,CAAG,CAAL,CAApC,CAA6C,WAA7C,CAA0DpD,SAA1D,CAAqE,KAArE,CAA4E,KAA5E,CAAmFG,WAAnF,CAAZ,EACD,CAED,GAAIgD,UAAU,CAAG,CAAjB,CAAoB,CAClBD,MAAM,CAACG,IAAP,CAAY,KAAKC,SAAL,CAAe,CAAf,CAAkBpG,IAAI,CAAC,CAAD,CAAtB,CAA2BsF,WAA3B,CAAZ,EACAU,MAAM,CAACG,IAAP,CAAY,KAAKE,SAAL,CAAe,CAAf,CAAkBrG,IAAI,CAAC,CAAD,CAAtB,CAA2BsF,WAA3B,CAAZ,EACD,CAED,IAAK,GAAIY,CAAAA,EAAC,CAAG,CAAb,CAAgBA,EAAC,CAAGD,UAAU,CAAG,CAAjC,CAAoCC,EAAC,EAArC,CAAyC,CACvCF,MAAM,CAACG,IAAP,CAAY,KAAKC,SAAL,CAAgBF,EAAC,CAAG,CAApB,CAAwBlG,IAAI,CAACkG,EAAC,CAAG,CAAL,CAA5B,CAAqCZ,WAArC,CAAZ,EACAU,MAAM,CAACG,IAAP,CAAY,KAAKE,SAAL,CAAgBH,EAAC,CAAG,CAApB,CAAwBlG,IAAI,CAACkG,EAAC,CAAG,CAAL,CAA5B,CAAqCZ,WAArC,CAAZ,EACD,CAED,GAAIgB,CAAAA,QAAQ,CAAG,SAAc,EAAd,CAAkBtG,IAAI,CAACiG,UAAU,CAAG,CAAd,CAAtB,CAAf,CACA,GAAIjD,CAAAA,cAAc,CAAG,SAAc,EAAd,CAAkBhD,IAAI,CAACiG,UAAU,CAAG,CAAd,CAAtB,CAArB,CACAjD,cAAc,CAAC9C,GAAf,CAAqB8C,cAAc,CAAC9C,GAAf,CAAqB,KAAKJ,KAAL,CAAWI,GAArD,CACA8F,MAAM,CAACG,IAAP,CAAY,KAAK/E,cAAL,CAAqB6E,UAArB,CAAkCK,QAAlC,CAA4CtD,cAA5C,CAA4D,SAA5D,CAAuE,EAAvE,CAA2E,IAA3E,CAAiF,IAAjF,CAAuFC,WAAvF,CAAZ,EAEA,MAAO+C,CAAAA,MAAP,CACD,C,gDAEYO,E,CAAIC,E,CAAI,CACnB,MAAOpE,CAAAA,IAAI,CAACmB,IAAL,CAAUnB,IAAI,CAACqE,GAAL,CAASF,EAAE,CAAC,CAAD,CAAF,CAAQC,EAAE,CAAC,CAAD,CAAnB,CAAwB,CAAxB,EAA6BpE,IAAI,CAACqE,GAAL,CAASF,EAAE,CAAC,CAAD,CAAF,CAAQC,EAAE,CAAC,CAAD,CAAnB,CAAwB,CAAxB,CAAvC,CAAP,CACD,C,kDAEa7D,K,CAAO,iBACnB,GAAI,KAAKvC,KAAL,CAAWE,UAAX,CAAsBuE,MAAtB,GAAiC,CAArC,CAAwC,MAAO,KAAP,CACxC,GAAI7E,CAAAA,IAAI,CAAG,KAAKI,KAAL,CAAWE,UAAX,CAAsB,CAAtB,EAAyBN,IAApC,CACA,GAAI0G,CAAAA,UAAU,CAAG1G,IAAI,CAAC2C,KAAD,CAArB,CACA,GAAI,MAAQ,MAAKvC,KAAL,CAAWG,aAAnB,GAAsC,QAAtC,EAAkD,KAAKH,KAAL,CAAWG,aAAX,EAA4B,CAAlF,CAAqF,CACnF,GAAI,CAACmG,UAAL,CAAiB,CACf,MAAO,KAAP,CACD,CACD,GAAIC,CAAAA,OAAO,CAAG,IAAd,CACA,GAAIf,CAAAA,MAAM,CAAGc,UAAU,CAACrD,MAAxB,CAEA,GAAIsC,CAAAA,IAAI,CAAGe,UAAU,CAACxG,GAAtB,CACA,GAAIA,CAAAA,GAAG,CAAG,CAAV,CACA,GAAIyC,KAAK,GAAK3C,IAAI,CAAC6E,MAAL,CAAc,CAAxB,EAA6BlC,KAAK,GAAK,CAA3C,CAA8C,CAC5CgD,IAAI,CAAG3F,IAAI,CAAC2C,KAAK,CAAG,CAAT,CAAJ,CAAgBzC,GAAvB,CACAA,GAAG,CAAGwG,UAAU,CAACxG,GAAX,CAAiByF,IAAvB,CACD,CACD,GAAIC,MAAM,CAAG,KAAK9F,KAAL,CAAWG,MAAX,CAAoB,CAApB,CAAwB,CAArC,CAAwC,CACtC0G,OAAO,CAAG,KAAV,CACD,CAED,MACE,qBAAC,IAAD,EAAM,KAAK,CAAE7C,UAAU,CAACC,OAAX,CAAmB,CAACE,MAAM,CAAC2C,eAAR,CAAyB,CACvDjB,IAAI,CAAEA,IADiD,CAEvD9B,cAAc,CAAE,QAFuC,CAAzB,CAAnB,CAAb,EAIE,oBAAC,IAAD,EAAM,KAAK,CAAEC,UAAU,CAACC,OAAX,CAAmB,CAACE,MAAM,CAAC4C,YAAR,CAAsB,CACpDhE,eAAe,CAAE,KAAK/C,KAAL,CAAW0F,aADwB,CAEpDJ,UAAU,CAAElF,GAFwC,CAAtB,CAAnB,CAAb,EAJF,CASE,oBAAC,IAAD,EAAM,KAAK,CAAE4D,UAAU,CAACC,OAAX,CAAmB,CAACE,MAAM,CAAC6C,WAAR,CAAnB,CAAb,EACG,KAAK1G,KAAL,CAAWE,UAAX,CAAsByE,GAAtB,CAA0B,SAACC,MAAD,CAAY,CACrC,GAAI0B,CAAAA,UAAU,CAAG1B,MAAM,CAAChF,IAAP,CAAY,MAAI,CAACI,KAAL,CAAWG,aAAvB,CAAjB,CACA,MACE,qBAAC,IAAD,EAAM,GAAG,CAAEyE,MAAM,CAAC+B,UAAlB,EACGL,UAAU,CAACvE,CAAX,CACC,oBAAC,IAAD,EAAM,KAAK,CAAE8B,MAAM,CAAC+C,YAApB,EAAmCN,UAAU,CAACvE,CAA9C,CADD,CAEC,IAHJ,CAIE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAC8E,aAAa,CAAE,KAAhB,CAAuBC,WAAW,CAAE,CAApC,CAAuCC,UAAU,CAAE,QAAnD,CAAb,EACE,oBAAC,IAAD,EAAM,KAAK,CAAE,CACXjF,KAAK,CAAE,EADI,CAEXjC,MAAM,CAAE,CAFG,CAGXmH,WAAW,CAAE,CAHF,CAIXC,YAAY,CAAE,CAJH,CAKXxE,eAAe,CAAE,CAACmC,MAAM,CAACM,WAAR,CAAsB,MAAI,CAACxF,KAAL,CAAWsE,YAAjC,CAAgDY,MAAM,CAACM,WAL7D,CAAb,EADF,CAQE,oBAAC,IAAD,EAAM,KAAK,CAAErB,MAAM,CAACqD,YAApB,EAAmC5H,gBAAgB,CAACgH,UAAU,CAACnE,CAAZ,CAAe,KAAf,CAAnD,CARF,CAJF,CADF,CAiBD,CAnBA,CADH,CATF,CADF,CAoCD,CArDD,IAqDO,CACL,MAAO,KAAP,CACD,CACF,C,uCAES,oBACHzB,CAAAA,QADG,CACS,KAAKV,KADd,CACHU,QADG,CAER,MACE,MAAKV,KAAL,CAAWE,UAAX,CAAsBuE,MAAtB,CAA+B,CAA/B,CACE,oBAAC,IAAD,EAAM,KAAK,CAAEf,UAAU,CAACC,OAAX,CAAmB,CAACE,MAAM,CAACsD,OAAR,CAAiB,CAC/C1E,eAAe,CAAE,KAAK/C,KAAL,CAAW+C,eADmB,CAAjB,CAAnB,CAAb,EAGE,oBAAC,IAAD,EAAM,KAAK,CAAEoB,MAAM,CAACuD,kBAApB,EACG/H,eAAe,CAAC,KAAKW,KAAL,CAAWa,UAAZ,CAAwB,KAAKnB,KAAL,CAAWG,MAAX,CAAoB,EAA5C,CAAgD,KAAKH,KAAL,CAAW2H,QAA3D,CAAqE,KAAK3H,KAAL,CAAW4H,UAAhF,CADlB,CAHF,CAQE,oBAAC,IAAD,MACE,oBAAC,UAAD,EAAY,UAAU,KAAtB,EACE,oBAAC,IAAD,MAEE,oBAAC,IAAD,EAAM,GAAG,CAAC,WAAV,CAAsB,KAAK,CAAEzD,MAAM,CAAC0D,gBAApC,EAEGpI,SAAS,CAAC,KAAKO,KAAL,CAAW8H,UAAZ,CAFZ,CAGGpI,aAAa,CAAC,KAAKY,KAAL,CAAWa,UAAZ,CAAwB,KAAKnB,KAAL,CAAW+H,kBAAnC,CAHhB,CAIG,KAAKzH,KAAL,CAAWE,UAAX,CAAsByE,GAAtB,CAA0B,SAAC+C,GAAD,CAAMnF,KAAN,CAAgB,CACzC,MACE,qBAAC,QAAD,CAAU,IAAV,EAAe,GAAG,CAAE,YAAcA,KAAlC,CAAyC,KAAK,CAAE,CAC9C2B,SAAS,CAAE,CAAC,CAACyD,MAAM,CAAEjH,QAAT,CAAD,CADmC,CAE9CmG,aAAa,CAAE,KAF+B,CAG9CE,UAAU,CAAE,UAHkC,CAI9ClH,MAAM,CAAE,MAJsC,CAK9CkF,QAAQ,CAAExC,KAAK,GAAK,CAAV,CAAc,UAAd,CAA2B,UALS,CAM9CqF,QAAQ,CAAE,GANoC,CAO9CC,YAAY,CAAE,MAAI,CAACnI,KAAL,CAAW2H,QAAX,EAAuB,MAAI,CAACrH,KAAL,CAAWa,UAAlC,EAAgD,MAAI,CAACb,KAAL,CAAWa,UAAX,CAAsB4D,MAAtB,CAA+B,CAA/E,CAAmF,CAAC,CAAD,CAAK,MAAI,CAACzE,KAAL,CAAWa,UAAX,CAAsB,CAAtB,EAAyB,CAAzB,CAAL,CAAmC,MAAI,CAACnB,KAAL,CAAW2H,QAAjI,CAA4I,IAP5G,CAAhD,EASG,MAAI,CAACvG,eAAL,CAAqB4G,GAAG,CAAC9H,IAAzB,CAA+B8H,GAAG,CAACxC,WAAnC,CAAgD3C,KAAhD,CATH,CADF,CAaD,CAdA,CAJH,CAmBG,KAAKtB,YAAL,CAAkB,KAAKjB,KAAL,CAAWG,aAA7B,CAnBH,CAFF,CAyBGZ,SAAS,CAAC,KAAKG,KAAL,CAAWoI,UAAZ,CAzBZ,CA0BGtI,eAAe,CAAC,KAAKQ,KAAL,CAAWE,UAAX,CAAsB,CAAtB,EAAyBN,IAA1B,CAAgC,KAAKF,KAAL,CAAWI,GAA3C,CAAgD,KAAKJ,KAAL,CAAW4H,UAA3D,CAAuE,KAAK5H,KAAL,CAAWqI,wBAAlF,CA1BlB,CADF,CADF,CARF,CADF,CA4CI,IA7CN,CAgDD,C,uBApVqB9I,KAAK,CAAC+I,S,EAuV9BvI,SAAS,CAACwI,YAAV,CAAyB,CACvBrI,IAAI,CAAE,EADiB,CAEvBoE,YAAY,CAAE,SAFS,CAGvBoB,aAAa,CAAE,SAHQ,CAIvBvF,MAAM,CAAE,GAJe,CAKvBC,GAAG,CAAE,EALkB,CAMvBiI,wBAAwB,CAAE,IANH,CAOvBG,YAAY,CAAE,sBAACjD,KAAD,CAAW,CAExB,CATsB,CAUvBlF,sBAAsB,CAAE,CAVD,CAAzB,CAaA,GAAM8D,CAAAA,MAAM,CAAGH,UAAU,CAACyE,MAAX,CAAkB,CAC/BhB,OAAO,CAAE,CACPN,aAAa,CAAE,KADR,CAEPuB,QAAQ,CAAE,QAFH,CADsB,CAK/BhB,kBAAkB,CAAE,CAClBiB,YAAY,CAAE,CADI,CALW,CAQ/Bd,gBAAgB,CAAE,CAChBV,aAAa,CAAE,KADC,CAEhBE,UAAU,CAAE,UAFI,CAGhBuB,MAAM,CAAE,CAHQ,CAIhBD,YAAY,CAAE,CAJE,CAKhBD,QAAQ,CAAE,QALM,CARa,CAe/BtE,iBAAiB,CAAE,CACjBsE,QAAQ,CAAE,QADO,CAEjB3E,cAAc,CAAE,YAFC,CAGjB8E,YAAY,CAAE,YAHG,CAfY,CAoB/BnE,OAAO,CAAE,CACPgE,QAAQ,CAAE,QADH,CAEP3E,cAAc,CAAE,YAFT,CApBsB,CAwB/Ba,SAAS,CAAE,CACTS,QAAQ,CAAE,UADD,CAETlF,MAAM,CAAE,MAFC,CAGT0E,gBAAgB,CAAE,WAHT,CAITiE,gBAAgB,CAAE,CAJT,CAxBoB,CA8B/BnE,QAAQ,CAAE,CACRU,QAAQ,CAAE,UADF,CAERjD,KAAK,CAAE,MAFC,CA9BqB,CAkC/BwD,YAAY,CAAE,CACZP,QAAQ,CAAE,UADE,CAEZkC,YAAY,CAAE,EAFF,CAGZwB,WAAW,CAAE,CAHD,CAlCiB,CAuC/BjC,eAAe,CAAE,CACfzB,QAAQ,CAAE,UADK,CAEflF,MAAM,CAAE,MAFO,CAGfkH,UAAU,CAAE,YAHG,CAvCc,CA4C/BN,YAAY,CAAE,CACZ1B,QAAQ,CAAE,UADE,CAEZjD,KAAK,CAAE,CAFK,CAGZjC,MAAM,CAAE,MAHI,CA5CiB,CAiD/B6G,WAAW,CAAE,CACXjE,eAAe,CAAE,SADN,CAEXwE,YAAY,CAAE,CAFH,CAGXyB,OAAO,CAAE,GAHE,CAIX3E,WAAW,CAAE,SAJF,CAKX0E,WAAW,CAAE,CALF,CAMX1D,QAAQ,CAAE,UANC,CAOX4D,OAAO,CAAE,CAPE,CAQX3D,UAAU,CAAE,CARD,CASXvB,cAAc,CAAE,QATL,CAjDkB,CA4D/BmD,YAAY,CAAE,CAACgC,QAAQ,CAAE,EAAX,CA5DiB,CA6D/B1B,YAAY,CAAE,CAAC2B,UAAU,CAAE,MAAb,CAAqBD,QAAQ,CAAE,EAA/B,CA7DiB,CAAlB,CAAf,CAgEA,cAAenJ,CAAAA,SAAf","sourcesContent":["import React from 'react'\nimport { View, TouchableWithoutFeedback, Text, Animated, Easing, ScrollView, StyleSheet } from 'react-native'\nimport {initData, drawYAxis, drawGuideLine, drawYAxisLabels, numberWithCommas, drawXAxis, drawXAxisLabels} from '../common'\n\nclass LineChart extends React.Component {\n  constructor (props) {\n    super(props)\n    let newState = initData(this.props.data, this.props.height, this.props.gap, this.props.numberOfYAxisGuideLine)\n    this.state = {\n      loading: false,\n      sortedData: newState.sortedData,\n      selectedIndex: null,\n      nowHeight: 200,\n      nowWidth: 200,\n      scrollPosition: 0,\n      nowX: 0,\n      nowY: 0,\n      max: newState.max,\n      fadeAnim: new Animated.Value(0),\n      guideArray: newState.guideArray\n    }\n\n    this.drawCoordinates = this.drawCoordinates.bind(this)\n    this.drawCoordinate = this.drawCoordinate.bind(this)\n    this.drawSelected = this.drawSelected.bind(this)\n  }\n\n  shouldComponentUpdate (nextProps, nextState) {\n    if (nextState.sortedData !== this.state.sortedData ||\n      nextState.selectedIndex !== this.state.selectedIndex ||\n      nextState.scrollPosition !== this.state.scrollPosition) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  componentDidMount () {\n    Animated.timing(this.state.fadeAnim, { toValue: 1, easing: Easing.bounce, duration: 1000, useNativeDriver: true }).start()\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.data !== this.props.data) {\n      this.setState(Object.assign({\n        fadeAnim: new Animated.Value(0)\n      }, initData(nextProps.data, this.props.height, this.props.gap, this.props.numberOfYAxisGuideLine)), () => {\n        Animated.timing(this.state.fadeAnim, { toValue: 1, easing: Easing.bounce, duration: 1000, useNativeDriver: true }).start()\n      })\n    }\n  }\n\n  getTransform (rad, width) {\n    let x = (0 - width / 2) * Math.cos(rad) - (0 - width / 2) * Math.sin(rad)\n    let y = (0 - width / 2) * Math.sin(rad) + (0 - width / 2) * Math.cos(rad)\n\n    return [ {translateX: (-1 * x) - width / 2}, {translateY: (-1 * y) + width / 2}, { rotate: rad + 'rad' } ]\n  }\n\n  drawCoordinate (index, start, end, backgroundColor, lineStyle, isBlank, lastCoordinate, seriesIndex) {\n    let key = 'line' + index\n    let dx = end.gap - start.gap\n    let dy = end.ratioY - start.ratioY\n    let size = Math.sqrt(dx * dx + dy * dy)\n    let angleRad = -1 * Math.atan2(dy, dx)\n    let height\n    let top\n    let topMargin = 20\n\n    if (start.ratioY > end.ratioY) {\n      height = start.ratioY\n      top = -1 * size\n    } else {\n      height = end.ratioY\n      top = -1 * (size - Math.abs(dy))\n    }\n\n    return (\n      <View key={key} style={{\n        height: this.props.height + topMargin,\n        justifyContent: 'flex-end'\n      }}>\n\n        <View style={StyleSheet.flatten([{\n          width: dx,\n          height: height,\n          marginTop: topMargin\n        }, styles.coordinateWrapper])}>\n          <View style={StyleSheet.flatten([{\n            top: top,\n            width: size,\n            height: size,\n            borderColor: isBlank ? backgroundColor : this.props.primaryColor,\n            borderTopWidth: 1,\n            transform: this.getTransform(angleRad, size)\n          }, styles.lineBox, lineStyle])} />\n          <View style={StyleSheet.flatten([styles.absolute, {\n            height: height - Math.abs(dy) - 2,\n            backgroundColor: lastCoordinate ? '#FFFFFF00' : backgroundColor,\n            marginTop: Math.abs(dy) + 2\n          }])} />\n        </View>\n        {!lastCoordinate && seriesIndex === 0 ? (\n          <View style={StyleSheet.flatten([styles.guideLine, {\n            width: dx,\n            borderRightColor: this.props.xAxisGridLineColor\n          }])} />\n        ) : null}\n        {seriesIndex === this.state.sortedData.length - 1 && (\n          <TouchableWithoutFeedback onPress={() => {\n            let selectedIndex = lastCoordinate ? index - 1 : index\n\n            let emptyCount = 0\n            this.state.sortedData.map((series) => {\n              if (series.data[selectedIndex].isEmpty) emptyCount++\n            })\n            if (emptyCount === this.state.sortedData.length) {\n              return null\n            }\n            // console.log('point', selectedIndex, point)\n\n            this.setState({\n              selectedIndex: selectedIndex\n            }, () => {\n              if (typeof this.props.onPress === 'function') {\n                this.props.onPress(selectedIndex)\n              }\n            })\n          }}>\n            <View style={{\n              width: dx,\n              height: '100%',\n              position: 'absolute',\n              marginLeft: -1 * dx / 2,\n              backgroundColor: '#FFFFFF01'\n            }} />\n          </TouchableWithoutFeedback>\n        )}\n\n      </View>\n    )\n  }\n\n  drawPoint (index, point, seriesColor) {\n    let key = 'point' + index\n    let size = 8\n    let color = !seriesColor ? this.props.primaryColor : seriesColor\n    if (this.state.selectedIndex === index) {\n      color = this.props.selectedColor\n    }\n\n    if (point.isEmpty || this.props.hidePoints) return null\n\n    return (\n      <TouchableWithoutFeedback key={key} onPress={() => {\n        this.setState({selectedIndex: index})\n      }}>\n\n        <View style={StyleSheet.flatten([styles.pointWrapper, {\n          width: size,\n          height: size,\n\n          left: point.gap - size / 2,\n          bottom: point.ratioY - size / 2,\n\n          borderColor: color,\n          backgroundColor: color\n\n        }])} />\n      </TouchableWithoutFeedback>\n    )\n  }\n  drawValue (index, point) {\n    let key = 'pointvalue' + index\n    let size = 200\n    return (\n\n      <View key={key} style={{\n        position: 'absolute',\n        left: index === 0 ? point.gap : point.gap - size / 2,\n        bottom: point.ratioY + 10,\n        backgroundColor: 'transparent',\n        width: index !== 0 ? 200 : undefined\n\n      }} >\n        {this.drawCustomValue(index, point)}\n\n      </View>\n\n    )\n  }\n\n  drawCustomValue (index, point) {\n    if (this.props.customValueRenderer) {\n      return this.props.customValueRenderer(index, point)\n    } else {\n      return null\n    }\n  }\n\n  drawCoordinates (data, seriesColor, seriesIndex) {\n    let result = []\n    let lineStyle = {\n      borderColor: !seriesColor ? this.props.primaryColor : seriesColor\n    }\n    let dataLength = data.length\n\n    for (let i = 0; i < dataLength - 1; i++) {\n      result.push(this.drawCoordinate(i, data[i], data[i + 1], '#FFFFFF00', lineStyle, false, false, seriesIndex))\n    }\n\n    if (dataLength > 0) {\n      result.push(this.drawPoint(0, data[0], seriesColor))\n      result.push(this.drawValue(0, data[0], seriesColor))\n    }\n\n    for (let i = 0; i < dataLength - 1; i++) {\n      result.push(this.drawPoint((i + 1), data[i + 1], seriesColor))\n      result.push(this.drawValue((i + 1), data[i + 1], seriesColor))\n    }\n\n    let lastData = Object.assign({}, data[dataLength - 1])\n    let lastCoordinate = Object.assign({}, data[dataLength - 1])\n    lastCoordinate.gap = lastCoordinate.gap + this.props.gap\n    result.push(this.drawCoordinate((dataLength), lastData, lastCoordinate, '#FFFFFF', {}, true, true, seriesIndex))\n\n    return result\n  }\n\n  getDistance (p1, p2) {\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2))\n  }\n\n  drawSelected (index) {\n    if (this.state.sortedData.length === 0) return null\n    let data = this.state.sortedData[0].data\n    let dataObject = data[index]\n    if (typeof (this.state.selectedIndex) === 'number' && this.state.selectedIndex >= 0) {\n      if (!dataObject) {\n        return null\n      }\n      let reverse = true\n      let bottom = dataObject.ratioY\n\n      let left = dataObject.gap\n      let gap = 0\n      if (index === data.length - 1 && index !== 0) {\n        left = data[index - 1].gap\n        gap = dataObject.gap - left\n      }\n      if (bottom > this.props.height * 2 / 3) {\n        reverse = false\n      }\n\n      return (\n        <View style={StyleSheet.flatten([styles.selectedWrapper, {\n          left: left,\n          justifyContent: 'center'\n        }])}>\n          <View style={StyleSheet.flatten([styles.selectedLine, {\n            backgroundColor: this.props.selectedColor,\n            marginLeft: gap\n          }])} />\n\n          <View style={StyleSheet.flatten([styles.selectedBox])}>\n            {this.state.sortedData.map((series) => {\n              let dataObject = series.data[this.state.selectedIndex]\n              return (\n                <View key={series.seriesName}>\n                  {dataObject.x ? (\n                    <Text style={styles.tooltipTitle}>{dataObject.x}</Text>\n                ) : null}\n                  <View style={{flexDirection: 'row', paddingLeft: 5, alignItems: 'center'}}>\n                    <View style={{\n                      width: 10,\n                      height: 5,\n                      marginRight: 3,\n                      borderRadius: 2,\n                      backgroundColor: !series.seriesColor ? this.props.primaryColor : series.seriesColor\n                    }} />\n                    <Text style={styles.tooltipValue}>{numberWithCommas(dataObject.y, false)}</Text>\n                  </View>\n                </View>\n              )\n            })}\n\n          </View>\n\n        </View>\n      )\n    } else {\n      return null\n    }\n  }\n\n  render () {\n    let {fadeAnim} = this.state\n    return (\n      this.state.sortedData.length > 0 ? (\n        <View style={StyleSheet.flatten([styles.wrapper, {\n          backgroundColor: this.props.backgroundColor\n        }])}>\n          <View style={styles.yAxisLabelsWrapper}>\n            {drawYAxisLabels(this.state.guideArray, this.props.height + 20, this.props.minValue, this.props.labelColor)}\n\n          </View>\n\n          <View>\n            <ScrollView horizontal>\n              <View>\n\n                <View ref='chartView' style={styles.chartViewWrapper}>\n\n                  {drawYAxis(this.props.yAxisColor)}\n                  {drawGuideLine(this.state.guideArray, this.props.yAxisGridLineColor)}\n                  {this.state.sortedData.map((obj, index) => {\n                    return (\n                      <Animated.View key={'animated_' + index} style={{\n                        transform: [{scaleY: fadeAnim}],\n                        flexDirection: 'row',\n                        alignItems: 'flex-end',\n                        height: '100%',\n                        position: index === 0 ? 'relative' : 'absolute',\n                        minWidth: 200,\n                        marginBottom: this.props.minValue && this.state.guideArray && this.state.guideArray.length > 0 ? -1 * this.state.guideArray[0][2] * this.props.minValue : null\n                      }} >\n                        {this.drawCoordinates(obj.data, obj.seriesColor, index)}\n                      </Animated.View>\n                    )\n                  })}\n                  {this.drawSelected(this.state.selectedIndex)}\n\n                </View>\n\n                {drawXAxis(this.props.xAxisColor)}\n                {drawXAxisLabels(this.state.sortedData[0].data, this.props.gap, this.props.labelColor, this.props.showEvenNumberXaxisLabel)}\n              </View>\n\n            </ScrollView>\n          </View>\n\n        </View>\n      ) : null\n\n    )\n  }\n}\n\nLineChart.defaultProps = {\n  data: [],\n  primaryColor: '#297AB1',\n  selectedColor: '#FF0000',\n  height: 100,\n  gap: 60,\n  showEvenNumberXaxisLabel: true,\n  onPointClick: (point) => {\n\n  },\n  numberOfYAxisGuideLine: 5\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  yAxisLabelsWrapper: {\n    paddingRight: 5\n  },\n  chartViewWrapper: {\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    margin: 0,\n    paddingRight: 0,\n    overflow: 'hidden'\n  },\n  coordinateWrapper: {\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignContent: 'flex-start'\n  },\n  lineBox: {\n    overflow: 'hidden',\n    justifyContent: 'flex-start'\n  },\n  guideLine: {\n    position: 'absolute',\n    height: '100%',\n    borderRightColor: '#e0e0e050',\n    borderRightWidth: 1\n  },\n  absolute: {\n    position: 'absolute',\n    width: '100%'\n  },\n  pointWrapper: {\n    position: 'absolute',\n    borderRadius: 10,\n    borderWidth: 1\n  },\n  selectedWrapper: {\n    position: 'absolute',\n    height: '100%',\n    alignItems: 'flex-start'\n  },\n  selectedLine: {\n    position: 'absolute',\n    width: 1,\n    height: '100%'\n  },\n  selectedBox: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 5,\n    opacity: 0.8,\n    borderColor: '#AAAAAA',\n    borderWidth: 1,\n    position: 'absolute',\n    padding: 3,\n    marginLeft: 5,\n    justifyContent: 'center'\n  },\n  tooltipTitle: {fontSize: 10},\n  tooltipValue: {fontWeight: 'bold', fontSize: 15}\n})\n\nexport default LineChart\n"]},"metadata":{},"sourceType":"module"}
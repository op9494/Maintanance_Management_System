{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{memo,useState}from\"react\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Background1 from\"../components/Background\";import Logo from\"../components/Logo\";import Header from\"../components/Header\";import Button from\"../components/Button\";import TextInput from\"../components/TextInput\";import BackButton from\"../components/BackButton\";import{theme}from\"../core/theme\";import{emailValidator,passwordValidator}from\"../core/utils\";import{loginUser}from\"../api/auth-api\";import Toast from\"../components/Toast\";var LoginScreen=function LoginScreen(_ref){var navigation=_ref.navigation;var _useState=useState({value:\"\",error:\"\"}),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState({value:\"\",error:\"\"}),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];var _onLoginPressed=function _onLoginPressed(){var emailError,passwordError,response;return _regeneratorRuntime.async(function _onLoginPressed$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!loading){_context.next=2;break;}return _context.abrupt(\"return\");case 2:emailError=emailValidator(email.value);passwordError=passwordValidator(password.value);if(!(emailError||passwordError)){_context.next=8;break;}setEmail(_objectSpread({},email,{error:emailError}));setPassword(_objectSpread({},password,{error:passwordError}));return _context.abrupt(\"return\");case 8:setLoading(true);_context.next=11;return _regeneratorRuntime.awrap(loginUser({email:email.value,password:password.value}));case 11:response=_context.sent;if(response.error){setError(response.error);}setLoading(false);case 14:case\"end\":return _context.stop();}}});};return React.createElement(Background1,null,React.createElement(Logo,null),React.createElement(Header,null,\"Welcome to Login\"),React.createElement(TextInput,{label:\"Email\",returnKeyType:\"next\",value:email.value,onChangeText:function onChangeText(text){return setEmail({value:text,error:\"\"});},error:!!email.error,errorText:email.error,autoCapitalize:\"none\",autoCompleteType:\"email\",textContentType:\"emailAddress\",keyboardType:\"email-address\"}),React.createElement(TextInput,{label:\"Password\",returnKeyType:\"done\",value:password.value,onChangeText:function onChangeText(text){return setPassword({value:text,error:\"\"});},error:!!password.error,errorText:password.error,secureTextEntry:true,autoCapitalize:\"none\"}),React.createElement(Button,{loading:loading,mode:\"contained\",onPress:_onLoginPressed},\"Login\"),React.createElement(Toast,{message:error,onDismiss:function onDismiss(){return setError(\"\");}}));};var styles=StyleSheet.create({row:{flexDirection:\"row\",marginTop:4},label:{color:theme.colors.secondary},link:{fontWeight:\"bold\",color:theme.colors.primary}});export default memo(LoginScreen);","map":{"version":3,"sources":["/home/op-pro/Desktop/Finalyear project/Admin/src/screens/LoginScreen.js"],"names":["React","memo","useState","Background1","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","loginUser","Toast","LoginScreen","navigation","value","error","email","setEmail","password","setPassword","loading","setLoading","setError","_onLoginPressed","emailError","passwordError","response","text","styles","StyleSheet","create","row","flexDirection","marginTop","label","color","colors","secondary","link","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { memo, useState } from \"react\";\nimport { TouchableOpacity, StyleSheet, Text, View } from \"react-native\";\nimport Background1 from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator, passwordValidator } from \"../core/utils\";\nimport { loginUser } from \"../api/auth-api\";\nimport Toast from \"../components/Toast\";\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\n  const [password, setPassword] = useState({ value: \"\", error: \"\" });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const _onLoginPressed = async () => {\n    if (loading) return;\n\n    const emailError = emailValidator(email.value);\n    const passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError) {\n      setEmail({ ...email, error: emailError });\n      setPassword({ ...password, error: passwordError });\n      return;\n    }\n\n    setLoading(true);\n\n    const response = await loginUser({\n      email: email.value,\n      password: password.value\n    });\n\n    if (response.error) {\n      setError(response.error);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <Background1>\n    \n      <Logo/>\n      <Header>Welcome to Login</Header>\n\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={text => setEmail({ value: text, error: \"\" })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={text => setPassword({ value: text, error: \"\" })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n        autoCapitalize=\"none\"\n      />\n      <Button loading={loading} mode=\"contained\" onPress={_onLoginPressed}>\n        Login\n      </Button>\n\n      <Toast message={error} onDismiss={() => setError(\"\")} />\n    </Background1>\n  );\n};\n\nconst styles = StyleSheet.create({\n  \n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  label: {\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary\n  }\n});\n\nexport default memo(LoginScreen);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _ from'lodash';import React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";var SINGLE_SERIES_WITH_NUMBERS=0;var SINGLE_SERIES_WITH_OBJECTS=1;var MULTI_SERIES=2;function flattenData(data){var numberCount=0;var objectWithYCount=0;var multiSeriesCount=0;var length=data.length;data.map(function(obj){if(typeof obj==='number'){numberCount++;}else if(typeof obj==='object'){if(typeof obj.y==='number'){objectWithYCount++;}else if(Array.isArray(obj.data)){multiSeriesCount++;}}});if(numberCount===length||objectWithYCount===length){return[{seriesName:'',data:data}];}else if(multiSeriesCount===length){return data;}else{return[{seriesName:'',data:[]}];}}function getMaxValue(data){var values=[];data.map(function(value){if(typeof value==='number'){values.push(value);}else if(typeof value==='object'){if(typeof value.y==='number'){values.push(value.y);}else if(Array.isArray(value.data)){value.data.map(function(v){if(typeof v==='number'){values.push(v);}else if(typeof v==='object'&&typeof v.y==='number'){values.push(v.y);}});}}});if(values.length===0)return 0;return Math.max.apply(null,values);}export var initData=function initData(dataProp,height,gap){var numberOfPoints=arguments.length>3&&arguments[3]!==undefined?arguments[3]:5;var guideArray,max,sortedData;if(!dataProp||!Array.isArray(dataProp)||dataProp.length===0){return{sortedData:[],max:0,guideArray:[]};}max=getMaxValue(dataProp);guideArray=getGuideArray(max,height,numberOfPoints);dataProp=flattenData(dataProp);sortedData=refineData(dataProp,max,height,gap);return{sortedData:sortedData,max:max,selectedIndex:null,nowHeight:200,nowWidth:200,scrollPosition:0,nowX:0,nowY:0,guideArray:guideArray};};export var refineData=function refineData(flattenData,max,height,gap){var result=[];flattenData.map(function(series){var dataProp=series.data;var object={seriesName:series.seriesName,seriesColor:series.color};var data=[];var length=dataProp.length;var simpleTypeCount=0;var objectTypeCount=0;for(var i=0;i<length;i++){var maxClone=max;if(maxClone===0){maxClone=1;}var dataObject={};if(typeof dataProp[i]==='number'){simpleTypeCount++;dataObject.ratioY=dataProp[i]/maxClone*height;dataObject.y=dataProp[i];dataObject={gap:i*gap,ratioY:dataProp[i]/maxClone*height,y:dataProp[i]};}else if(typeof dataProp[i]==='object'){var isEmpty=false;if(dataProp[i].y===null){var nullCount=0;for(var j=i;j<dataProp.length;j++){if(dataProp[j].y){break;}else{nullCount++;}}dataProp[i].y=dataProp[i-1].y+(dataProp[i+nullCount].y-dataProp[i-1].y)/(nullCount+1);isEmpty=true;}if(typeof dataProp[i].y==='number'&&dataProp[i].x){objectTypeCount++;dataObject={gap:i*gap,ratioY:dataProp[i].y/maxClone*height,x:dataProp[i].x,y:dataProp[i].y,isEmpty:isEmpty};}}data.push(dataObject);}var isValidate=false;if(simpleTypeCount===length||objectTypeCount===length){isValidate=true;}if(isValidate){object.data=data.sort(function(a,b){return a['gap']-b['gap'];});}else{object.data=[];}result.push(object);});return result;};export var getGuideArray=function getGuideArray(max,height){var numberOfPoints=arguments.length>2&&arguments[2]!==undefined?arguments[2]:5;var x=parseInt(max);var arr=[];var length;var temp;var postfix='';if(x===0){return[];}if(x>-1&&x<1000){x=Math.round(x*10);temp=1;}else if(x>=1000&&x<1000000){postfix='K';x=Math.round(x/100);temp=1000;}else if(x>=1000000&&x<1000000000){postfix='M';x=Math.round(x/100000);temp=1000000;}else{postfix='B';x=Math.round(x/100000000);temp=1000000000;}length=x.toString().length;x=_.round(x,-1*length+1)/10;var first=parseInt(x.toString()[0]);if(first>-1&&first<3){x=2.5*x/first;}else if(first>2&&first<6){x=5*x/first;}else{x=10*x/first;}for(var i=1;i<numberOfPoints+1;i++){var v=x/numberOfPoints*i;arr.push([v+postfix,v*temp/max*height,1*temp/max*height]);}return arr;};export var drawYAxis=function drawYAxis(){var color=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'#e0e0e0';return React.createElement(View,{style:{borderRightWidth:1,borderColor:color,width:1,height:'100%',marginRight:0}});};export var drawYAxisLabels=function drawYAxisLabels(arr,height,minValue){var color=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'#000000';return React.createElement(View,{style:{width:33,height:height,justifyContent:'flex-end',alignItems:'flex-end',marginBottom:minValue&&arr&&arr.length>0?-1*arr[0][2]*minValue:null,overflow:'hidden'}},arr.length===0?React.createElement(View,{key:'guide0',style:{bottom:0,position:'absolute'}},React.createElement(Text,{style:{fontSize:11}},\"0\")):arr.map(function(v,i){if(v[1]>height)return null;return React.createElement(View,{key:'guide'+i,style:{bottom:v[1]-5,position:'absolute'}},React.createElement(Text,{style:{fontSize:11,color:color}},v[0]));}));};export var drawGuideLine=function drawGuideLine(arr){var color=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'#e0e0e0';return React.createElement(View,{style:{width:'100%',height:'100%',position:'absolute'}},arr.map(function(v,i){return React.createElement(View,{key:'guide'+i,style:{width:'100%',borderTopWidth:1,borderTopColor:color,bottom:v[1],position:'absolute'}});}));};export var numberWithCommas=function numberWithCommas(x){var summary=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var postfix='';if(summary){if(x>=1000&&x<1000000){postfix='K';x=Math.round(x/100)/10;}else if(x>=1000000&&x<1000000000){postfix='M';x=Math.round(x/100000)/10;}else if(x>=1000000000&&x<1000000000000){postfix='B';x=Math.round(x/100000000)/10;}}return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,',')+postfix;};export var drawXAxis=function drawXAxis(){var color=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'#e0e0e0';return React.createElement(View,{style:{width:'100%',borderTopWidth:1,borderTopColor:color}});};export var drawXAxisLabels=function drawXAxisLabels(sortedData,gap){var color=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'#000000';var showEvenNumberXaxisLabel=arguments.length>3?arguments[3]:undefined;return React.createElement(View,{style:{width:'100%',paddingVertical:10,height:10}},sortedData.map(function(data,i){if(data['x']&&i%2===1||!showEvenNumberXaxisLabel){return React.createElement(View,{key:'label'+i,style:{position:'absolute',left:data['gap']-gap/2,width:gap,alignItems:'center'}},React.createElement(Text,{style:{fontSize:9,color:color}},data['x']));}else{return null;}}));};","map":{"version":3,"sources":["/home/op-pro/Desktop/Finalyear project/Admin/node_modules/react-native-pure-chart/examples/pure-chart/common.js"],"names":["_","React","SINGLE_SERIES_WITH_NUMBERS","SINGLE_SERIES_WITH_OBJECTS","MULTI_SERIES","flattenData","data","numberCount","objectWithYCount","multiSeriesCount","length","map","obj","y","Array","isArray","seriesName","getMaxValue","values","value","push","v","Math","max","apply","initData","dataProp","height","gap","numberOfPoints","guideArray","sortedData","getGuideArray","refineData","selectedIndex","nowHeight","nowWidth","scrollPosition","nowX","nowY","result","series","object","seriesColor","color","simpleTypeCount","objectTypeCount","i","maxClone","dataObject","ratioY","isEmpty","nullCount","j","x","isValidate","sort","a","b","parseInt","arr","temp","postfix","round","toString","first","drawYAxis","borderRightWidth","borderColor","width","marginRight","drawYAxisLabels","minValue","justifyContent","alignItems","marginBottom","overflow","bottom","position","fontSize","drawGuideLine","borderTopWidth","borderTopColor","numberWithCommas","summary","replace","drawXAxis","drawXAxisLabels","showEvenNumberXaxisLabel","paddingVertical","left"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport {View, Text} from 'react-native'\n\nconst SINGLE_SERIES_WITH_NUMBERS = 0\nconst SINGLE_SERIES_WITH_OBJECTS = 1\nconst MULTI_SERIES = 2\n\nfunction flattenData (data) {\n  let numberCount = 0\n  let objectWithYCount = 0\n  let multiSeriesCount = 0\n  let length = data.length\n  data.map((obj) => {\n    if (typeof obj === 'number') {\n      numberCount++\n    } else if (typeof obj === 'object') {\n      if (typeof obj.y === 'number') {\n        objectWithYCount++\n      } else if (Array.isArray(obj.data)) {\n        multiSeriesCount++\n      }\n    }\n  })\n\n  if (numberCount === length || objectWithYCount === length) {\n    return [{\n      seriesName: '',\n      data: data\n    }]\n  } else if (multiSeriesCount === length) {\n    return data\n  } else {\n    return [{\n      seriesName: '',\n      data: []\n    }]\n  }\n}\n\nfunction getMaxValue (data) {\n  let values = []\n\n  data.map((value) => {\n    if (typeof value === 'number') {\n      values.push(value)\n    } else if (typeof value === 'object') {\n      if (typeof value.y === 'number') {\n        values.push(value.y)\n      } else if (Array.isArray(value.data)) {\n        value.data.map((v) => {\n          if (typeof v === 'number') {\n            values.push(v)\n          } else if (typeof v === 'object' && typeof v.y === 'number') {\n            values.push(v.y)\n          }\n        })\n      }\n    }\n  })\n\n  if (values.length === 0) return 0\n\n  return Math.max.apply(null, values)\n}\n\nexport const initData = (dataProp, height, gap, numberOfPoints = 5) => {\n  let guideArray, max, sortedData\n  if (!dataProp || !Array.isArray(dataProp) || dataProp.length === 0) {\n    return {\n      sortedData: [],\n      max: 0,\n      guideArray: []\n    }\n  }\n\n  max = getMaxValue(dataProp)\n  guideArray = getGuideArray(max, height, numberOfPoints)\n\n  dataProp = flattenData(dataProp)\n\n  sortedData = refineData(dataProp, max, height, gap)\n  return {\n    sortedData: sortedData,\n    max: max,\n    selectedIndex: null,\n    nowHeight: 200,\n    nowWidth: 200,\n    scrollPosition: 0,\n    nowX: 0,\n    nowY: 0,\n    guideArray: guideArray\n  }\n}\n\nexport const refineData = (flattenData, max, height, gap) => {\n  let result = []\n\n  flattenData.map((series) => {\n    let dataProp = series.data\n    let object = {\n      seriesName: series.seriesName,\n      seriesColor: series.color\n    }\n    let data = []\n    let length = dataProp.length\n    let simpleTypeCount = 0\n    let objectTypeCount = 0\n\n    for (let i = 0; i < length; i++) {\n      let maxClone = max\n\n      if (maxClone === 0) {\n        maxClone = 1\n      }\n      let dataObject = {}\n\n      if (typeof dataProp[i] === 'number') {\n        simpleTypeCount++\n        dataObject.ratioY = dataProp[i] / maxClone * height\n        dataObject.y = dataProp[i]\n        dataObject = {\n          gap: i * gap,\n          ratioY: dataProp[i] / maxClone * height,\n          y: dataProp[i]\n        }\n      } else if (typeof dataProp[i] === 'object') {\n        let isEmpty = false\n        if (dataProp[i].y === null) {\n          let nullCount = 0\n          for (let j = i; j < dataProp.length; j++) {\n            if (dataProp[j].y) {\n              break\n            } else {\n              nullCount++\n            }\n          }\n          dataProp[i].y = dataProp[i - 1].y + (dataProp[i + nullCount].y - dataProp[i - 1].y) / (nullCount + 1)\n          isEmpty = true\n          /* if (dataProp[i + 1] && dataProp[i - 1]) {\n            dataProp[i].y = (dataProp[i - 1].y + dataProp[i + 1].y) / 2\n            isEmpty = true\n          } */\n        }\n        if (typeof dataProp[i].y === 'number' && dataProp[i].x) {\n          objectTypeCount++\n          dataObject = {\n            gap: i * gap,\n            ratioY: dataProp[i].y / maxClone * height,\n            x: dataProp[i].x,\n            y: dataProp[i].y,\n            isEmpty: isEmpty\n          }\n        }\n      }\n      data.push(dataObject)\n    }\n\n    // validation\n    let isValidate = false\n    if (simpleTypeCount === length || objectTypeCount === length) {\n      isValidate = true\n    }\n\n    if (isValidate) {\n      object.data = data.sort((a, b) => {\n        return a['gap'] - b['gap']\n        // return a[0] - b[0]\n      })\n    } else {\n      object.data = []\n    }\n\n    result.push(object)\n  })\n\n  return result\n}\n\nexport const getGuideArray = (max, height, numberOfPoints = 5) => {\n  let x = parseInt(max)\n\n  let arr = []\n  let length\n  let temp\n  let postfix = ''\n\n  if (x === 0) {\n    return []\n  }\n\n  if (x > -1 && x < 1000) {\n    x = Math.round(x * 10)\n    temp = 1\n  } else if (x >= 1000 && x < 1000000) {\n    postfix = 'K'\n    x = Math.round(x / 100)\n    temp = 1000\n  } else if (x >= 1000000 && x < 1000000000) {\n    postfix = 'M'\n    x = Math.round(x / 100000)\n    temp = 1000000\n  } else {\n    postfix = 'B'\n    x = Math.round(x / 100000000)\n    temp = 1000000000\n  }\n  length = x.toString().length\n\n  x = _.round(x, -1 * length + 1) / 10\n  let first = parseInt(x.toString()[0])\n\n  if (first > -1 && first < 3) { // 1,2\n    x = 2.5 * x / first\n  } else if (first > 2 && first < 6) { // 4,5\n    x = 5 * x / first\n  } else {\n    x = 10 * x / first\n  }\n\n  for (let i = 1; i < numberOfPoints + 1; i++) {\n    let v = x / numberOfPoints * i\n    arr.push([v + postfix, v * temp / max * height, 1 * temp / max * height])\n  }\n\n  return arr\n}\n\nexport const drawYAxis = (color = '#e0e0e0') => {\n  return (\n    <View style={{\n      borderRightWidth: 1,\n      borderColor: color,\n      width: 1,\n      height: '100%',\n      marginRight: 0\n\n    }} />\n\n  )\n}\n\nexport const drawYAxisLabels = (arr, height, minValue, color = '#000000') => {\n  return (\n    <View style={{\n      width: 33,\n      height: height,\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end',\n      marginBottom: minValue && arr && arr.length > 0 ? -1 * arr[0][2] * minValue : null,\n      overflow: 'hidden'\n    }}>\n\n      {arr.length === 0 ? (\n        <View\n          key={'guide0'}\n          style={{\n            bottom: 0,\n            position: 'absolute'\n          }}>\n          <Text style={{fontSize: 11}}>0</Text>\n        </View>\n      ) : arr.map((v, i) => {\n        if (v[1] > height) return null\n        return (\n          <View\n            key={'guide' + i}\n            style={{\n              bottom: v[1] - 5,\n              position: 'absolute'\n            }}>\n            <Text style={{fontSize: 11, color: color}}>{v[0]}</Text>\n          </View>\n        )\n      })}\n\n    </View>\n  )\n}\nexport const drawGuideLine = (arr, color = '#e0e0e0') => {\n  return (\n    <View style={{\n      width: '100%',\n      height: '100%',\n      position: 'absolute'\n    }}>\n\n      {arr.map((v, i) => {\n        return (\n          <View\n            key={'guide' + i}\n            style={{\n              width: '100%',\n              borderTopWidth: 1,\n              borderTopColor: color,\n              bottom: v[1],\n              position: 'absolute'\n            }} />\n        )\n      })}\n\n    </View>\n  )\n}\n\nexport const numberWithCommas = (x, summary = true) => {\n  let postfix = ''\n  if (summary) {\n    if (x >= 1000 && x < 1000000) {\n      postfix = 'K'\n      x = Math.round(x / 100) / 10\n    } else if (x >= 1000000 && x < 1000000000) {\n      postfix = 'M'\n      x = Math.round(x / 100000) / 10\n    } else if (x >= 1000000000 && x < 1000000000000) {\n      postfix = 'B'\n      x = Math.round(x / 100000000) / 10\n    }\n  }\n\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + postfix\n}\n\nexport const drawXAxis = (color = '#e0e0e0') => {\n  return (\n    <View style={{\n      width: '100%',\n      borderTopWidth: 1,\n      borderTopColor: color\n    }} />\n  )\n}\nexport const drawXAxisLabels = (sortedData, gap, color = '#000000', showEvenNumberXaxisLabel) => {\n  return (\n    <View style={{\n      width: '100%',\n      paddingVertical: 10,\n      height: 10\n    }}>\n      {sortedData.map((data, i) => {\n        // if (data[3] && i % 2 === 1) {\n        if (data['x'] && i % 2 === 1 || !showEvenNumberXaxisLabel) {\n          return (\n            <View key={'label' + i} style={{\n              position: 'absolute',\n              // left: data[0] - gap / 2,\n              left: data['gap'] - gap / 2,\n              width: gap,\n              alignItems: 'center'\n            }}>\n              <Text style={{fontSize: 9, color: color}}>\n                {\n                  // data[3]\n                  data['x']\n                }\n              </Text>\n            </View>\n          )\n        } else {\n          return null\n        }\n      })}\n    </View>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
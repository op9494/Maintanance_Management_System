{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import firebase from\"firebase/app\";import\"firebase/auth\";export var logoutUser=function logoutUser(){firebase.auth().signOut();};export var signInUser=function signInUser(_ref){var name,email,password;return _regeneratorRuntime.async(function signInUser$(_context){while(1){switch(_context.prev=_context.next){case 0:name=_ref.name,email=_ref.email,password=_ref.password;_context.prev=1;_context.next=4;return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email,password));case 4:firebase.auth().currentUser.updateProfile({displayName:name});return _context.abrupt(\"return\",{});case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);_context.t1=_context.t0.code;_context.next=_context.t1===\"auth/email-already-in-use\"?13:_context.t1===\"auth/invalid-email\"?14:_context.t1===\"auth/weak-password\"?15:_context.t1===\"auth/too-many-requests\"?16:17;break;case 13:return _context.abrupt(\"return\",{error:\"E-mail already in use.\"});case 14:return _context.abrupt(\"return\",{error:\"Invalid e-mail address format.\"});case 15:return _context.abrupt(\"return\",{error:\"Password is too weak.\"});case 16:return _context.abrupt(\"return\",{error:\"Too many request. Try again in a minute.\"});case 17:return _context.abrupt(\"return\",{error:\"Check your internet connection.\"});case 18:case\"end\":return _context.stop();}}},null,null,[[1,8]]);};export var loginUser=function loginUser(_ref2){var email,password;return _regeneratorRuntime.async(function loginUser$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:email=_ref2.email,password=_ref2.password;_context2.prev=1;_context2.next=4;return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email,password));case 4:return _context2.abrupt(\"return\",{});case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](1);_context2.t1=_context2.t0.code;_context2.next=_context2.t1===\"auth/invalid-email\"?12:_context2.t1===\"auth/user-not-found\"?13:_context2.t1===\"auth/wrong-password\"?13:_context2.t1===\"auth/too-many-requests\"?14:15;break;case 12:return _context2.abrupt(\"return\",{error:\"Invalid email address format.\"});case 13:return _context2.abrupt(\"return\",{error:\"Invalid email address or password.\"});case 14:return _context2.abrupt(\"return\",{error:\"Too many request. Try again in a minute.\"});case 15:return _context2.abrupt(\"return\",{error:\"Check your internet connection.\"});case 16:case\"end\":return _context2.stop();}}},null,null,[[1,7]]);};export var sendEmailWithPassword=function sendEmailWithPassword(email){return _regeneratorRuntime.async(function sendEmailWithPassword$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return _regeneratorRuntime.awrap(firebase.auth().sendPasswordResetEmail(email));case 3:return _context3.abrupt(\"return\",{});case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);_context3.t1=_context3.t0.code;_context3.next=_context3.t1===\"auth/invalid-email\"?11:_context3.t1===\"auth/user-not-found\"?12:_context3.t1===\"auth/too-many-requests\"?13:14;break;case 11:return _context3.abrupt(\"return\",{error:\"Invalid email address format.\"});case 12:return _context3.abrupt(\"return\",{error:\"User with this email does not exist.\"});case 13:return _context3.abrupt(\"return\",{error:\"Too many request. Try again in a minute.\"});case 14:return _context3.abrupt(\"return\",{error:\"Check your internet connection.\"});case 15:case\"end\":return _context3.stop();}}},null,null,[[0,6]]);};","map":{"version":3,"sources":["/home/op-pro/Desktop/Finalyear project/Admin/src/api/auth-api.js"],"names":["firebase","logoutUser","auth","signOut","signInUser","name","email","password","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","code","error","loginUser","signInWithEmailAndPassword","sendEmailWithPassword","sendPasswordResetEmail"],"mappings":"4DAAA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,eAAP,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC9BD,QAAQ,CAACE,IAAT,GAAgBC,OAAhB,GACD,CAFM,CAIP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,mJAASC,IAAT,MAASA,IAAT,CAAeC,KAAf,MAAeA,KAAf,CAAsBC,QAAtB,MAAsBA,QAAtB,kEAEhBP,QAAQ,CAACE,IAAT,GAAgBM,8BAAhB,CAA+CF,KAA/C,CAAsDC,QAAtD,CAFgB,SAGtBP,QAAQ,CAACE,IAAT,GAAgBO,WAAhB,CAA4BC,aAA5B,CAA0C,CACxCC,WAAW,CAAEN,IAD2B,CAA1C,EAHsB,gCAOf,EAPe,sEASd,YAAMO,IATQ,6BAUf,2BAVe,kBAcf,oBAde,kBAkBf,oBAlBe,kBAsBf,wBAtBe,qDAWX,CACLC,KAAK,CAAE,wBADF,CAXW,0CAeX,CACLA,KAAK,CAAE,gCADF,CAfW,0CAmBX,CACLA,KAAK,CAAE,uBADF,CAnBW,0CAuBX,CACLA,KAAK,CAAE,0CADF,CAvBW,0CA2BX,CACLA,KAAK,CAAE,iCADF,CA3BW,mEAAnB,CAkCP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,iJAASR,KAAT,OAASA,KAAT,CAAgBC,QAAhB,OAAgBA,QAAhB,oEAEfP,QAAQ,CAACE,IAAT,GAAgBa,0BAAhB,CAA2CT,KAA3C,CAAkDC,QAAlD,CAFe,0CAGd,EAHc,0EAKb,aAAMK,IALO,+BAMd,oBANc,mBAUd,qBAVc,mBAWd,qBAXc,mBAed,wBAfc,sDAOV,CACLC,KAAK,CAAE,+BADF,CAPU,2CAYV,CACLA,KAAK,CAAE,oCADF,CAZU,2CAgBV,CACLA,KAAK,CAAE,0CADF,CAhBU,2CAoBV,CACLA,KAAK,CAAE,iCADF,CApBU,oEAAlB,CA2BP,MAAO,IAAMG,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAAMV,KAAN,uMAE3BN,QAAQ,CAACE,IAAT,GAAgBe,sBAAhB,CAAuCX,KAAvC,CAF2B,0CAG1B,EAH0B,0EAKzB,aAAMM,IALmB,+BAM1B,oBAN0B,mBAU1B,qBAV0B,mBAc1B,wBAd0B,sDAOtB,CACLC,KAAK,CAAE,+BADF,CAPsB,2CAWtB,CACLA,KAAK,CAAE,sCADF,CAXsB,2CAetB,CACLA,KAAK,CAAE,0CADF,CAfsB,2CAmBtB,CACLA,KAAK,CAAE,iCADF,CAnBsB,oEAA9B","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nexport const logoutUser = () => {\n  firebase.auth().signOut();\n};\n\nexport const signInUser = async ({ name, email, password }) => {\n  try {\n    await firebase.auth().createUserWithEmailAndPassword(email, password);\n    firebase.auth().currentUser.updateProfile({\n      displayName: name\n    });\n\n    return {};\n  } catch (error) {\n    switch (error.code) {\n      case \"auth/email-already-in-use\":\n        return {\n          error: \"E-mail already in use.\"\n        };\n      case \"auth/invalid-email\":\n        return {\n          error: \"Invalid e-mail address format.\"\n        };\n      case \"auth/weak-password\":\n        return {\n          error: \"Password is too weak.\"\n        };\n      case \"auth/too-many-requests\":\n        return {\n          error: \"Too many request. Try again in a minute.\"\n        };\n      default:\n        return {\n          error: \"Check your internet connection.\"\n        };\n    }\n  }\n};\n\nexport const loginUser = async ({ email, password }) => {\n  try {\n    await firebase.auth().signInWithEmailAndPassword(email, password);\n    return {};\n  } catch (error) {\n    switch (error.code) {\n      case \"auth/invalid-email\":\n        return {\n          error: \"Invalid email address format.\"\n        };\n      case \"auth/user-not-found\":\n      case \"auth/wrong-password\":\n        return {\n          error: \"Invalid email address or password.\"\n        };\n      case \"auth/too-many-requests\":\n        return {\n          error: \"Too many request. Try again in a minute.\"\n        };\n      default:\n        return {\n          error: \"Check your internet connection.\"\n        };\n    }\n  }\n};\n\nexport const sendEmailWithPassword = async email => {\n  try {\n    await firebase.auth().sendPasswordResetEmail(email);\n    return {};\n  } catch (error) {\n    switch (error.code) {\n      case \"auth/invalid-email\":\n        return {\n          error: \"Invalid email address format.\"\n        };\n      case \"auth/user-not-found\":\n        return {\n          error: \"User with this email does not exist.\"\n        };\n      case \"auth/too-many-requests\":\n        return {\n          error: \"Too many request. Try again in a minute.\"\n        };\n      default:\n        return {\n          error: \"Check your internet connection.\"\n        };\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/Dialog/DialogScrollArea.tsx\";var DialogScrollArea=function(_React$Component){(0,_inherits2.default)(DialogScrollArea,_React$Component);function DialogScrollArea(){(0,_classCallCheck2.default)(this,DialogScrollArea);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(DialogScrollArea).apply(this,arguments));}(0,_createClass2.default)(DialogScrollArea,[{key:\"render\",value:function render(){return React.createElement(_reactNative.View,(0,_extends2.default)({},this.props,{style:[styles.container,this.props.style],__source:{fileName:_jsxFileName,lineNumber:52}}),this.props.children);}}]);return DialogScrollArea;}(React.Component);(0,_defineProperty2.default)(DialogScrollArea,\"displayName\",'Dialog.ScrollArea');var styles=_reactNative.StyleSheet.create({container:{borderColor:'rgba(0, 0, 0, .12)',borderTopWidth:_reactNative.StyleSheet.hairlineWidth,borderBottomWidth:_reactNative.StyleSheet.hairlineWidth,paddingHorizontal:24,flexGrow:1,flexShrink:1}});var _default=DialogScrollArea;exports.default=_default;","map":{"version":3,"sources":["DialogScrollArea.tsx"],"names":["DialogScrollArea","React","Component","styles","StyleSheet","container","borderColor","borderTopWidth","borderBottomWidth","paddingHorizontal","flexGrow","flexShrink"],"mappings":"g4BAAA,GAAA,CAAA,KAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,4JA8CMA,GAAAA,CAAAA,gB,iXAGK,CACP,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAU,KAAV,KAAA,CAAA,CAAsB,KAAK,CAAE,CAACG,MAAM,CAAP,SAAA,CAAmB,KAAA,KAAA,CAAhD,KAA6B,CAA7B,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CACG,KAAA,KAAA,CAFL,QACE,CADF,C,+BAJ2BF,KAAK,CAACC,S,CAA/BF,C,6BAAAA,gB,eACiB,mB,EAWvB,GAAMG,CAAAA,MAAM,CAAGC,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,WAAW,CADF,oBAAA,CAETC,cAAc,CAAEH,YAAAA,CAAAA,UAAAA,CAFP,aAAA,CAGTI,iBAAiB,CAAEJ,YAAAA,CAAAA,UAAAA,CAHV,aAAA,CAITK,iBAAiB,CAJR,EAAA,CAKTC,QAAQ,CALC,CAAA,CAMTC,UAAU,CAPd,CACa,CADoB,CAAlBP,CAAf,C,aAWeJ,gB","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogScrollArea`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a scrollable content in a Dialog. The component only provides appropriate styling.\n * For the scrollable content you can use `ScrollView`, `FlatList` etc. depending on your requirement.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ScrollView } from 'react-native';\n * import { Dialog, Portal, Text } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _hideDialog = () => this.setState({ visible: false });\n *\n *   render() {\n *     return (\n *       <Portal>\n *         <Dialog\n *           visible={this.state.visible}\n *           onDismiss={this._hideDialog}>\n *           <Dialog.ScrollArea>\n *             <ScrollView contentContainerStyle={{ paddingHorizontal: 24 }}>\n *               <Text>This is a scrollable area</Text>\n *             </ScrollView>\n *           </Dialog.ScrollArea>\n *         </Dialog>\n *       </Portal>\n *     );\n *   }\n * }\n * ```\n */\nclass DialogScrollArea extends React.Component<Props> {\n  static displayName = 'Dialog.ScrollArea';\n\n  render() {\n    return (\n      <View {...this.props} style={[styles.container, this.props.style]}>\n        {this.props.children}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderColor: 'rgba(0, 0, 0, .12)',\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    paddingHorizontal: 24,\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n});\n\nexport default DialogScrollArea;\n"]},"metadata":{},"sourceType":"script"}
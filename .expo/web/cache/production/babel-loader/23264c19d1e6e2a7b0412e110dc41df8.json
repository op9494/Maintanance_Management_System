{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _Icon=_interopRequireDefault(require(\"../Icon\"));var _jsxFileName=\"/Users/trensik/dev/react-native-paper/src/components/List/ListIcon.tsx\";var ListIcon=function(_React$Component){(0,_inherits2.default)(ListIcon,_React$Component);function ListIcon(){(0,_classCallCheck2.default)(this,ListIcon);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(ListIcon).apply(this,arguments));}(0,_createClass2.default)(ListIcon,[{key:\"render\",value:function render(){var _this$props=this.props,icon=_this$props.icon,iconColor=_this$props.color,style=_this$props.style;return React.createElement(_reactNative.View,{style:[styles.item,style],pointerEvents:\"box-none\",__source:{fileName:_jsxFileName,lineNumber:39}},React.createElement(_Icon.default,{source:icon,size:24,color:iconColor,__source:{fileName:_jsxFileName,lineNumber:40}}));}}]);return ListIcon;}(React.Component);exports.default=ListIcon;(0,_defineProperty2.default)(ListIcon,\"displayName\",'List.Icon');var styles=_reactNative.StyleSheet.create({item:{margin:8,height:40,width:40,alignItems:'center',justifyContent:'center'}});","map":{"version":3,"sources":["ListIcon.tsx"],"names":["ListIcon","React","Component","icon","iconColor","style","styles","StyleSheet","item","margin","height","width","alignItems","justifyContent"],"mappings":"gzBAAA,GAAA,CAAA,KAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,KAAA,CAAA,sBAAA,CAAA,OAAA,WAAA,CAAA,C,0FA6BqBA,GAAAA,CAAAA,Q,yUAGV,CAAA,GAAA,CAAA,WAAA,CACmC,KADnC,KAAA,CACCG,IADD,CAAA,WAAA,CAAA,IAAA,CACcC,SADd,CAAA,WAAA,CAAA,KAAA,CACyBC,KADzB,CAAA,WAAA,CAAA,KAAA,CAGP,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,CAAA,CAAM,KAAK,CAAE,CAACC,MAAM,CAAP,IAAA,CAAb,KAAa,CAAb,CAAmC,aAAa,CAAhD,UAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CACE,KAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,CAAA,CAAM,MAAM,CAAZ,IAAA,CAAoB,IAAI,CAAxB,EAAA,CAA8B,KAAK,CAAnC,SAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAFJ,EAEI,CAAA,CAAA,CADF,CADF,C,uBANkCL,KAAK,CAACC,S,CAAvBF,C,sDAAAA,Q,eACE,W,EAavB,GAAMM,CAAAA,MAAM,CAAGC,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAkB,CAC/BC,IAAI,CAAE,CACJC,MAAM,CADF,CAAA,CAEJC,MAAM,CAFF,EAAA,CAGJC,KAAK,CAHD,EAAA,CAIJC,UAAU,CAJN,QAAA,CAKJC,cAAc,CANlB,QACQ,CADyB,CAAlBN,CAAf","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Icon, { IconSource } from '../Icon';\n\ntype Props = {\n  /**\n   * Icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Color for the icon.\n   */\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show an icon in a list item.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.Icon color={Colors.blue500} icon=\"folder\" />\n * );\n *\n * export default MyComponent;\n * ```\n */\nexport default class ListIcon extends React.Component<Props> {\n  static displayName = 'List.Icon';\n\n  render() {\n    const { icon, color: iconColor, style } = this.props;\n\n    return (\n      <View style={[styles.item, style]} pointerEvents=\"box-none\">\n        <Icon source={icon} size={24} color={iconColor} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  item: {\n    margin: 8,\n    height: 40,\n    width: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}